.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:11:11 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 04/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" MàJ 21/07/2003 LDP-1.56
.TH INFNAN 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
infnan \- Traiter un résultat infini ou non-numérique (NaN).
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double infnan (int " error );
.fi
.SH DESCRIPTION
La fonction \fBinfnan()\fP renvoie une valeur acceptable pour un résultat
infini ou non numérique ("NaN", Not-a-Number).
La valeur \fIerror\fP peut être ERANGE pour indiquer l'infini, ou
n'importe quoi d'autre pour représenter NaN. \fIerrno\fP est également
renseigné.
.SH "VALEUR RENVOYÉE"
Si \fIerror\fP vaut ERANGE (Infini), HUGE_VAL est renvoyé.
.PP
Si \fIerror\fP vaut \-ERANGE (\-Infini), \-HUGE_VAL est renvoyé.
.PP
Si \fIerror\fP vaut autre chose, NAN est renvoyé.
.SH "ERREURS"
.TP
.B ERANGE
La valeur de \fIerror\fP est infinie (positive ou négative).
.TP
.B EDOM
La valeur de \fIerror\fP est non-numérique (NaN).
.SH EXEMPLE
.nf
	#include <signal.h>
	#include <math.h>
	#include <stdio.h>

	int
main (void)
{
	double x;

	/* Ignorer le signal d'erreur pour division par zéro */
	signal (SIGFPE, SIG_IGN);

	x = 1.0;
	x = x / 0.0;
	printf ("x = 1.0/0.0, isnan (x) = %d\\n", isnan (x));
	printf ("             isinf (x) = %d\\n", isinf (x));

	x = 0.0;
	x = x / 0.0;
	printf ("x = 0.0/0.0, isnan (x) = %d\\n", isnan (x));
	printf ("             isinf (x) = %d\\n", isinf (x));
	exit (0);
}

$ ./a.out
x = 1.0/0.0, isnan (x) = 0
             isinf (x) = 1
x = 0.0/0.0, isnan (x) = 1
             isinf (x) = 0
.fi
.SH "CONFORMITÉ"
BSD 4.3
.SH TRADUCTION
Christophe Blaess, 1996-2003.
