.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL, 2002-07-27 Walter Harms
.\" This was done with the help of the glibc manual.
.\"
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" 30/07/2003 LDP-1.58
.TH FPCLASSIFY 3 "30 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
fpclassify, isfinite, isnormal, isnan \- Macros de classification en virgule flottante.
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "int fpclassify(" x );
.sp
.BI "int isfinite(" x );
.sp
.BI "int isnormal(" x );
.sp
.BI "int isnan(" x );
.sp
.BI "int isinf(" x );
.fi
.SH DESCRIPTION
Les nombres en virgule flottante ont des valeurs spéciales, tels que
les infinis ou NaN. Avec la macro
.BI fpclassify( x ) 
vous pouvez connaître le type de
.IR x .
La macro prend en argument n'importe quel type d'expression en virgule
flottante. Le résultat est l'une des valeurs suivantes\ :
.TP
FP_NAN
.I x
est un "non-nombre".
.TP
FP_INFINITE
.I x
vaut plus ou moins l'infini.
.TP 
FP_ZERO
.I x
est nul.
.TP
FP_SUBNORMAL
.I x
est trop petit pour être représenté en format normalisé.
.TP
FP_NORMAL
si aucun des cas précédents n'est vrai, alors c'est qu'il doit
s'agir d'un nombre normal en virgule flottante;
.LP
Les autres macros fournissent une réponse courte à des questions standards.
.TP
isfinite(x)
(fpclassify(x) != FP_NAN && fpclassify(x) != FP_INFINITE)
.TP
isnormal(x)
(fpclassify(x) == FP_NORMAL)
.TP
isnan(x)
(fpclassify(x) == FP_NAN)
.TP
isinf(x)
(fpclassify(x) == FP_INFINITE)
.SH NOTE
.SH "CONFORMITÉ"
C99
.SH "VOIR AUSSI"
.BR isgreater (3),
.BR isinf (3)
.SH TRADUCTION
Christophe Blaess, 2003.
