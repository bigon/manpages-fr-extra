.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:20:12 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 07/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Mise a jour 21/07/1997
.\" màj 14/12/1998 - LDP man-pages 1.21 
.\" Mise à jour 06/06/2001 - LDP-man-pages-1.36
.\" MàJ 21/07/2003 LDP-1.56
.TH SETLOCALE 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
setlocale \- Fixe la localisation courante.
.SH SYNOPSIS
.nf
.B #include <locale.h>
.sp
.BI "char *setlocale (int " categorie ", const char * " locale );
.fi
.SH DESCRIPTION
La fonction
.B setlocale()
est utilisée pour indiquer ou demander la localisation courante du programme.
Si 
.I locale
n'est pas
.BR NULL ,
la localisation courante du programme est modifiée en fonction des arguments.
L'argument
.I categorie
détermine quelle partie de la localisation sera concernée par la modification :
.TP
.B LC_ALL
toute la localisation,
.TP
.B LC_COLLATE
la mise en correspondance des expressions rationnelles (classes d'équivalence
et intervalles), et le classement des chaînes de caractères,
.TP
.B LC_CTYPE
la classification de caractère, et les routines de conversions.
.TP
.B LC_MESSAGES
les messages en langue naturelle
.TP
.B LC_MONETARY
l'affichage des valeurs monétaires.
.TP
.B LC_NUMERIC
le symbole décimal (point, virgule, ...)
.TP
.B LC_TIME
la forme de la date et l'heure.
L'argument
.I locale
est un pointeur sur une chaîne de caractères contenant la configuration de la
.IR categorie .
Une telle chaîne peut être une constante bien connue, comme "C" ou "fr_FR"
(voir plus bas) ou une chaîne opaque renvoyée par un autre appel précédent
.BR setlocale .
.PP
Si
.I locale
est
.BR """""" ,
chaque partie de la localisation doit être modifiée en fonction des variables
d'environnement. Les détails d'implémentation varient.
Pour la GlibC, d'abord
.\" [This is false on my system - must check which library versions do this]
.\" if
.\" .I category
.\" is LC_MESSAGES, the environment variable LANGUAGE is inspected,
.\" then
(quelque soit la
.IR catégorie )
la variable d'environnement LC_ALL est examinée, puis la variable 
d'environnement avec le même nom que la catégorie (LC_COLLATE, LC_CTYPE,
LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME) et finalement la variable
LANG.
La première variable d'environnement existant est utilisée. Si sa valeur
est n'est pas une spécification de localication valide, la localisation n'est
pas modifiée, et
.B setlocale
renvoie NULL.
.\" The environment variable LANGUAGE may contain several, colon-separated,
.\" locale names.
.PP
Les localisations
.B """C"""
et
.B """"POSIX"""
sont portables, leur partie LC_CTYPE correspond au jeu de caractères ASCII
7 bits.
.PP
Un nom de localisation est typiquement de la forme
.IR langue "[_" territoire "][." codeset "][@" modificateur "]",
où la 
.I langue
est un code linguistique ISO 639, le
.I territoire
un code de pays ISO 3166, et
.I codeset
un jeu de caractères ou un identificateur d'encodage, comme
.B "ISO-8859-1"
ou
.BR "UTF-8" .
Pour voir une liste de toutes les localisations disponibles, essayez
"locale -a", cf.
.BR locale (1).
.PP
Si 
.I locale
est 
.BR NULL ,
la localisation courante est consultée, mais pas modifiée.
.PP
Au démarrage, la localisation portable
.B """C"""
est sélectionnée par défaut.
Un programme peut être rendu portable en appelant
.B setlocale(LC_ALL, """""")
lors de son initialisation, en utilisant les valeurs renvoyées par
.B localeconv()
pour les valeurs dépendant de la localisation, en utilisation les fonctions
multioctets et caractères larges pour traiter les chaines si
.BR "MB_CUR_MAX > 1" ,
et en utilisant
.BR strcoll() ", " wcscoll()
ou
.BR strxfrm() ", " wcsxfrm()
pour comparer les chaînes de caractères.
.SH "VALEUR RENVOYÉE"
Un appel reussi à
.B setlocale()
renvoie une chaine correspondant à la localisation.
Cette chaîne peut être allouée dans une zone statique.
La chaine est renvoyée de telle manière qu'un appel ultérieur avec
cette chaîne et la catégorie associée restituera cette partie de
la localisation du processus. La valeur renovyée est
.B NULL
si la demande ne peut pas être honorée.
.SH "CONFORMITÉ"
ANSI C, POSIX.1
.PP
Linux (c'est à dire la libc) supporte les localisations portables
.BR """C""" " et " """POSIX""" .
Il y avait auparavant un support pour le Latin-1 européen
.BR """ISO-8859-1""" 
(par exemple dans la libc-4.5.21 et libc-4.6.27), ainsi que
et le
.B """KOI-8"""
russe (plus précisement "koi-8r" dans la libc-4.6.27).
Il suffisait alors d'initialiser la variable d'environnement
LC_TYPE=ISO-8859-1 pour que isprint() fonctionne correctement.
Désormais les européens non-anglicistes doivent peiner un peu
plus pour installer les véritables fichiers de localisation.
.SH "VOIR AUSSI"
.BR locale (1),
.BR localedef (1),
.BR strcoll (3),
.BR isalpha (3),
.BR localeconv (3),
.BR strftime (3),
.BR charsets (4),
.BR locale (7)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
