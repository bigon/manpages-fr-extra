.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:34:42 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 23/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 30/07/2003 LDP-1.58
.\" Màj 20/07/2005 LDP-1.64
.\"
.TH FREXP 3 "30 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
frexp, frexpf, frexpl \- Conversion de réel en fraction normalisée.
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double frexp (double " x ", int *" exp );
.sp
.BI "float frexpf (float " x ", int *" exp );
.sp
.BI "long double frexpl (long double " x ", int *" exp );
.fi
.SH DESCRIPTION
La fonction \fBfrexp()\fP est utilisée pour scinder le nombre \fIx\fP en une
fraction normalisée et un exposant qui est stocké dans \fIexp\fP.
.SH "VALEUR RENVOYÉE"
La fonction \fBfrexp()\fP renvoie la fraction normalisée.

Si \fIx\fP est
non nul, \fIx\fP est égale à la fraction renvoyée multiplié par 2^\fIexp\fP.
La fraction est dans l'intervalle [1/2, 1[.

Si \fIx\fP est nul, la fraction normalisée vaut zéro et \fIexp\fP également.

.SH EXEMPLE
.nf
#include <stdio.h>
#include <math.h>
#include <float.h>
int main () {
        double d = 2560;
        int e;
        double f = frexp(d, &e);
        printf("frexp(%g, &e) = %g: %g * %d^%d = %g\en",
               d, f, f, FLT_RADIX, e, d);
        return 0;
}
.fi
.sp
Ce programme affiche
.sp
.in +5
frexp(2560, &e) = 0.625: 0.625 * 2^12 = 2560
.in
.SH "CONFORMITÉ"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH "VOIR AUSSI"
.BR ldexp (3),
.BR modf (3)

.SH TRADUCTION
Christophe Blaess, 1996-2003.
