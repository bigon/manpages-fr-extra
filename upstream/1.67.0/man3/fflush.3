.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fflush.3	5.4 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\"
.\"
.\" Traduction 23/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Mise a jour 21/07/1997
.\" Mise a jour 30/08/2000 LDP-1.31
.\" Mise à jour 04/06/2001 - LDP-man-pages-1.36
.\" Mise à jour 25/01/2002 - LDP-man-pages-1.47
.\" MàJ 21/07/2003 LDP-1.56
.TH FFLUSH 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
fflush \- Vider les buffers d'un flux.
.SH SYNOPSIS
.B #include <stdio.h>
.sp
.BI "int fflush (FILE *" flux );
.SH DESCRIPTION
La fonction
.B fflush
force l'écriture de toutes les données se trouvant dans les buffers de l'espace utilisateur, et met à jour le
.I flux
à travers la fonction sous-jacente d'écriture. Le statut d'ouverture du
flux n'est pas affecté.
.PP
Si l'argument
.I flux
est
.BR NULL ,
.B fflush
vide
.I tous
les flux en sortie.
.PP
Pour une version de cette fonction ignorant les verrouillages, voir
.BR unlocked_stdio (3).
.SH "VALEUR RENVOYÉE"
Si elle réussit intégralement, cette fonctions renvoie 0. Sinon,
elle renvoie
.BR EOF ,
et la variable
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EBADF
.I flux
n'est pas ouvert, ou du moins pas en écriture.
.PP
La fonction
.B fflush
peut aussi échouer, et positionner dans
.I errno
n'importe quelles erreurs spécifiées dans la routine
.BR write (2).
.SH NOTES
Remarquez que
.B fflush()
ne vide que les buffers fournis par la bibliothèque C dans l'espace utilisateur.
Pour s'assurer que les données sont écrites physiquement sur le disque, il faut
vider les buffers du noyau à l'aide par exemple de
.BR sync (2)
ou
.BR fsync (2).
.SH CONFORMITÉ
La fonction
.B fflush()
est conforme à ANSI X3.159-1989 (``ANSI C'').
.SH "VOIR AUSSI"
.BR fsync (2),
.BR sync (2),
.BR write (2),
.BR fclose (3),
.BR fopen (3),
.BR setbuf (3),
.BR unlocked_stdio (3)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
