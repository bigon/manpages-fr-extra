.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 19:10:00 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Aug 21 17:51:50 1994 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Sep  2 21:52:01 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" Modified Mon May 27 22:55:26 1996 by Martin Schulze (joey@linux.de)
.\"
.\"
.\" Traduction 04/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" MàJ 21/07/2003 LDP-1.56
.\"
.TH ISALPHA 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
isalpha, isalnum, isascii, isblank, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper, isxdigit \- Routines de classification de caractères.
.SH SYNOPSIS
.nf
.B #include <ctype.h>
.sp
.BI "int isalnum (int " c );
.nl
.BI "int isalpha (int " c );
.nl
.BI "int isascii (int " c );
.nl
.BI "int isblank (int " c );
.nl
.BI "int iscntrl (int " c );
.nl
.BI "int isdigit (int " c );
.nl
.BI "int isgraph (int " c );
.nl
.BI "int islower (int " c );
.nl
.BI "int isprint (int " c );
.nl
.BI "int ispunct (int " c );
.nl
.BI "int isspace (int " c );
.nl
.BI "int isupper (int " c );
.nl
.BI "int isxdigit (int " c );
.fi
.SH DESCRIPTION
Ces fonctions vérifient si le caractère
.IR c ,
qui doit avoir la valeur d'un
.B unsigned char
ou valoir
.BR EOF ,
rentre dans une catégorie donnée, en accord avec la localisation en cours.
.TP 
.B "isalnum()"
vérifie si l'on a un caractère alphanumérique. C'est équivalent à
.BI "(isalpha(" c ") || isdigit(" c "))" \fR.
.TP
.B "isalpha()"
vérifie si l'on a un caractère alphabétique. Dans la localisation \fB"C"\fP 
standard, c'est équivalent à
.BI "(isupper(" c ") || islower(" c "))" \fR.
Dans certaines localisations, il peut y avoir des caractères supplémentaires
pour lesquels
.B  isalpha()
est vrai--des lettres qui ne sont ni majuscules ni minuscules.
.TP
.B "isascii()"
vérifie si \fIc\fP est un
.I unsigned char
sur 7 bits, entrant dans le jeu de caractères ASCII. Cette fonction est
une extension BSD et SVID.
.TP
.B "isblank()"
vérifie si le caractère est blanc, c'est à dire un espace ou une tabulation.
C'est une extension GNU.
.TP
.B "iscntrl()"
vérifie si l'on a un caractère de contrôle.
.TP
.B "isdigit()"
vérifie si l'on a un chiffre (0 a 9).
.TP
.B "isgraph()"
vérifie s'il s'agit d'un caractère imprimable, à l'exception de l'espace.
.TP
.B "islower()"
vérifie si l'on a un caractère minuscule.
.TP
.B "isprint()"
vérifie s'il s'agit d'un caractère imprimable, y compris l'espace.
.TP
.B "ispunct()"
vérifie s'il s'agit d'un caractère imprimable, qui ne soit ni un espace,
ni un caractere alphanumérique.
.TP
.B "isspace()"
vérifie si l'on a un caractère blanc, d'espacement. Dans les localisations
.B """C"""
et
.B """POSIX"""
il s'agit de: espace, saut de page (form-feed,
.BR '\ef' ),
saut de ligne (newline,
.BR '\en' ),
retour chariot (carriage return,
.BR '\er' ),
tabulation horizontale
.RB ( '\et' ),
et tabulation verticale
.RB ( '\ev' ).
.TP
.B "isupper()"
vérifie si l'on a une lettre majuscule.
.TP
.B "isxdigit()"
vérifie s'il s'agit d'un chiffre héxadécimal, c'est à dire
.nl
.BR "0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F" .
.SH "VALEUR RENVOYÉE"
Les valeurs renvoyées sont non nulles si le caractère
.I c
entre dans la catégorie testée, et zéro sinon
.SH "CONFORMITÉ"
C ANSI, BSD 4.3.
\fBisascii()\fP est une extension BSD et SVID.
\fBisblank()\fP est une extension GNU.
.SH "NOTE"
L'appartenance d'un caractère à une catégorie dépend de la localisation en
cours. Par exemple
.B islower()
ne reconnaîtra pas un e\-accent\-aigu comme une minuscule dans la localisation
.B "C"
par défaut.
.SH "VOIR AUSSI"
.BR tolower (3),
.BR toupper (3),
.BR setlocale (3),
.BR ascii (7),
.BR locale (7)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
