.TH PTHREAD_MUTEXATTR 3 "21 juillet 2003" LinuxThreads "Manuel du programmeur Linux"


.SH NOM
pthread_mutexattr_init, pthread_mutexattr_destroy, pthread_mutexattr_settype_np, pthread_mutexattr_gettype_np \- attributs de création de mutex

.SH SYNOPSIS
.B #include <pthread.h>

.BI "int pthread_mutexattr_init(pthread_mutexattr_t *" attr ");"

.BI "int pthread_mutexattr_destroy(pthread_mutexattr_t *" attr ");"

.BI "int pthread_mutexattr_settype_np(pthread_mutexattr_t *" attr ", int " type ");"

.BI "int pthread_mutexattr_gettype_np(const pthread_mutexattr_t *" attr ", int *" type ");"

.SH DESCRIPTION
Les attributs de création de mutex peuvent être spécifiés lors de leur création
en les passant en tant que second argument à
.BR "pthread_mutex_init" (3).
.B "NULL"
est équivalent à demander les attributs par défaut.

.B "pthread_mutexattr_init"
initialise l'objet attributs de mutex
.I "attr"
et le remplit avec les valeurs par défaut.

.B "pthread_mutexattr_destroy"
détruit un objet attributs de mutex qui ne doit plus jamais être utilisé.
.B "pthread_mutexattr_destroy"
ne fait rien dans l'implémentation LinuxThreads. 

LinuxThreads supporte seulement un seul attribut de mutex\ : le type de mutex qui
peut être soit
.B "PTHREAD_MUTEX_FAST_NP"
pour des mutex rapides, soit
.B "PTHREAD_MUTEX_RECURSIVE_NP"
pour des mutex récursifs, soit
.B "PTHREAD_MUTEX_ERREURCHECK_NP"
pour des mutex avec vérification d'erreur.
Comme le suffixe
.B "NP"
l'indique, ce sont des extensions non-portables aux standard POSIX et ne
devraient donc jamais être employés dans un programme portable.

Le type de mutex détermine ce qui se passe si un thread essaye de verrouiller
un mutex déjà verrouillé par
.BR "pthread_mutex_lock" (3).
Si le mutex est de type rapide\ ;
.BR "pthread_mutex_lock" (3)
suspend simplement le thread appelant. Si le mutex est de type "avec
vérification d'erreur",
.BR "pthread_mutex_lock" (3)
rend la main immédiatement avec le code d'erreur
.BR "EDEADLK" .
Si le mutex est de type récursif, l'appel à
.BR "pthread_mutex_lock" (3)
rend la main immédiatement avec un code de retour de succès. Le nombre de
verrouillage par le thread possédant le mutex est enregistré dans le mutex. Le
thread possédant le mutex doit appeler
.BR "pthread_mutex_unlock" (3)
le même nombre de fois afin que le mutex passe à l'état déverrouillé.

Le type de mutex par défaut est rapide, c'est-à-dire 
.BR "PTHREAD_MUTEX_FAST_NP" .

.B "pthread_mutexattr_settype_np"
modifie l'attribut type_de_mutex dans
.I "attr"
à la valeur spécifiée par
.IR "type" .

.B "pthread_mutexattr_gettype_np"
récupère la valeur courante de l'attribut type de mutex dans
.I "attr"
et l'enregistre à l'emplacement pointé par
.IR "type" .

.SH "VALEUR RENVOYÉE"
.BR "pthread_mutexattr_init" ,
.B "pthread_mutexattr_destroy"
et
.B "pthread_mutexattr_gettype_np"
renvoient toujours 0.

.B "pthread_mutexattr_settype_np"
renvoient 0 en cas de succès et un code d'erreur non nul en cas d'erreur.

.SH ERREURS

En cas d'erreur,
.B "pthread_mutexattr_settype_np"
renvoie l'un des codes d'erreur suivants\ :
.TP
.B "EINVAL"
.I "type"
n'est ni
.B "PTHREAD_MUTEX_FAST_NP"
ni 
.B "PTHREAD_MUTEX_RECURSIVE_NP"
ni 
.B "PTHREAD_MUTEX_ERREURCHECK_NP"

.SH AUTEUR
Xavier Leroy <Xavier.Leroy@inria.fr>

.SH "VOIR AUSSI"
.BR "pthread_mutex_init" (3),
.BR "pthread_mutex_lock" (3),
.BR "pthread_mutex_unlock" (3).
.SH TRADUCTION
.RI "Thierry Vignaud <" tvignaud@mandrakesoft.com ">, 2000"

