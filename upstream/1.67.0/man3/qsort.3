.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-03-29, David Metcalfe
.\" Modified 1993-07-24, Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 05/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 04/07/2005 LDP-1.61
.\" Màj 08/07/2005 LDP-1.63
.\"
.TH QSORT 3 "15 novembre 2003" LDP "Manuel du programmeur Linux"
.SH NOM
qsort \- Trier une table.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "void qsort (void *" base ", size_t " nmemb ", size_t " size ,
.RS
.BI "int (*" compar ")(const void *, const void *));"
.fi
.SH DESCRIPTION
La fonction \fBqsort()\fP trie une table contenant \fInmemb\fP éléments de
taille \fIsize\fP.  L'argument \fIbase\fP pointe sur le début de la table.
.PP
Le contenu de la table est trié en ordre croissant, en utilisant la fonction
de comparaison pointée par \fIcompar\fP, laquelle est appelée avec deux
arguments pointant sur les objets à comparer.
.PP
La fonction de comparaison doit renvoyer un entier inférieur, égal, ou supérieur
à zéro si le premier argument est respectivement considéré comme inférieur,
égal ou supérieur au second. Si la comparaison des deux arguments renvoie
une égalité (valeur de retour nulle), l'ordre des deux éléments est indéfini.
.SH "VALEUR RENVOYÉE"
La fonction \fBqsort()\fP ne renvoie pas de valeur.
.SH "CONFORMITÉ"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH NOTE
Parmi les routines de la bibliothèque utilisables comme argument
.IR compar ,
on a
.IR strcmp ,
.IR alphasort ,
et
.IR versionsort .
.SH EXEMPLE
Pour un exemple d'utilisation, voir l'exemple de la page
.BR bsearch (3).
page.
.SH "VOIR AUSSI"
.BR sort (1),
.BR alphasort (3),
.BR strcmp (3),
.BR versionsort (3)

.SH TRADUCTION
Christophe Blaess, 1996-2003.
