.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 17:42:04 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 11/12/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" MàJ 21/07/2003 LDP-1.56
.TH WCSTOMBS 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
wcstombs \- Convertir une chaîne de caractères étendus en chaîne de caractères multi-octets.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "size_t wcstombs (char *" dest ", const wchar_t *" src ", size_t " n );
.fi
.SH DESCRIPTION
Si \fIdest\fP n'est pas un pointeur NULL, la fonction \fBwcstombs\fP convertit au maximum \fInwc\fP caractères larges
depuis la chaîne \fI*src\fP vers la séquence multi-octets située en \fIdest\fP.
Au plus \fIn\fP octets seront écrits dans \fIdest\fP. La conversion
débute dans l'état initial.
La conversion peut se terminer pour trois raisons\ :
.PP
1. Un caractère large que l'on ne peut pas représenter par une séquence multi-octets (dans la localisation en cours)
a été rencontré. Dans ce cas la fonction renverra (size_t)(-1).
.PP
2. La limite de longueur force l'arrêt. Dans ce cas, le nombre d'octets écrits
dans \fIdest\fP est renvoyé, mais l'état de décalage est perdu.
.PP
3. La chaîne de caractères larges a été complètement convertie, y compris le L'\\0'
final. Dans ce cas la conversion se termine dans l'état initial.
La fonction renvoie le nombre d'octets écrits dans \fIdest\fP,
sans compter l'octet '\\0'.
.PP
Si \fIdest\fP est NULL, la longueur \fIn\fP est ignorée, et la conversion
se déroule comme précédemment, sauf que les
octets convertis ne sont pas écrits en mémoire, et qu'il n'y a pas de limite de longueur en destination.
.PP
Pour éviter le cas 2 ci-dessus, le programmeur doit s'assurer que \fIn\fP
est supérieur ou égal à \fIwcstombs(NULL,src,0)+1\fP.
.SH "VALEUR RENVOYÉE"
La fonction \fBwcstombs\fP renvoie le nombre d'octets constituant la partie convertie de la séquence multi-octets,
sans compter l'octet nul final. Si elle rencontre un caractère large qu'elle ne peut convertir, elle renvoie (size_t)(-1).
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR wcsrtombs (3)
.SH NOTES
Le comportement de \fBwcstombs\fP dépend de la catégorie LC_CTYPE de la
localisation en cours.
.PP
La fonction \fBwcsrtombs\fP fournit une interface sûre en contexte-multithreads
pour la même fonctionnalité.
.SH TRADUCTION
Christophe Blaess, 1997-2003.
