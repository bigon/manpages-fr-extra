.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Traduction : Alain Portal
.\" 20/07/2005 LDP-1.64
.\" Màj 14/12/2005 LDP-1.65
.\"
.TH CFREE 3 "18 novembre 2003"  "" "Manuel du programmeur Linux"
.SH NOM
cfree \- Libérer la mémoire allouée.
.SH SYNOPSIS
.nf
.sp
.B "#include <stdlib.h>"
.sp
/* Dans SunOS 4 */
.BI "int cfree(void *" ptr );
.sp
/* Dans glibc ou FreeBSD libcompat */
.BI "void cfree(void *" ptr );
.sp
/* Dans SCO OpenServer */
.BI "void cfree(char *" ptr ", unsigned " num ", unsigned " size );
.sp
/* Dans Solaris watchmalloc.so.1 */
.BI "void cfree(void *" ptr ", size_t " nelem ", size_t " elsize );
.fi
.SH DESCRIPTION
Cette fonction ne devrait jamais être utilisée. Utilisez
.BR free (3)
à la place.
.SS "cfree avec un argument"
Dans la GlibC, la fonction
.B cfree()
est un synonyme de
.BR free (3),
«\ ajoutée pour être compatible avec SunOS\ ».
.LP
D'autres systèmes ont d'autres fonctions avec ce nom.
La déclaration se trouve parfois dans
.I <stdlib.h>
et parfois dans
.IR <malloc.h> .
.LP
.SS "cfree avec trois arguments"
Certaines versions SCO et Solaris ont des bibliothèques malloc avec
.B cfree()
apparemment comme une analogie à
.BR calloc (3).
.LP
Si vous en avez besoin et que vous faites un portage, ajoutez
.sp
.in +5
#define cfree(p, n, s) free((p))
.in
.sp
dans votre fichier
.LP
Une question fréquemment posée est\ : «\ Puis-je utiliser
.B free()
pour libérer de la mémoire allouée avec
.BR calloc() ,
ou bien dois-je utiliser
.BR cfree() \ ?\ »
Réponse\ : utilisez
.BR free() .
.LP
Un manuel SCO dit\ : «\ La routine cfree est fournie pour être conforme à la
norme iBCSe2 et faciliter les appels free. Les arguments num et size de cfree
ne sont pas utilisés.\ »
.SH "VALEUR RENVOYÉE"
La version SunOS de
.B cfree()
(qui est un synonyme de
.BR free() )
renvoie 1 si elle réussit et 0 si elle échoue.
En cas d'erreur,
.I errno
est positionnée à EINVAL\ : la valeur de
.I ptr
n'était pas un pointeur vers un bloc précédemment alloué par l'une des
routines de la famille malloc().
.SH "CONFORMITÉ"
La version trois arguments de
.B cfree()
est utilisée par SCO pour être conforme à la norme iBCSe2\ :
Intel386 Binary Compatibility Specification, Edition 2.
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Alain Portal
<aportal AT univ-montp2 DOT fr> le 20 juillet 2005
et révisée le 14 décembre 2005.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ cfree\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
