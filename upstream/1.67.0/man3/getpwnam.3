.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 1996-05-27 by Martin Schulze (joey@linux.de)
.\" Modified 2003-11-15 by aeb
.\"
.\" Traduction 03/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.\" Màj 06/06/2001 LDP-1.36
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 08/07/2005 LDP-1.63
.\" Màj 20/07/2005 LDP-1.64
.\"
.TH GETPWNAM 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
getpwnam, getpwnam_r, getpwuid, getpwuid_r \- Lire un enregistrement du fichier des mots de passe.
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <pwd.h>
.sp
.BI "struct passwd *getpwnam (const char * " name );
.sp
.BI "struct passwd *getpwuid (uid_t " uid );
.sp
.BI "int getpwnam_r(const char *" name ", struct passwd *" pwbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct passwd **" pwbufp );
.sp
.BI "int getpwuid_r(uid_t " uid ", struct passwd *" pwbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct passwd **" pwbufp );
.fi
.SH DESCRIPTION
La fonction
.B getpwnam
renvoie un pointeur sur une structure contenant
les divers champs de l'enregistrement de
.I /etc/passwd
correspondant au nom d'utilisateur
.IR name .
.PP
La fonction
.B getpwuid()
renvoie un pointeur sur une structure contenant
les divers champs de l'enregistrement de
.I /etc/passwd
correspondant à l'ID d'utilisateur
.IR uid .
.PP
Les fonctions
.B getpwnam_r()
et
.B getpwuid_r()
cherchent les mêmes informations mais enregistrent la structure passwd trouvée
dans l'espace pointé par
.IR pwbuf .
Cette structure passwd contient des pointeurs vers des chaînes,
et ces chaînes sont enregistrées dans le tampon
.I buf
de taille
.IR buflen .
Un pointeur vers le résultat (en cas de succès) ou NULL (au cas où aucune
entrée n'ait été trouvée ou qu'une erreur ne soit survenue) est enregistré dans
.RI * pwbufp .
.PP
La structure \fIpasswd\fP est définie dans \fI<pwd.h>\fP ainsi\ :
.sp
.RS
.nf
struct passwd {
  char   *pw_name;   /* Nom d'utilisateur             */
  char   *pw_passwd; /* Mot de passe                  */
  uid_t   pw_uid;    /* ID de l'utilisateur           */
  gid_t   pw_gid;    /* ID du groupe de l'utilisateur */
  char   *pw_gecos;  /* Nom réel de l'utilisateur     */
  char   *pw_dir;    /* Répertoire de connexion       */
  char   *pw_shell;  /* Programme Shell de connexion  */
};
.fi
.RE
.PP
La taille maximum nécessaire pour
.I buf
peut être récupérée en utilisant
.BR sysconf (3)
avec le paramètre _SC_GETPW_R_SIZE_MAX.
.SH "VALEUR RENVOYÉE"
Les fonctions
.B getpwnam()
et
.B getpwuid()
renvoient un pointeur sur une structure passwd, ou NULL si une erreur se
produit, ou si l'enregistrement correspondant n'est pas trouvé.
En cas d'erreur,
.I errno
est positionnée en conséquence. Si on souhaite vérifier
.I errno
après l'appel, celle-ci devrait être positionnée à zéro avant l'appel.
.LP
La valeur de retour peut pointer vers une zone statique et donc être écrasée
par des appels successifs à
.BR getpwent() ,
.BR getpwnam() ,
ou
.BR getpwuid() .
.LP
Les fonctions
.B getpwnam_r()
et
.B getpwuid_r()
renvoyent zéro si elles réussissent. En cas d'erreur, une valeur d'erreur est
renvoyée.
.SH ERREURS
.TP
.BR 0 " ou " ENOENT " ou " ESRCH " ou " EBADF " ou " EPERM " ou ... "
Le nom
.I name
ou l'identifiant
.I uid
n'ont pas été trouvés.
.TP
.B ENOMEM
Pas assez de mémoire pour allouer la structure passwd.
.\"
.TP
.B EIO
Erreur d'entrée/sortie.
.TP
.B EINTR
Un signal a été capturé.
.TP
.B EMFILE
Le nombre maximal (OPEN_MAX) de fichiers ouverts pour le processus est atteint.
.TP
.B ENFILE
Le nombre maximal de fichiers ouverts sur le système est atteint.
.TP
.B ERANGE
L'espace tampon fourni est insuffisant.
.SH FICHIERS
.TP
.I /etc/passwd
Base de données des mots de passe.
.fi
.SH "CONFORMITÉ"
SVID 3, BSD 4.3, POSIX 1003.1-2003
.SH NOTES
La description "VALEUR RENVOYÉE" ci-dessus vient de POSIX 1003.1-2003. Elle ne
considère pas le cas «\ non trouvé\ » commme une erreur, et ne spécifie pas
.I errno
dans ce cas. Cela rend la détection d'erreur impossible. On peut dire que,
d'après POSIX,
.I errno
est inchangée dans le cas où aucune entrée n'est trouvée. Des essais sur
de nombreux systèmes Unix ont fait apparaître différentes valeurs dans ce
cas\ : 0, ENOENT, EBADF, ESRCH, EWOULDBLOCK, EPERM et probablement d'autres.
.\" more precisely:
.\" AIX 5.1 - gives ESRCH
.\" libc, glibc, Irix 6.5 - give ENOENT
.\" FreeBSD 4.8, OpenBSD 3.2, NetBSD 1.6 - give EPERM
.\" SunOS 5.8 - gives EBADF
.\" Tru64 5.1b, HP-UX-11i, SunOS 5.7 - give 0
.SH "VOIR AUSSI"
.BR fgetpwent (3),
.BR getgrnam (3),
.BR getpwent (3),
.BR setpwent (3),
.BR endpwent (3),
.BR getpw (3),
.BR putpwent (3),
.BR passwd (5)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
