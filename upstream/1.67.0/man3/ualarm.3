.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" 30/07/2003 LDP-1.58
.\" Màj 06/07/2005 LDP-1.62
.\"
.TH UALARM 3 "30 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
ualarm \- Programmer un signal après un nombre donné de microsecondes.
.SH SYNOPSIS
.nf
/* version BSD */
.B "#include <unistd.h>"
.sp
.BI "unsigned int"
.br
.BI "ualarm(unsigned int " usecs ", unsigned int " interval );
.sp
/* version SUSv2 */
.B "#define _XOPEN_SOURCE 500"
.br
.B "#include <unistd.h>"
.sp
.BI "useconds_t ualarm(useconds_t " usecs ", useconds_t " interval );
.fi
.SH DESCRIPTION
La fonction \fBualarm()\fP programme le signal SIGALRM pour qu'il soit
envoyé au processus appelant après (au moins)
.I usecs
micro-secondes.
Le délai peut être légèrement allongé par la charge système, par le temps
passé à traiter l'appel-système, ou par la granularité des
timers système.
.LP
À moins d'être capturé ou ignoré, ce signal terminera le processus.
.LP
Si l'argument
.I interval
est non-nul, d'autres signaux SIGALR seront envoyés toutes les
.I interval
micro-secondes après le premier.
.SH "VALEUR RENVOYÉE"
Cette fonction renvoie le nombre de micro-secondes restant de l'appel
précédent, ou zéro si aucune alarme n'est en attente.
.SH ERREURS
.TP
EINTR
Interruption par un signal.
.TP
EINVAL
\fIusecs\fP ou \fIinterval\fP est plus grand que 1000000 (1 seconde)
(sur les systèmes qui considèrent qu'il s'agit d'une erreur).
.SH "CONFORMITÉ"
BSD 4.3, POSIX 1003.1-2003.
BSD 4.3, SUSv2 et POSIX ne définissent pas d'erreurs.
.SH NOTES
Le type
.B useconds_t
est un entier non signé capable de contenir des entiers dans
l'intervalle [0,1000000].
Ce type est défini dans
.I <sys/types.h>
inclus par
.I <unistd.h>
mais GlibC ne le définit que si _XOPEN_SOURCE a une valeur supérieure ou
égale à 500, ou si _XOPEN_SOURCE et _XOPEN_SOURCE_EXTENDED sont toutes deux
définies.
.\" useconds_t also gives problems on HPUX 10.
Les programmes seront plus portables s'ils évitent d'utiliser ce type.
.LP
Les interactions entre cette fonction et les autres temporisations
comme
.IR alarm (),
.IR sleep (),
.IR nanosleep (),
.IR setitimer (),
.IR timer_create (),
.IR timer_delete (),
.IR timer_getoverrun (),
.IR timer_gettime (),
.IR timer_settime (),
.IR usleep ()
n'est pas spécifiée.
.LP
Cette fonction est obsolète, utilisez
.BR nanosleep (2)
ou
.BR setitimer (2)
à sa place.
.SH "VOIR AUSSI"
.BR alarm (2),
.BR getitimer (2),
.BR nanosleep (2),
.BR select (2),
.BR setitimer (2),
.BR usleep (3)
.SH TRADUCTION
Christophe Blaess, 2003.
