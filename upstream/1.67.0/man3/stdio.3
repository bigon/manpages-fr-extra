.\" Copyright (c) 1990, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)stdio.3	6.5 (Berkeley) 5/6/91
.\"
.\" Converted for Linux, Mon Nov 29 16:07:22 1993, faith@cs.unc.edu
.\"
.\"
.\" Traduction 07/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 28/04/1998 LDP-1.19
.\" Màj 26/01/2002 LDP-1.47
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 20/07/2005 LDP-1.64
.\"
.TH STDIO 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
stdio \- Bibliothèque standard de fonctions d'entrées-sorties.
.SH SYNOPSIS
.B #include <stdio.h>
.sp
.B FILE *stdin;
.br
.B FILE *stdout;
.br
.B FILE *stderr;
.SH DESCRIPTION
Cette bibliothéque standard fournit une interface simple et efficace pour les
entrées-sorties avec tampons. Les entrées et les sorties sont projetées dans
des flux de données logiques, et les caractéristiques des entrées-sorties
physiques sont masquées. Les fonctions et les macros sont présentées rapidement
ci-dessous. Des informations supplémentaires sont disponibles dans leurs pages
de manuel individuelles.
.PP
Un flux est associé avec un fichier externe (qui peut aussi être un dispositif
physique) en
.I ouvrant
un fichier (ceci peut impliquer la création d'un nouveau fichier). La création
d'un fichier déjà existant efface son contenu précédent. Si un fichier
supporte les demandes de positionnement (par exemple un fichier sur disque,
contrairement à un terminal), alors
.I l'indicateur de position du fichier
associé au flux est placé au début du fichier (octet zéro), à moins que
le fichier soit ouvert en mode d'ajout. Si le mode d'ajout est utilisé,
l'indicateur de position est placé à la fin du fichier.
L'indicateur de position est mis à jour après chaque lecture, écriture, ou
repositionnement. Toutes les entrées se déroulent comme si les caractères
étaient lus par des appels successifs à la fonction
.BR fgetc (3).
Toutes les sorties ont lieu comme si les caractères étaient envoyés à
des appels successifs à la fonction
.BR fputc (3).
.PP
Un fichier est dissocié d'un flux en
.I fermant
le fichier. Les flux de sortie sont vidés (flush) avant que le flux soit
dissocié du fichier. Ceci signifie que le contenu des tampons pas encore
écrits est transféré dans l'environnement de l'hôte.
La valeur d'un pointeur sur un objet
.B FILE
(fichier) est indéfinie après la fermeture d'un fichier.
.PP
Un fichier peut être réouvert plus tard par le même programme ou par un
autre, et son contenu relu ou modifié (si l'on peut placer l'indicateur
de positionnement au début).
Si la fonction \fBmain\fP se termine, ou si la fonction
.BR exit (3)
est invoquée, tous les fichiers sont fermés (tous les tampons de sortie sont
transférés par fflush) avant la fin du programe. Les autres méthodes
d'abandon du programme, telles que
.BR abort (3)
ou
.BR _exit (2)
ne s'occupent pas de fermer proprement les fichiers.
.PP
Au démarrage du programme, trois flux de texte sont prédéfinis et n'ont
pas besoin d'être ouverts explicitement\ :
.I l'entrée standard
(pour la lecture des données),
.I la sortie standard
(pour l'écriture des données), et
.I le flux d'erreur standard
(pour les messages de diagnostique).
Ces flux sont nommés
.IR stdin , stdout
et
.IR stderr .
À l'ouverture, le flux d'erreur n'a pas de tampon, l'entrée standard et la
sortie standard ont des tampons complets si et seulement si ils ne se
réfèrent pas à un périphérique interactif.
.PP
Les flux de sortie qui s'adressent à un peripherique terminal disposent
toujours d'un tampon de ligne par défaut. Les caractères sont conservés
dans le tampon jusqu'à un saut de ligne, ou jusqu'à ce qu'une lecture soit
demandée sur un flux associé au même terminal. Il peut être nécessaire
de déclencher intentionnellement l'écriture effective sur le terminal en
invoquant
.BR fflush (3).
.PP
La bibliothèque standard
.B stdio
fait partie de la bibliothèque
.B libc
et ses routines sont chargées automatiquement par les
compilateurs
.BR cc (1)
et
.BR pc (1)
si besoin est.
Les sections
.B SYNOPSIS
des pages de manuel mentionnées plus bas indiquent les fichiers d'en-tête nécessaires,
l'allure des déclarations de fonctions, et les variables externes utiles.
.PP
Les noms ci-dessous correspondent à des macros. On ne peut pas les réutiliser
sans supprimer leur définition précédente avec
.BR #undef :
.BR BUFSIZ ,
.BR EOF ,
.BR FILENAME_MAX ,
.BR FOPEN_MAX ,
.BR L_cuserid ,
.BR L_ctermid ,
.BR L_tmpnam,
.BR NULL ,
.BR SEEK_END ,
.BR SEEK_SET ,
.BR SEE_CUR ,
.BR TMP_MAX ,
.BR clearerr ,
.BR feof ,
.BR ferror ,
.BR fileno ,
.BR fropen ,
.BR fwopen ,
.BR getc ,
.BR getchar ,
.BR putc ,
.BR putchar ,
.BR stderr ,
.BR stdin ,
.BR stdout .
Il existe des définitions sous forme de fonctions des macros
.BR feof ,
.BR ferror ,
.BR clearerr ,
.BR fileno ,
.BR getc ,
.BR getchar ,
.BR putc ,
et
.B putchar
qui seront utilisées si la définition de la macro est explicitement
supprimée.

.SH "LISTE DES FONCTIONS"
.TP
.B Fonction
.B Description
.TP
.B clearerr
vérifie et réinitialise l'état d'un flux.
.TP
.B fclose
ferme un flux.
.TP
.B fdopen
fonction d'ouverture d'un flux.
.TP
.B feof
vérifie et réinitialise l'état d'un flux.
.TP
.B ferror
vérifie et réinitialise l'état d'un flux.
.TP
.B fflush
transfère les tampons d'un flux.
.TP
.B fgetc
lit le caractère ou le mot suivant depuis un flux d'entrée.
.TP
.B fgetline
lit une ligne depuis un flux d'entrée.
.TP
.B fgetpos
lit la position courante d'un flux.
.TP
.B fgets
lit une ligne depuis un flux d'entrée.
.TP
.B fileno
renvoie le descripteur (de type entier) de l'argument flux.
.TP
.B fopen
fonction d'ouverture d'un flux.
.TP
.B fprintf
écriture de données formatées.
.TP
.B fpurge
transfère les tampons d'un flux.
.TP
.B fputc
écriture d'un caractère ou d'un mot dans un flux.
.TP
.B fputs
écriture d'une ligne dans un flux.
.TP
.B fread
entrées-sorties binaires.
.TP
.B freopen
fonction d'ouverture d'un flux.
.TP
.B fropen
fonction d'ouverture d'un flux.
.TP
.B fscanf
lecture de données formatées.
.TP
.B fseek
repositionner un flux.
.TP
.B fsetpos
repositionner un flux.
.TP
.B ftell
repositionner un flux.
.TP
.B fwrite
entrées-sorties binaires.
.TP
.B getc
lit le caractère ou le mot suivant depuis un flux d'entrée.
.TP
.B getchar
lit le caractère ou le mot suivant depuis un flux d'entrée.
.TP
.B gets
lit une ligne depuis un flux d'entrée.
.TP
.B getw
lit le caractère ou le mot suivant depuis un flux d'entrée.
.TP
.B mktemp
créer un fichier temporaire.
.TP
.B perror
messages d'erreur système.
.TP
.B printf
écriture de données formatées.
.TP
.B putc
écriture d'un caractère ou d'un mot dans un flux.
.TP
.B putchar
écriture d'un caractère ou d'un mot dans un flux.
.TP
.B puts
écriture d'une ligne dans un flux.
.TP
.B putw
écriture d'un caractère ou d'un mot dans un flux.
.TP
.B remove
supprimer une entrée de répertoire.
.TP
.B rewind
repositionner un flux.
.TP
.B scanf
lecture de données formatées.
.TP
.B setbuf
opérations sur les tampons.
.TP
.B setbuffer
opérations sur les tampons.
.TP
.B setlinebuf
opérations sur les tampons.
.TP
.B setvbuf
opérations sur les tampons.
.TP
.B sprintf
écriture de données formatées.
.TP
.B sscanf
lecture de données formatées.
.TP
.B strerror
messages d'erreur système.
.TP
.B sys_errlist
messages d'erreur système.
.TP
.B sys_nerr
messages d'erreur système.
.TP
.B tempnam
créer un fichier temporaire.
.TP
.B tmpfile
créer un fichier temporaire.
.TP
.B tmpnam
créer un fichier temporaire.
.TP
.B ungetc
remettre un caractère dans un flux d'entrée.
.TP
.B vfprintf
écriture de données formatées.
.TP
.B vfscanf
lecture de données formatées.
.TP
.B vprintf
écriture de données formatées.
.TP
.B vscanf
lecture de données formatées.
.TP
.B vsprintf
écriture de données formatées.
.TP
.B vsscanf
lecture de données formatées.
.SH CONFORMITÉ
La bibliothèque
.B stdio
est conforme à ANSI X3.159-1989 («\ ANSI C\ »).
.SH "VOIR AUSSI"
.BR open (2),
.BR close (2),
.BR read (2),
.BR write (2),
.BR stdout (3)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
