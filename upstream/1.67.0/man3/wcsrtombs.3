.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Traduction 29/08/2000 par Christophe Blaess (ccb@club-internet.fr)
.\" LDP 1.30
.\" màj LDP 1.47
.\" MàJ 21/07/2003 LDP-1.56
.TH WCSRTOMBS 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
wcsrtombs \- Convertir une chaîne de caractères larges en séquence multi-octets.
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "size_t wcsrtombs (char *" dest ", const wchar_t **" src ,
.BI "                  size_t " len ", mbstate_t *" ps );
.fi
.SH DESCRIPTION
Si \fIdest\fP n'est pas un pointeur NULL, la fonction \fBwcsrtombs\fP convertit les caractères larges
depuis la chaîne \fI*src\fP vers la séquence multi-octets située en \fIdest\fP.
Au plus \fIlen\fP octets seront écrits dans \fIdest\fP.
L'état de conversion \fI*ps\fP est mis à jour. La conversion est réalisée en fait en invoquant à répétition
wcrtomb(\fIdest\fP,\fI*src\fP,\fIps\fP), aussi longtemps que cet appel réussit, en augmentant à chaque fois \fIdest\fP
du nombre d'octets écrits, et en incrémentant \fI*src\fP. La conversion peut se terminer pour trois raisons :
.PP
1. Un caractère large que l'on ne peut pas représenter par une séquence multi-octets (dans la localisation en cours)
a été rencontré. Dans ce cas \fI*src\fP pointera sur le caractère invalide, et la fonction renverra (size_t)(-1) après
avoir placé \fBEILSEQ\fP dans
.IR errno .
.PP
2. La limite \fIlen\fP est atteinte. Dans ce
cas \fI*src\fP pointera sur le caractère suivant à convertir, et la fonction renvoie le nombre d'octets écrits dans \fIdest\fP.
.PP
3. La chaîne de caractères larges a été complètement convertie, y compris le L'\\0' final (ramenant \fI*ps\fP à l'état initial).
Dans ce cas, \fI*src\fP devient NULL, et la fonction renvoie le nombre d'octets écrits dans \fIdest\fP, sans compter l'octet '\\0'.
.PP
Si \fIdest\fP est NULL, la longueur \fIlen\fP est ignorée, et la conversion se déroule comme précédemment, sauf que les
octets convertis ne sont pas écrits en mémoire, et qu'il n'y a pas de limite de longueur en destination.
.PP
Dans tous les cas, si \fIps\fP est un pointeur NULL, un état statique anonyme propre à la fonction est utilisé à la place.
.PP
Le programmeur doit s'assurer qu'il y a assez de place pour \fIlen\fP octets au minimum dans \fIdest\fP.
.SH "VALEUR RENVOYÉE"
La fonction \fBwcsrtombs\fP renvoie le nombre d'octets constituant la partie convertie de la séquence multi-octets,
sans compter l'octet nul final. Si elle rencontre un caractère large qu'elle ne peut convertir, elle renvoie (size_t)(-1) et
place \fBEILSEQ\fP
.IR errno\ .
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR wcstombs (3),
.BR wcsnrtombs (3),
.BR iconv (3)
.SH NOTES
Le comportement de \fBwcsrtombs\fP dépend de la catégorie LC_CTYPE de la localisation.
.PP
L'utilisation d'un pointeur NULL pour \fIps\fP n'est pas sûre dans un contexte multithreads.
.SH TRADUCTION
Christophe Blaess, 2000-2003.
