.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1995  James R. Van Zandt <jrv@vanzandt.mv.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Changed Tue Sep 19 01:49:29 1995, aeb: moved from man2 to man3
.\"  added ref to /etc/utmp, added BUGS section, etc.
.\" modified 2003 Walter Harms, aeb - added getlogin_r, note on stdin use
.\"
.\" Traduction 26/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 27/06/2005 LDP-1.60
.\"
.TH GETLOGIN 3 "24 août 2003" "Linux 2.4" "Manuel du programmeur Linux"
.SH NOM
getlogin, getlogin_r, cuserid \- Obtenir le nom de l'utilisateur.
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B "char * getlogin (void);"
.br
.BI "int getlogin_r(char *" buf ", size_t " bufsize );
.sp
.B #include <stdio.h>
.sp
.BI "char *cuserid (char * " string );
.SH DESCRIPTION
La fonction \fBgetlogin\fP renvoie un pointeur sur une chaîne de caractères
contenant le nom de l'utilisateur connecté sur le terminal contrôlant le
processus, ou un pointeur NULL si cette information n'est pas disponible.
La chaîne est allouée de manière statique et peut donc être écrasée lors
des appels ultérieurs à \fBgetlogin\fP ou à \fBcuserid\fP.
.PP
\fBgetlogin_r\fP renvoie le même nom d'utilisateur dans le tableau
.I buf
de taille
.IR bufsize .
.PP
La fonction \fBcuserid\fP renvoie un pointeur sur une chaîne de caractères
contenant le nom de l'utilisateur associé à l'UID effectif du processus. Si
\fIstring\fP n'est pas un pointeur NULL, ce doit être une table contenant
au moins \fBL_cuserid\fP caractères.
La chaîne sera alors renvoyée dans cette table. Sinon (si \fIstring\fP vaut NULL),
un pointeur sur une chaîne allouée statiquement sera renvoyé. Cette chaîne
peut être écrasée par des appels ultérieurs à \fBcuserid\fP ou à \fBgetlogin\fP.
.PP
La constante symbolique \fBL_cuserid\fP est un entier déclaré dans \fBstdio.h\fP,
indiquant la longueur nécessaire pour stocker un nom d'utilisateur.
.PP
Ces fonctions permettent d'identifier correctement l'utilisateur qui exécute
le programme (\fBcuserid\fP) ou l'utilisateur connecté pour la session
(\fBgetlogin\fP). (Ces deux éléments peuvent différer si le bit Set\-UID du
programme est validé).
.PP
La plupart du temps, il est plus utile d'utiliser la variable d'environnement
\fBLOGNAME\fP pour déterminer l'utilisateur. Ceci est plus flexible car il
est justement possible de modifier \fBLOGNAME\fP arbitrairement.
.SH "VALEUR RENVOYÉE"
\fBgetlogin\fP renvoie un pointeur sur le nom de l'utilisateur si elle réussit,
et NULL si elle échoue.
\fBgetlogin_r\fP renvoie 0 si elle réussit et une valeur non nulle si elle échoue.
.SH ERREURS
POSIX spécifie
.TP
.B ENXIO
Le processus appelant n'a pas de terminal (tty) contrôlant.
.TP
.B EMFILE
Le processus appelant a déjà le nombre maximum autorisé de fichiers ouverts.
.TP
.B ENFILE
Le système a déjà le nombre maximum autorisé de fichiers ouverts.
.TP
.B ERANGE
(getlogin_r)
La longueur du nom d'utilisateur, en incluant le caractère NUL final, est
plus grande que
.IR bufsize .
.LP
Linux/glibc a aussi les erreurs\ :
.TP
.B ENOMEM
Mémoire insuffisante pour allouer la structure passwd nécessaire.
.TP
.B ENOENT
Il n'y a pas d'entrée correspondante dans le fichier utmp.
.SH FICHIERS
.nf
\fI/etc/passwd\fP    Base de données des mots de passe.
.fi
\fI/var/run/utmp\fP (traditionnellement \fI/etc/utmp\fP\ ;
certaines versions de la libc utilisent \fI/var/adm/utmp\fP)
ou se trouve \fIutmp\fP - Le chemin d'accès dépend de la version de libc).
.SH "CONFORMITÉ"
POSIX.1. System V dispose d'une fonction \fBcuserid\fP qui utilise l'UID
réel plutôt que l'UID effectif. La fonction \fBcuserid\fP a été incorporée
dans la version POSIX de 1988, mais supprimée de la version de 1990.
.LP
OpenBSD a \fBgetlogin\fP et \fBsetlogin\fP, et un nom d'utilisateur associé
à une session, même s'il n'a pas de terminal de contrôle.
.SH BOGUES
Malheureusement, il est souvent assez facile de tromper getlogin().
Parfois il ne fonctionne pas du tout car certains programmes
n'utilisent pas le fichier utmp correctement.
Souvent, il ne retourne que les 8 premiers caractères du nom. L'utilisateur
connecté sur le terminal de contrôle d'un programme n'est pas nécessairement
celui qui a lancé le programme.
Évitez getlogin() pour des problèmes de sécurité.
.LP
Veuillez noter que la glibc ne suit pas la spécification POSIX et utilise
stdin au lieu de
.IR /dev/tty .
Un bogue. (Les autres systèmes récents, comme SunOS 5.8, HPUX 11.11 et
FreeBSD 4.8 renvoient tous le nom de connexion même si stdin est redirigée.)
.LP
Personne ne sait précisement ce que fait cuserid(). Évitez-le dans des
programmes portables. Évitez-le de toute manière. Utilisez
getpwuid(geteuid()) à la place si vous en avez besoin. N'UTILISEZ PAS cuserid().
.SH "VOIR AUSSI"
.BR geteuid (2),
.BR getuid (2)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
