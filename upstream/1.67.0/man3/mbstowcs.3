.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:59:02 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 04/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" MàJ 21/07/2003 LDP-1.56
.\"
.TH MBSTOWCS 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
mbstowcs \- Convertir une chaîne de caractères multi-octets en une chaîne de caractères étendus.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "size_t mbstowcs (wchar_t *" pwcs ", const char *" s ", size_t " n );
.fi
.SH DESCRIPTION
Si
.I dest
n'est pas un pointeur
.BR NULL ,
la fonction
.BR mbstowcs ()
convertit la chaîne multi-octets
.I src
en chaîne de caractères larges
.IR dest .
Elle écrira au plus
.I n
octets dans
.IR dest .
L'état de conversion est initialisé. La conversion peut s'arrêter pour l'une
des trois raisons suivantes\ :
.PP
1. Une séquence multi-octets invalide a été rencontrée. Dans ce cas, elle
renvoie (size_t)(\-1).
.PP
2. \fIn\fP caractères larges non-nuls ont été stockés dans
.IR dest .
Dans ce cas le nobre de caractères écrits dans
.I dest
est renvoyé, mais l'état de décalage en ce point est perdu.
.PP
2. La chaîne multi-octets a été complètement convertie, y compris le
caractère nul final. Dans ce cas, le nombre de caractères larges écrits dans
.IR dest ,
sans compter le caractère nul final, est renvoyé.
.PP
Le programmeur doit s'assurer qu'il y a assez de place pour au moins
.I n
caractères larges dans
.IR dest .
.PP
Si
.I dest
est
.BR NULL ,
.I n
est ignoré, et la conversion se présente comme au-dessus, excepté que les
caractères larges ne sont pas écris en mémoire et qu'aucune limite de longueur
n'existe.
.PP
Afin d'éviter la situation numéro 2 ci-dessus, le programmeur doit s'assurer que
.I n
est supérieur ou égal a
.IR "mbstowcs(NULL,src,0)+1" .

.SH "VALEUR RENVOYÉE"
La fonction
.BR mbstowcs ()
renvoie le nombre de caractères larges qui constituent la partie convertie
de la chaîne, sans compter le caractère nul final. Si une séquence multi-octets
invalide est rencontrée, elle renvoie (size_t)(\-1).
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR mbsrtowcs (3)
.SH NOTES
Le comportement de
.BR mbstowcs
dépend de la catégorie
.B LC_CTYPE
de la localisation en cours.
.PP
La fonction
.BR mbsrtowcs (2)
fournit une meilleure interface pour la même fonctionnalité.
.SH TRADUCTION
Christophe Blaess 2003.
