.\" Copyright (c) OpenBSD Group
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" Converted into a manpage again by Martin Schulze <joey@infodrom.org>
.\"
.\"
.\" Traduction 15/05/2002 par Stéphan Rafin (stephan.rafin@laposte.net)
.\" MàJ 21/07/2003 LDP-1.56
.\" MàJ 30/07/2003 LDP-1.58
.TH OPENPTY 3 "30 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
openpty, login_tty, forkpty \- Fonctions utilitaires pour terminaux tty.
.SH SYNOPSIS
.B #include <pty.h>
\ /* for openpty and forkpty */
.br
.B #include <utmp.h>
/* for login_tty */
.sp
.BI "int openpty(int *" amaster ", int *" aslave ", char *" name ", struct termios *" termp ", struct winsize * " winp );
.sp
.BI "int login_tty(int " fd );
.sp
.BI "pid_t forkpty(int *" amaster ", char *" name ", struct termios *" termp ", struct winsize *" winp );
.SH DESCRIPTION
La fonction 
.B openpty()
localise un pseudo terminal disponible et renvoie des descripteurs de fichiers
pour le maître et l'esclave dans 
.I amaster
et
.IR aslave .
Si la chaîne
.I name
ne vaut pas NULL, le nom de fichier de l'esclave est renvoyé dans
.IR name .
Si
.I termp
ne vaut pas NULL, les paramètres du terminal esclave seront affectés conformément
aux valeurs spécifiées dans
.IR termp .
Si
.I winp
ne vaut pas NULL, la taille de la fenêtre de l'esclave sera conditionnée par 
les valeurs contenues dans 
.IR winp .

La fonction 
.B login_tty()
prépare une connexion sur le terminal 
.I fd
(qui peut être un véritable périphérique tty, ou bien l'esclave d'un pseudo 
terminal tel que celui renvoyé par
.BR openpty() )
en créant une nouvelle session, en faisant de 
.I fd
le terminal de contrôle pour le processus courant, en affectant 
.I fd
à l'entrée standard, à la sortie standard et aux flux d'erreur du processus
courant, et enfin, en fermant 
.IR fd .

La fonction
.B forkpty()
combine
.BR openpty() ,
.BR fork() ,
et
.B login_tty()
afin de créer un nouveau processus opérant dans un pseudo terminal. Le descripteur 
de fichier de la partie maître du pseudo terminal est renvoyé dans
.IR amaster ,
et le nom de fichier de l'esclave dans
.I name
s'il n'est pas NULL. Les paramètres
.I termp
et
.I winp
, s'ils ne valent pas NULL, 
déterminent les attributs du terminal et la taille de la fenêtre de
la partie esclave du pseudo terminal.
.SH "VALEUR RENVOYÉE"
Lorsqu'un appel à
.BR openpty() ,
.BR login_tty() ,
ou
.B forkpty()
échoue, alors, on renvoie -1 et 
.I errno
est positionnée afin de préciser l'erreur. Sinon
.BR openpty() ,
.BR login_tty() ,
ainsi que le processus fils de
.B forkpty()
renvoient 0 tandis que le processus père de
.B forkpty()
renvoie le PID du processus fils.
.SH ERREURS
.B openpty()
échoue lorsque\ :
.TP
.B ENOENT
Il n'y a plus de terminaux disponibles.
.LP
.B login_pty()
échoue lorsque 
.B ioctl()
ne parvient pas à affecter 
.I fd
au terminal de contrôle du processus courant.
.LP
.B forkpty()
échoue en cas d'échec de
.B openpty()
ou de
.B fork().
.SH NOTE
Ces fonctions sont dans la bibliothèque libutil, il faut donc ajouter
.B \-lutil
sur la ligne de commande du compilateur.
.SH FICHIERS
.I /dev/[pt]ty[pqrstuwxyzabcdePQRST][0123456789abcdef]
.SH "CONFORMITÉ"
Il s'agit de fonctions BSD présentes dans la libc5 et la glibc2.
.SH BOGUES
Personne ne sait combien d'espace il faut réserver pour
.IR name ,
ainsi les appels
.B openpty()
et
.B forkpty()
avec un argument
.I name
non-nul peut poser un problème de sécurité.
.SH "VOIR AUSSI"
.BR fork (2)
.SH TRADUCTION
Stéphan Rafin, 2002.
.br
Christophe Blaess, 2003.
