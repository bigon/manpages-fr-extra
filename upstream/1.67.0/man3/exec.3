.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)exec.3	6.4 (Berkeley) 4/19/91
.\"
.\" Converted for Linux, Mon Nov 29 11:12:48 1993, faith@cs.unc.edu
.\"
.\"
.\" Traduction 23/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Mise a jour 19/07/1997
.\" Mise à jour 04/06/2001 - LDP-man-pages-1.36
.\" Mise à jour 25/01/2002 - LDP-man-pages-1.47
.\" MàJ 21/07/2003 LDP-1.56
.TH EXEC 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
execl, execlp, execle, execv, execvp \- Exécuter un programme.
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B extern char **environ;
.sp
.BI "int execl (const char *" path ", const char *" arg ", ...);"
.br
.BI "int execlp (const char *" file ", const char *" arg ", ...);"
.br
.BI "int execle (const char *" path ", const char *" arg
.BI ", ..., char * const " envp "[]);"
.br
.BI "int execv (const char *" path ", char *const " argv "[]);"
.br
.BI "int execvp (const char *" file ", char *const " argv "[]);"
.SH DESCRIPTION
La famille de fonctions
.B exec
remplace l'image mémoire du processus en cours par un nouveau processus.
Les fonctions décrites dans cette page sont en réalité des frontaux pour
l'appel système
.BR execve (2).
(Voir la page de
.B execve
pour des informations détaillées sur le remplacement du processus en cours.)
.PP
L'argument initial de toutes ces fonctions est le chemin d'accès du fichier
à exécuter.
.PP
Les arguments
.I "const char *arg"
ainsi que les points de suspension des fonctions
.BR execl ,
.BR execlp ,
et
.B execle
peuvent être vues comme des
.IR arg0 ,
.IR arg1 ,
\&...,
.IR argn .
Ensemble ils décrivent une liste d'un ou plusieurs pointeurs sur des
chaînes de caractères terminées par des caractères nuls, qui constituent les
arguments disponibles pour le programme à exécuter. 
Par convention le premier argument doit pointer sur le nom du fichier associé 
au programme à exécuter. La liste des arguments
.I doit
se terminer par un pointeur
.BR NULL .
.PP
Les fonctions
.B execv
et
.B execvp
utilisent un tableau de pointeurs sur des chaînes de caractères terminées
par des caractères nuls, qui constituent les
arguments disponibles pour le programme à exécuter. 
Par convention le premier argument doit pointer sur le nom du fichier associé
au programme à exécuter. Le tableau de pointeur
.I doit
se terminer par un pointeur
.BR NULL .
.PP
La fonction
.B execle
peut également indiquer l'environnement du processus à exécuter en faisant
suivre le pointeur
.B NULL
qui termine la liste d'arguments, ou le pointeur
.B NULL
de la table par  un paramètre supplémentaire.
Ce paramètre est un tableau de pointeurs sur des chaînes de caractères terminées
par des caractères nuls, qui 
.I doit
se terminer par un pointeur
.BR NULL .
Les autres fonctions fournissent au nouveau processus l'environnement
constitué par la variable externe
.IR environ .
.PP
Certaines de ces fonctions ont une sémantique spécifique.
.PP
Les fonctions
.B execlp
et
.B execvp
agiront comme le shell dans la recherche du fichier exécutable si
le nom fourni ne contient pas de slash (/).  Le chemin de recherche
est spécifié dans la variable d'environnement
.BR PATH .
Si cette variable n'est pas définie, le chemin par défaut sera
``/bin:/usr/bin:''.  De plus certaines
erreurs sont traitées de manière spécifique.
.PP
Si la permission d'accès au fichier est refusée
.RB ( execve
renvoie
.BR EACCES ),
ces fonctions continueront à parcourir le reste du chemin de recherche. Si
aucun fichier n'est trouvé, elle reviendront, et 
.I errno
contiendra le code d'erreur
.BR EACCES .
.PP
Si l'en-tête d'un fichier n'est pas reconnu
.RB ( execve
renvoie
.BR ENOEXEC ),
ces fonctions exécuteront un shell avec le chemin d'accès au fichier
en tant que premier argument. Si ceci échoue, aucune recherche supplémentaire
n'est effectuée.
.SH "VALEUR RENVOYÉE"
Si l'une quelconque des fonctions
.B exec
revient à l'appelant, c'est qu'une erreur a eu lieu. La valeur de retour est
\-1, et 
.I errno
contient le code d'erreur.
.SH FICHIERS
.I /bin/sh
.SH ERREURS
Toutes ces fonctions
peuvent échouer et positionner
.I errno
sur n'importe quelle erreur décrite dans la fonction
.BR execve (2).
.SH "VOIR AUSSI"
.BR sh (1),
.BR execve (2),
.BR fork (2),
.BR environ (5),
.BR ptrace (2)
.SH COMPATIBILITÉ
Sur certains systèmes, le chemin de recherche par défaut (employé si l'environnement ne contient
pas la variable \fBPATH\fR) contient
le répertoire courant à la suite de
.I /bin
et
.IR /usr/bin ,
afin d'éviter les chevaux de Troie. Linux utilise
encore le répertoire courant en premier dans ce chemin de recherche par défaut.
.PP
Le comportement de
.B execlp
et
.B execvp
lorsqu'une erreur se produit est une pratique historique mais n'a
traditionnellement jamais été documenté, ni spécifié dans le standard
POSIX.
Lorsque l'erreur ETXTBSY se déclenche (fichier exécutable ouvert en
écriture par un autre processus), BSD (et peut-être d'autres systèmes)
endorment le processus appelant puis réiterent l'opération. Linux
considère cette situation comme une erreur grave, et revient immédiatement.
.PP
Habituellement, les fonctions
.B execlp
et
.B execvp
ignoraient toutes les erreurs sauf celles décrites ci-dessus, 
.B ENOMEM
et
.BR E2BIG .
Désormais, elles reviennent à l'appelant si une autre erreur que celles-ci
se produit.
.SH "CONFORMITÉ"
.BR execl ,
.BR execv ,
.BR execle ,
.B execlp
et
.B execvp
sont conformes à IEEE Std1003.1-88 (``POSIX.1'').
.SH TRADUCTION
Christophe Blaess, 1996-2003.
