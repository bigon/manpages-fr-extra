.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:31:13 1993, David Metcalfe
.\" Modified Sun Jun  6 23:27:50 1993, David Metcalfe
.\" Modified Sat Jul 24 21:45:37 1993, Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 22/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 04/06/2001 LDP-1.36
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 08/07/2005 - LDP-1.63
.\"
.TH ABS 3 "21 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
abs, labs, llabs, imaxabs \- Calculer la valeur absolue d'un entier.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "int abs (int " j );
.br
.BI "long int labs(long int " j );
.br
.BI "long long int llabs(long long int " j );
.sp
.B #include <inttypes.h>
.sp
.BI "intmax_t imaxabs(intmax_t " j );
.fi
.SH DESCRIPTION
La fonction \fBabs()\fP calcule la valeur absolue de l'argument entier \fIj\fP.
Les fonctions \fBlabs()\fP, \fBllabs()\fP et \fBimaxabs()\fP calculent les
valeurs absolues de leurs arguments \fIj\fP du type entier approprié pour
la fonction.
.SH "VALEUR RENVOYÉE"
Chaque fonction renvoie la valeur absolue de son argument.
.SH "CONFORMITÉ"
SVID 3, POSIX, BSD 4.3, ISO/IEC 9899. POSIX.1 (édition 1996) ne demande
que la fonction \fBabs()\fP. ISO/IEC 9899:1990 (C89) n'inclut que
\fBabs()\fP et \fBlabs()\fP. Les fonctions \fBllabs()\fP et \fBimaxabs()\fP
ont été ajoutées dans C99.
.SH NOTES
La valeur absolue du nombre entier négatif le plus petit est indéfinie, car le
codage d'entier signé sur n bits offre un intervalle de valeurs allant de
-2^(n-1) à 2^(n-1) - 1.
.PP
La fonction \fBllabs()\fP est incluse dans la GlibC depuis la version 2.0, mais
pas dans LibC 5 et LibC 4. La fonction \fBimaxabs()\fP est incluse dans la
GlibC depuis la version 2.1.1.
.PP
Pour que \fBllabs()\fP soit déclarée, il peut être nécessaire de définir
\fB_ISOC99_SOURCE\fP ou \fB_ISOC9X_SOURCE\fP (suivant la version de GlibC)
avant l'inclusion des fichiers d'en-tête standard.
.PP
GCC traite \fBabs()\fP et \fBlabs()\fP comme des fonctions internes.
GCC 3.0 traite également \fBllabs()\fP et \fBimaxabs()\fP comme des
fonctions internes.
.SH "VOIR AUSSI"
.BR ceil (3),
.BR floor (3),
.BR fabs (3),
.BR rint (3)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
