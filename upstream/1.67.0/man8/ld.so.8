.\" This is in the public domain
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" Màj 25/07/2003 LDP-1.56
.\" Màj 04/07/2005 LDP-1.61
.\"
.TH LD.SO 8 "25 juillet 2003" LDP "Manuel de l'administrateur Linux"
.SH NOM
ld.so, ld-linux.so* \- Chargeur et éditeur de liens dynamique.
.SH DESCRIPTION
Les programmes
.B ld.so
et
.B ld-linux.so*
trouvent et chargent les bibliothèques partagées nécessaires pour un
programme, préparent son démarrage, et le lancent.
.LP
Les binaires Linux nécessitent une édition de liens dynamique (au démarrage)
sauf si l'option
.B \-static
a été indiquée sur la ligne de commande de
.B ld
durant la compilation.
.LP
Le programme
.B ld.so
traite les binaires a.out, un format utilisé il y a bien longtemps\ ;
.B ld-linux.so*
traitent les fichiers ELF (\fB/lib/ld-linux.so.1\fP for libc5, \fB/lib/ld-linux.so.2\fP pour GlibC2),
que tout le monde utilise depuis des années. Autrement, les deux programmes
ont le même comportement et utilisent les fichiers et programmes
.BR ldd (1),
.BR ldconfig (8)
et
.IR /etc/ld.so.conf .
.LP
Les bibliothèques partagées nécessaires à un programme sont recherchées dans
différents endroits\ :
.IP o
(ELF seul) En utilisant l'attribut de section dynamique DT_RPATH du fichier
binaire s'il est présent, et l'attribut DT_RUNPATH sinon.
L'utilisation de DT_RPATH est déconseillée.
.IP o
En utilisant la variable d'environnement
.BR LD_LIBRARY_PATH .
Sauf si l'exécutable est un binaire Set-UID ou Set-GID auquel cas elle est
ignorée.
.IP o
(ELF seul) En utilisant l'attribut de section dynamique DT_RUNPATH
du fichier binaire s'il est présent.
.IP o
Depuis le fichier cache
.BR /etc/ld.so.cache
qui contient une liste compilée de bibliothèques précédemment trouvées
dans des chemins par défaut. Si toutefois le fichier binaire
a été lié avec l'option
.B -z nodeflib
de l'éditeur de liens, les chemins par défaut sont ignorés.
.IP o
Dans le répertoire par défaut
.BR /lib ,
puis
.BR /usr/lib .
Si le binaire a été lié avec l'option
.B -z nodeflib
de l'éditeur de lien, cette étape est sautée.
.SH SYNOPSIS
L'éditeur de lien dynamique peut être lançé indirectement en démarrant un
programme lié dynamiquement ou une bibliothèque (dans ce cas, aucune option
en ligne de commande ne peut être transmise, et avec ELF, l'éditeur
indiqué dans la section
.B .interp
du programme est exécuté), ou directement en lançant\ :
.P
.B /lib/ld-linux.so.*
[OPTIONS] [PROGRAMME [ARGUMENTS]]
.SH "OPTIONS EN LIGNE DE COMMANDE"
.TP
.B --list
Liste les dépendances et leurs résolutions.
.TP
.B --verify
Vérifie que le programme est lié dynamiquement et que l'éditeur de liens
peut le traiter.
.TP
.B --library-path PATH
Surcharge la variable d'environnement
.B LD_LIBRARY_PATH
(voir plus bas).
.TP
.B --ignore-rpath LISTE
Ignorer les informations RPATH and RUNPATH dans les objets de la LISTE.
Cette option a été supportée par la GlibC2 pendant environ une heure.
Puis elle a été renommée en\ :
.TP
.B --inhibit-rpath LISTE
.SH ENVIRONNEMENT
Il y a quatre variables d'environnement importantes.
.TP
.B LD_LIBRARY_PATH
Une liste de répertoires séparés par des points-virgules, dans lesquels
les bibliothèques sont recherchées au démarrage.
Comme la variable
d'environnement
.BR PATH .
.TP
.B LD_PRELOAD
Une liste séparée, par des espaces, de bibliothèques ELF spécifiques à
l'utilisateur, à charger avant les autres bibliothèques.
Ceci permet de surcharger sélectivement les fonctions des autres
bibliothèques partagées. Pour les binaires ELF Set-UID, Set-GID, seules
les bibliothèques Set-UID des répertoires standards seront chargées.
.TP
.B LD_BIND_NOW
(libC 5 ; GibC depuis 2.1.1)
Si la chaîne est non-vide, l'éditeur de lien résoudra tous les symboles
au démarrage du programme plutôt que repousser la résolution des noms
de fonctions au moment où elles sont référencées en premier.
Ceci est utile dans un débogueur.
.TP
.B LD_TRACE_LOADED_OBJECTS
(ELF seul)
Si la chaine est non-vide, le programme liste ses dépendances dynamiques
comme s'il était lancé par
.BR ldd (1),
au lieu du lancement normal.
.LP
Il existe de nombreuses autres variables plus ou moins obscures,
certaines obsolètes, ou résevées pour un usage interne.
.TP
.B LD_WARN
(ELF seul)(GlibC depuis 2.1.3)
Si la chaîne est non-vide, avertir si un symbole n'est pas résolu.
.TP
.B LD_NOWARN
(a.out seul)(libC5)
Supprimer les avertissements à propos des bibliothèques a.out incompatibles
avec les versions antérieures.
.TP
.B LD_BIND_NOT
(GlibC depuis 2.1.95)
Ne pas mettre à jour les tables GOT (global offset table) et PLT
(procedure linkage table) après résolution d'un symbole.
.TP
.B LD_DEBUG
(GlibC depuis 2.1)
Afficher de nombreuses informations de débogage de l'éditeur dynamique.
Si elle contient
.BR all ,
afficher tous les messages d'information, si elle contient
.BR help ,
afficher un message d'aide à propos des catégories de messages pour cette
variable d'environnement.
.TP
.B LD_DEBUG_OUTPUT
(GlibC depuis 2.1)
Fichier où la sortie de
.B LD_DEBUG
devrait être envoyée. Par défaut, c'est la sortie standard.
LD_DEBUG_OUTPUT est ignorée pour les binaires Set-UID / Set-GID.
.TP
.B LD_VERBOSE
(GlibC depuis 2.1)
S'il s'agit d'une chaîne non vide, afficher les informations sur la version
des objets sur lesquels on demande des informations sur le programme (si
.B LD_TRACE_LOADED_OBJECTS
a été configuré, ou si les options
.B --list
ou
.B --verify
ont été données à l'éditeur de liens dynamiques).
.TP
.B LD_PROFILE
(GlicC depuis 2.1)
Activer le suivi des objets partagés.
.TP
.B LD_PROFILE_OUTPUT
(GlibC depuis 2.1)
Fichier où la sortie de
.B LD_PROFILE
est envoyée. Par défaut, c'est la sortie standard.
LD_DEBUG_OUTPUT est ignoré pour les binaires Set-UID/Set-GID.
.TP
.B LD_AOUT_LIBRARY_PATH
(LibC5)
Version de LD_LIBRARY_PATH pour les binaire a.out seulement.
Les anciennes versions de ld-linux.so.1 supportent LD_ELF_LIBRARY_PATH.
.TP
.B LD_AOUT_PRELOAD
(LibC5)
Version de LD_PRELOAD pour les binaires a.out seulement.
Les anciennes versions de ld-linux.so.1 supportent LD_ELF_PRELOAD.
.TP
.B LD_SHOW_AUXV
(GlibC depuis 2.1)
Afficher les tables auxiliaires passées au noyau.
.TP
.B LD_HWCAP_MASK
(GlibC depuis 2.1)
Masque des capacités matérielles.
.TP
.B LD_ORIGIN_PATH
(GlibC depuis 2.1)
Chemin du fichier binaire (pour les programmes non Set-UID).
.TP
.B LD_DYNAMIC_WEAK
(GlibC depuis 2.1.91)
Autorise la surcharge des symboles faibles (retour à l'ancien comportement).
.TP
.B LD_KEEPDIR
(a.out seul)(LibC5)
Ne pas ignorer le répertoire dans les noms de bibliothèques a.out.
Cette option est très déconseillée.
.TP
.B LDD_ARGV0
(LibC5)
.IR argv [0]
à utiliser par
.BR ldd (1)
si aucun n'est présent.
.SH FICHIERS
.PD 0
.TP
.B /lib/ld.so
Le chargeur/éditeur de lien a.out.
.TP
.BR /lib/ld-linux.so. { 1 , 2 }
Le chargeur/éditeur de liens ELF.
.TP
.B /etc/ld.so.cache
Fichier contenant la liste compilée des répertoires où des bibliothèques
se trouvent.
.TP
.B /etc/ld.so.preload
Fichier contenant une liste de bibliothèques ELF, séparées par des espaces, à
charger avant de démarrer le programme.
.TP
.B lib*.so*
Bibliothèques partagées.
.PD
.SH NOTES
Les fonctionnalités
.B ld.so
sont disponibles pour les exécutables compilés à partir de la LibC version
4.4.3 et ultérieures.
Les fonctionnalités ELF sont disponibles depuis 1.1.52 et la LibC5.
.SH "VOIR AUSSI"
.BR ldd (1),
.BR ldconfig (8)
.\" .SH AUTHORS
.\" ld.so: David Engel, Eric Youngdale, Peter MacDonald, Hongjiu Lu, Linus
.\"  Torvalds, Lars Wirzenius and Mitch D'Souza
.\" ld-linux.so: Roland McGrath, Ulrich Drepper and others.
.\"
.\" In the above, (libc5) stands for David Engel's ld.so/ld-linux.so.
.SH TRADUCTION
Christophe Blaess, 2003.
