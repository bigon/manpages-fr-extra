'\" t
.\" Don't change the first line, it tells man that we need tbl.
.\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>.
.\" and copyright (c) 1999 Matthew Wilcox.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" 2002-10-30, Michael Kerrisk, mtk16@ext.canterbury.ac.nz
.\"	Added description of SO_ACCEPTCONN
.\" 2004-05-20, aeb, added SO_RCVTIMEO/SO_SNDTIMEO text.
.\"
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" 11/06/2001 - LDP-man-pages-1.37
.\" Màj 25/07/2003 LDP-1.56
.\" Màj 27/06/2005 LDP-1.60
.\" Màj 23/12/2005 LDP-1.67
.\"
.TH SOCKET 7 "25 juillet 2003" LDP "Manuel de l'administrateur Linux"
.SH NOM
socket \- Interface Linux des sockets.
.SH SYNOPSIS
.B #include <sys/socket.h>
.br
.IB mysocket " = socket(int " socket_family ", int " socket_type ", int " protocol );
.SH DESCRIPTION
Cette page de manuel documente l'interface utilisateur de l'implémentation Linux des
sockets réseau. Les sockets compatibles BSD représentent
une interface uniforme entre
le processus utilisateur et les piles de protocoles réseau dans le noyau.
Les modules des protocoles sont groupés en
.I "familles de protocoles"
comme
.BR PF_INET ", " PF_IPX ", " PF_PACKET
et en
.I "types de sockets"
comme
.B SOCK_STREAM
ou
.BR SOCK_DGRAM .
Voir
.BR socket (2)
pour plus de détails sur les familles et les types de sockets.
.SH "FONCTIONS DE LA COUCHE SOCKET"
Ces fonctions servent à un processus utilisateur pour envoyer ou recevoir des paquets
et pour faire d'autres opérations sur les sockets. Pour plus de détails, voir
leurs pages de manuel respectives.
.BR socket (2)
crée une socket,
.BR connect (2)
connecte une socket à une adresse de socket distante,
la fonction
.BR bind (2)
attache une socket à une adresse locale,
.BR listen (2)
indique à la socket que de nouvelles connexions doivent y être acceptées, et
.BR accept (2)
fournit une nouvelle socket avec la nouvelle connexion entrante.
.BR socketpair (2)
renvoie deux sockets anonymes connectées (seulement implémenté pour quelques
familles locales comme
.BR PF_UNIX )
.PP
.BR send (2),
.BR sendto (2),
et
.BR sendmsg (2)
envoient des données sur une socket, et
.BR recv (2),
.BR recvfrom (2),
.BR recvmsg (2)
reçoivent des données depuis une socket.
.BR poll (2)
et
.BR select (2)
attendent que des données arrivent ou que l'émission soit possible.
De plus, les opérations d'entrées-sorties standards comme
.BR write (2),
.BR writev (2),
.BR sendfile (2),
.BR read (2),
et
.BR readv (2)
peuvent servir à écrire ou lire des données.
.PP
.BR getsockname (2)
renvoie l'adresse locale d'une socket et
.BR getpeername (2)
renvoie l'adresse de la socket distante.
.BR getsockopt (2)
et
.BR setsockopt (2)
servent à fixer ou lire des options du niveau socket ou protocole.
.BR ioctl (2)
peut servir pour lire ou écrire d'autres options.
.PP
.BR close (2)
sert à fermer une socket.
.BR shutdown (2)
ferme un sens de communication d'une socket full-duplex connectée.
.PP
Le positionnement, ou l'utilisation de
.BR pread (2)
et
.BR pwrite (2)
avec un décalage non-nul n'est pas possible sur les sockets
.PP
On peut faire des entrées-sorties non-bloquantes sur les sockets en fixant l'attribut
.B O_NONBLOCK
sur le descripteur de la socket avec
.BR fcntl (2).
Ensuite toutes les opérations qui devraient normalement bloquer
se terminent immédiatement avec l'erreur
.B EAGAIN
(l'opération devra être retentée ultérieurement).
.BR connect (2)
renverra
l'erreur
.BR EINPROGRESS .
L'utilisateur peut alors attendre divers événements avec
.BR poll (2)
ou
.BR select (2).
.PP
.TS
tab(:) allbox;
c s s
l l l.
Événement E/S
Événemt:Poll:Occurrence
Lecture:POLLIN:T{
De nouvelles données sont arrivées.
T}
Lecture:POLLIN:T{
Une connexion est établie
(pour les sockets orientées connexion)
T}
Lecture:POLLHUP:T{
Déconnexion du correspondant.
T}
Lecture:POLLHUP:T{
Connexion rompue (seulement pour les protocoles orientés connexion).
Si on écrit sur la socket, le signal
.B SIGPIPE
est aussi émis.
T}
Écriture:POLLOUT:T{
La socket a assez de place dans le
.br
buffer d'émission pour
écrire de nouvelles données.
T}
Lect/Écrit.:T{
POLLIN
.br
POLLOUT
T}:T{
Un
.BR connect (2)
en attente est terminé.
T}
Lect/Écrit.:POLLERR:Une erreur asynchrone s'est produite
Lect/Écrit.:POLLHUP:T{
Le correspondant à clos un sens de communication
T}
Exception:POLLPRI:T{
Données urgentes arrivées, le signal
.B SIGURG
est alors envoyé.
T}
.\" XXX not true currently
.\" It is no I/O event when the connection
.\" is broken from the local end using
.\" .BR shutdown (2)
.\" or
.\" .BR close (2)
.\" .
.TE
.PP
Une alternative à l'utilisation de poll/select
est de laisser le noyau informer l'application à propos des
événements par l'intermédiaire d'un signal
.BR SIGIO .
Pour cela l'attribut
.B FASYNC
doit être placé sur le descripteur de la socket
via
.BR fcntl (2)
et un gestionnaire de signal pour
.B SIGIO
doit être installé avec
.BR sigaction (2).
Voir les remarques sur les
.I SIGNAUX
plus bas.
.SH "OPTIONS DES SOCKETS"
Ces options communes à toutes les sockets
peuvent être écrites en utilisant
.BR setsockopt (2)
et lues avec
.BR getsockopt (2)
avec le niveau socket positionné sur
.BR SOL_SOCKET .
.TP
.B SO_KEEPALIVE
Valide l'émission de messages périodiques gardant la socket ouverte pour les sockets
orientées connexion. Il s'agit d'un attribut entier booléen.
.TP
.B SO_OOBINLINE
Si cette option est activée, les données hors-bande sont placées directement dans le
flux de données reçues. Sinon elles ne sont transmises que si l'attribut
.B MSG_OOB
est demandé durant la réception.
.\" don't document it because it can do too much harm.
.\".B SO_NO_CHECK
.TP
.BR SO_RCVLOWAT " et " SO_SNDLOWAT
Indiquent le nombre minimal d'octets dans le buffer pour que la couche socket
passe les données au protocole
.RB ( SO_SNDLOWAT )
ou à l'utilisateur en réception
.RB ( SO_RCVLOWAT ).
Ces deux valeurs ne sont pas modifiables sous Linux et la taille de leur argument
est toujours fixée
à un octet.
.B getsockopt
peut lire les valeurs, mais
.B setsockopt
renverra toujours
.BR ENOPROTOOPT .
.TP
.BR SO_RCVTIMEO " et " SO_SNDTIMEO
.\" Not implemented in 2.0.
.\" Implemented in 2.1.11 for getsockopt: always return a zero struct.
.\" Implemented in 2.3.41 for setsockopt, and actually used.
Indiquent le délai maximal d'émission ou de réception avant de renvoyer
une erreur. Le paramètre est une structure timeval.
Si une fonction d'entrée ou de sortie bloque pendant cet intervalle de temps
et qu'une donnée a été envoyée ou reçue, la valeur de retour de cette fonction
sera le nombre de données transmises\ ; si aucune donnée n'a été transmise
et que le délai d'attente est atteint, \-1 est renvoyé et
.I errno
est positionnée à EAGAIN ou EWOULDBLOCK
+.\" en fait, à EAGAIN
comme si la socket avait été spécifiée comme non bloquante.
Si le délai d'attente est défini à zéro (la valeur par défaut),
l'opération ne sera jamais interrompue (Ndt\ : elle devient bloquante).
.TP
.B SO_BSDCOMPAT
Valider une compatibilité bogue-à-bogue avec BSD. Cela n'est pris en compte que par le
module du protocole UDP et sera supprimé dans le futur.
Dans ce mode, les erreurs ICMP reçues pour une socket UDP ne seront pas transmises
aux programmes utilisateurs. Linux 2.0 donnait aussi une compatibilité bogue-à-bogue
pour les sockets raw avec cette option,
mais cela a été éliminé dans Linux 2.2. Il vaut mieux corriger les programmes utilisateur
que de valider cet attribut.
.TP
.B SO_PASSCRED
Autorise ou interdit la réception des messages de contrôle
.BR SCM_CREDENTIALS .
Pour plus de détails, voir
.BR unix (7).
.TP
.B SO_PEERCRED
Renvoie les authentifications du processus connecté à l'autre extrémité de la socket.
N'est utile que pour les sockets
.BR PF_UNIX .
Voir
.BR unix (7).
L'argument est une structure
.BR ucred .
Seulement valide avec
.BR getsockopt .
.TP
.B SO_BINDTODEVICE
Attacher cette socket à un périphérique donné, tel \(lqeth0\(rq,
comme indiqué dans le nom d'interface transmis. Si le nom est une chaîne vide
ou si la longueur d'option est nulle, l'attachement de la socket au périphérique
est supprimé. L'option transmise est une chaîne terminée par un caractère nul,
contenant le nom de l'interface, la longueur maximale étant
.BR IFNAMSIZ .
Si la socket est attachée à une interface, seuls les paquets reçus sur cette
interface particulière sont traités par la socket. Remarquez que cela ne
fonctionne que pour certains types de sockets, en particulier les sockets
.BR AF_INET .
Ceci n'est pas supporté pour les sockets packet (utilisez un
.BR bind (8)
normal dessus).
.TP
.B SO_DEBUG
Activer le débogage sur la socket. Seulement autorisé pour les processus avec la capacité
.B CAP_NET_ADMIN
ou un UID effectif nul.
.TP
.B SO_REUSEADDR
Indique que les règles permettant la validation des adresses fournies dans un appel
.BR bind (2)
doivent autoriser la réutilisation des adresses locales. Pour les sockets
.B PF_INET
cela signifie que la socket peut s'attacher à n'importe quelle adresse
sauf s'il y a une attente active dessus. Lorsque la socket en attente
est attachée à
.B INADDR_ANY
avec un port spécifique, il n'est pas possible de s'attacher à nouveau
à ce port quelque soit l'adresse locale.
.TP
.B SO_TYPE
Obtenir le type de socket, sous forme d'entier (comme
.BR SOCK_STREAM ).
Ne peut qu'être
lu avec
.BR getsockopt .
.\" SO_ACCEPTCONN is in SUSv3, and its origin is explained in
.\" W R Stevens, UNPv1
.TP
.B SO_ACCEPTCONN
Renvoie une valeur indiquant si la socket a été déclarée comme acceptant
les connexions à l'aide de
.BR listen ().
La valeur 0 indique que la socket n'est pas en attente de connexions\ ;
la valeur 1 indique que la socket accepte les connexions.
Peut seulement être
lu avec
.BR getsockopt .
.TP
.B SO_DONTROUTE
Ne pas émettre par l'intermédiaire d'une passerelle, n'envoyer qu'aux hôtes directement
connectés. Le même effet peut être obtenu avec l'attribut
.B MSG_DONTROUTE
durant une opération
.BR send (2)
sur la socket. Il s'agir d'un attribut entier booléen.
.TP
.B SO_BROADCAST
Fixer ou lire l'attribut broadcast. Lorsqu'il est actif, une socket datagramme
reçoit les paquets envoyés à l'adresse broadcast et peut envoyer des paquets
à une adresse broadcast. Cette option n'a aucun effet sur les sockets de type
.BR SOCK_STREAM.
.TP
.B SO_SNDBUF
Fixer ou lire la taille maximale en octets du buffer d'émission. La valeur par défaut
est fixée par le sysctl
.B wmem_default
et la valeur maximale autorisée est fixée par le
sysctl
.BR wmem_max .
.TP
.B SO_RCVBUF
Fixer ou lire la taille maximale en octets du buffer de réception. La valeur par défaut
est fixée par le sysctl
.B rmem_default
et la valeur maximale autorisée est fixée par le
sysctl
.BR rmem_max .
.TP
.B SO_LINGER
Fixer ou lire l'option
.BR SO_LINGER .
L'argument est une
structure
.BR linger .
.PP
.RS
.nf
.ta 4n 10n 22n
struct linger {
	int	l_onoff;	/* actif */
	int	l_linger;	/* délai maximal */
};
.ta
.fi
.RE
.IP
Lorsque ce paramètre est actif, un appel
.BR close (2)
ou
.BR shutdown (2)
ne se terminera pas avant que tous les messages en attente pour la socket aient été correctement
émis ou que le délai soit écoulé. Sinon, l'appel revient immédiatement et la fermeture est
effectuée à l'arrière-plan.
Lorsque la socket est fermée lors d'un
.BR exit (3),
elle se vide toujours à l'arrière-plan.
.TP
.B SO_PRIORITY
Fixe la priorité définie par le protocole pour tous les paquets envoyés sur la socket.
Linux utiliser cette valeur pour trier les files réseau\ : les paquets avec une priorité
élevés peuvent être traités d'abord, en fonction de la gestion des files sur
le périphérique. Pour
.BR ip (7),
ceci fixe aussi le champ IP Type-Of-Service pour les paquets sortants.
.TP
.B SO_ERROR
Lire et effacer l'erreur en attente sur la socket. Uniquement valide pour
.BR getsockopt .
Renvoie un entier.
.SH SIGNAUX
Lorsqu'on écrit sur une socket orientée connexion qui a été fermée
(localement ou à l'autre extrémité) le signal
.B SIGPIPE
est envoyé au processus écrivain, et
.B EPIPE
est renvoyé.
Le signal n'est pas envoyé lorsque l'appel d'écriture
contenait
l'attribut
.BR MSG_NOSIGNAL .
.PP
Lorsqu'on le demande avec l'option
.B FIOSETOWN
de fcntl ou l'option
.B SIOCSPGRP
de ioctl, le signal
.B SIGIO
est envoyée quand un événement d'entrée-sortie se produit. Il est possible d'utiliser
.BR poll (2)
ou
.BR select (2)
dans le gestionnaire de signal pour savoir sur quelle socket l'événement s'est produit.
Une alternative (sous Linux 2.2) est de demander un signal temps-réel avec le fnctl
.BR F_SETSIG .
Le gestionnaire du signal temps-réel sera invoqué avec le descripteur
de fichier dans le champ
.I si_fd
de
.IR siginfo_t .
Voir
.BR fcntl (2)
pour plus d'informations.
.PP
Dans certains cas (par exemple différents processus accédant à la même socket),
la condition ayant déclenché le
.B SIGIO
peut avoir disparu quand le processus réagit au signal. Si cela se produit,
le processus doit attendre à nouveau car Linux lui renverra le signal
ultérieurement.
.\" .SH ANCILLARY MESSAGES
.SH SYSCTLS
Les sysctls réseau des sockets de base sont accessibles avec les fichiers
.B /proc/sys/net/core/*
ou avec
l'interface
.BR sysctl (2).
.TP
.B rmem_default
contient la taille en octets par défaut du buffer de réception.
.TP
.B rmem_max
contient la taille maximale en octets du buffer de réception qu'un utilisateur peut
réclamer avec l'option
.B SO_RCVBUF
de la socket.
.TP
.B wmem_default
contient la taille en octets par défaut du buffer d'émission.
.TP
.B wmem_max
contient la taille maximale en octets du buffer d'émission qu'un utilisateur peut
réclamer avec l'option
.B SO_SNDBUF
de la socket.
.TP
.BR message_cost " et " message_burst
configurent le filtrage par jeton utilisé pour limiter la charge des
message d'avertissement dus aux événements réseau extérieurs.
.TP
.B netdev_max_backlog
Nombre maximal de paquets dans la file d'entrée globale.
.TP
.B optmem_max
Taille maximale par socket des données de service et des données de contrôle utilisateur
comme les iovecs.
.\" netdev_fastroute is not documented because it is experimental
.SH IOCTLS
Ces ioctls sont accessibles en utilisant
.BR ioctl (2)\ :

.RS
.nf
.IB error " = ioctl(" ip_socket ", " ioctl_type ", " &value_result ");"
.fi
.RE

.TP
.B SIOCGSTAMP
Renvoie une structure
.B struct timeval
avec l'horodatage de réception du dernier paquet transmis à l'utilisateur. Ceci permet
des mesures précises de circulation sur le réseau. Voir
.BR setitimer (2)
pour le détail de la
.BR "struct timeval" .
.\"
.TP
.BR SIOCSPGRP
Fixer le processus ou le groupe de processus auquel envoyer les signaux
.B SIGIO
ou
.B SIGURG
lorsqu'une
opération d'entrée-sortie
asynchrone s'est terminée ou si des données urgentes sont disponibles.
L'argument est un pointeur sur un
.BR pid_t .
Si l'argument est positif, on envoie le signal à ce processus. S'il est négatif
on l'envoie au groupe de processus dont l'identifiant correspond à la valeur
absolue de l'argument.
Un processus ne peut demande que l'émission vers lui-même ou son propre
groupe, à moins qu'il ait la capacité
.B CAP_KILL
ou un UID effectif nul.
.TP
.B FIOASYNC
Changer l'attribut
.B O_ASYNC
pour activer ou désactiver le mode d'entrée-sortie asynchrone sur la socket. Le mode
d'entrées-sorties asynchrones signifie que le signal
.B SIGIO
ou le signal fixé avec
.B F_SETSIG
est envoyé quand un événement d'entrée-sortie se produit.
.IP
L'argument est un attribut booléen entier.
.\"
.TP
.BR SIOCGPGRP
Lire le processus ou le groupe de processus auquel les signaux
.B SIGIO
ou
.B SIGURG
sont envoyés,
ou zéro
si aucun n'est configuré.
.PP
Fcntls valides\ :
.TP
.BR FIOGETOWN
Comme l'ioctl SIOCGPGRP.
.TP
.BR FIOSETOWN
Comme l'ioctl SIOCSPGRP.
.SH NOTES
Linux suppose que la moitié du buffer d'émission/réception est utilisé pour les structures
internes du noyau. Ainsi les sysctls sont deux fois plus grand que ce que l'on peut
observer directement sur le câble.
.SH BOGUES
Les options de socket
.B CONFIG_FILTER
.B SO_ATTACH_FILTER
et
.B SO_DETACH_FILTER
ne sont
pas documentées. Pour les utiliser, il est conseillé d'utiliser la
bibliothèque libpcap.
.SH VERSIONS
.B SO_BINDTODEVICE
a été introduit dans Linux 2.0.30.
.B SO_PASSCRED
est une nouveauté de Linux 2.2.
Les sysctls sont nouveaux dans Linux 2.2.
.B SO_RCVTIMEO
et
.B SO_SNDTIMEO
sont supportées depuis Linux 2.3.41. Précédemment, les délais d'attente
étaient fixés dans les protocoles et ne pouvaient être ni lus
ni modifiés.
.SH AUTEURS
Cette page de manuel a été écrite par Andi Kleen.
.SH "VOIR AUSSI"
.BR socket (2),
.BR ip (7),
.BR setsockopt (2),
.BR getsockopt (2),
.BR packet (7),
.BR ddp (7)
.SH TRADUCTION
Christophe Blaess, 2001-2003.

Alain Portal, 2005.
