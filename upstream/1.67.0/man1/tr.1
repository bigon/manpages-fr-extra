.\" Traduction 14/01/1997 par Christophe Blaess (ccb@club-internet.fr)
.\"
.\" MàJ 30/07/2003 coreutils-4.5.3
.TH TR 1 "30 juillet 2003" coreutils "Manuel de l utilisateur Linux"
.SH NOM
tr \- Transposer ou éliminer des caractères.
.SH SYNOPSIS
.B tr
[\-cst] [\-\-complement] [\-\-squeeze\-repeats]
[\-\-truncate\-set1] chaîne_1 chaîne_2
.br
.B tr
{\-s,\-\-squeeze\-repeats} [\-c] [\-\-complement] chaîne_1
.br
.B tr
{\-d,\-\-delete} [\-c] chaîne_1
.br
.B tr
{\-d,\-\-delete} {\-s,\-\-squeeze\-repeats} [\-c] [\-\-complement]
chaîne_1 chaîne_2
.PP
La version GNU de
.B tr
accepte également les options \-\-help et \-\-version.
.SH DESCRIPTION
.PP
Cette page de manuel documente la version GNU de
.B tr.

.B tr
copie son entrée standard sur sa sortie standard en effectuant l'une des
manipulations suivantes :
.IP
\(bu transposer, et éventuellement réunir les caractères dupliqués de la chaîne résultante
.br
\(bu réunir les caractères dupliqués
.br
\(bu supprimer des caractères
.br
\(bu supprimer des caractères, et éventuellement réunir les caractères dupliqués de la chaîne résultante
.PP
Les arguments \fIchaîne1\fP et (éventuellement) \fIchaîne2\fP décrivent des
ensembles ordonnés de caractères, que l'on mentionnera plus bas sous les noms de
jeu1 et jeu2.
Ces ensembles représentent les caractères de l'entrée standard sur lesquels
.B tr
travaillera.
L'option
.I \-\-complement
(\fI\-c\fP) remplace jeu1 par son complément (tous les caractères n'appartenant
pas à jeu1).
.SS "DÉFINIR LES ENSEMBLES DE CARACTÈRES"
.PP
Le format des arguments \fIchaîne1\fP et \fIchaîne2\fP ressemble à celui
des expressions rationnelles. Il ne s'agit toutefois pas d'expressions
rationnelles, mais simplement de listes de caractères.
La plupart des caractères sont représentes par eux-mêmes, néanmoins
les chaînes peuvent également contenir des raccourcis plus simples
décrits ci-dessous. Certains de ces raccourcis ne peuvent être
utilisés que dans \fIchaîne1\fP ou que dans \fIchaîne2\fP, comme c'est
mentionné ci-dessous.
.PP
Séquences avec BackSlash. Un backslash suivi d'un caractère non défini
ci-dessous déclenche un message d'erreur.
.IP \ea
Contrôle-G.
.IP \eb
Contrôle-H.
.IP \ef
Contrôle-L.
.IP \en
Contrôle-J.
.IP \er
Contrôle-M.
.IP \et
Contrôle-I.
.IP \ev
Contrôle-K.
.IP \eooo
Le caractère de valeur octale \fIooo\fP, s'étendant sur 1 à 3 chiffres.
.IP \e\e
BackSlash.
.PP
Intervalles.  La notation `\fIm\fP\-\fIn\fP' représente tous les caractères
compris entre \fIm\fP et \fIn\fP, en ordre croissant.  \fIm\fP
doit être inférieur à \fIn\fP, sinon une erreur se produit. 
Par exemple, `0\-9' est équivalent à `0123456789'.
Bien que la version GNU de
.BR tr
ne supporte pas la syntaxe System V qui utilise des crochets pour indiquer
les intervalles, les transpositions spécifiées avec ce format fonctionneront
quand même si les crochets de chaîne1 correspondent à des crochets identiques
de chaîne2.
.PP
Répétition de caractères. La notation `[\fIc\fP*\fIn\fP]' dans
\fIchaîne2\fP se développe en \fIn\fP copies du caractère \fIc\fP. Ainsi,
`[y*6]' est équivalent à `yyyyyy'.  La notation `[\fIc\fP*]' dans
\fIchaîne2\fP se développe en autant de copie de \fIc\fP qu'il le faut
pour rendre le jeu2 aussi long que jeu1. Si \fIn\fP commence par 0, il est
interprété en octal, sinon en décimal.
.PP
Classes de caractères. La notation `[:\fInom-classe\fP:]' correspond à
l'ensemble de tous les caractères appartenant à la classe (prédéfinie)
\fInom-classe\fP.
Les caractères ne se présentent pas dans un ordre particulier, sauf pour
les classes `upper' `lower' dont les membres sont en ordre croissant.
Quand les options
.I \-\-delete
(\fI\-d\fP) et
.I \-\-squeeze\-repeats
(\fI\-s\fP) sont utilisées simultanément, n'importe quelle classe de
caractères peut être mentionnée dans \fIchaîne2\fP.
Autrement, seules les classes `lower' et `upper' sont acceptées dans
\fIstring2\fP, et ceci seulement si la classe correspondante
(`upper' et `lower', respectivement) est mentionnée à la même position
relative dans \fIchaîne1\fP. Ceci permet de convertir le type
majuscule/minuscule des caractères. Les noms de classes sont indiqués
ci-dessous. Une erreur se produit si l'on tente d'utiliser un nom de
classe invalide.
.IP alnum
Lettres et chiffres.
.IP alpha
Lettres.
.IP blank
Caractères d'espacement horizontaux.
.IP cntrl
caractères de contrôle.
.IP digit
Chiffres.
.IP graph
caractères imprimables, sauf l'espace.
.IP lower
Lettres minuscules.
.IP print
caractères imprimables, y compris l'espace.
.IP punct
caractères de ponctuation.
.IP space
Caractères d'espacement horizontaux ou verticaux.
.IP upper
Lettres majuscules.
.IP xdigit
Chiffres hexadécimaux.
.PP
Classes d'équivalence. La syntaxe `[=\fIc\fP=]' se développe en l'ensemble
des caractères équivalents à \fIc\fP, sans ordre particulier.
Les classes d'équivalence sont une invention récente destinée à
supporter les alphabets autres que l'anglais. Mais il n'y a pas
de manière standard de les définir ou de connaître leur contenu.
Ainsi elles ne sont pas totalement implémentées dans la version
GNU de
.BR tr .
La classe d'équivalence d'un caractère est composée uniquement de ce
caractère, ce qui rend ces classes inutiles actuellement.

[NDT] Il serait pourtant bien pratique que la classe d'équivalence
d'un caractère contienne également ses versions accentuées...
.SS TRADUCTION
.PP
.B tr
effectue les traductions de caractères lorsqu'on lui fournit à
la fois \fIchaîne1\fP et \fIchaîne2\fP, et si l'on n'utilise pas
l'option \-\-delete (\fI\-d\fP).
.B tr
transpose chaque caractère d'entrée appartenant au jeu1 en un caractère
correspondant du jeu2. Les caractères non trouvés dans jeu1 sont
copies sans modification. Quand un caractère apparaît plusieurs fois
dans jeu1, et si les caractères correspondants de jeu2 ne sont pas
toujours les mêmes, seule la version finale est utilisée.
Par exemple ces deux commandes sont équivalentes :
.RS
.nf
tr aaa xyz
tr a z
.fi
.RE
.PP
Un usage classique de
.B tr
est la conversions de minuscules en majuscules. Ceci peut être réalisé
de nombreuses manières différentes. En voici trois :
.RS
.nf
tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
tr a-z A-Z
tr '[:lower:]' '[:upper:]'
.fi
.RE
.PP
[NDT] Une utilisation pratique pour nous est la suppression des accents
d'un texte. En voici un exemple supprimant les accents utilisés en français.
.RS
.nf
tr "àçéèêëîïôöùüÂÇÉÈÊËÎÏÔÖÙÜ" "aceeeeiioouuACEEEEIIOOUU"
.fi
.RE
.PP
Quand
.B tr
effectue une traduction, jeu1 et jeu2 doivent normalement avoir la même
longueur. Si jeu1 est plus court que jeu2, les caractères supplémentaires
en fin de jeu2 sont ignorés.
.PP
D'autre part, si jeu1 est plus long que jeu2, la portabilité n'est
pas assurée. POSIX.2 précise que dans ce cas le comportement est
indéfini. La version BSD de
.B tr
complète jeu2 jusqu'à la même longueur que jeu1 en répétant son dernier
caractère de fois autant que nécessaire. La version System V de
.B tr
tronque jeu1 à la même longueur que jeu2.
.PP
Par défaut, la version GNU de
.B tr
se comporte comme la version BSD.
Quand l'option \-\-truncate\-set1 (\fI\-t\fP) est mentionnée, elle
se comporte comme la version System V.
Cette option n'a pas d'effet pour les autres manipulations que les
traductions.
.PP
Le comportement System V de
.B tr
rend impossible la commande BSD classique
.RS
.nf
tr -cs A-Za-z0-9 '\e012'
.fi
.RE
car elle ne convertit que les octets nuls
(le premier élément du complément de jeu1) en Saut de Ligne,
au lieu de convertir tous les caractères non-alphanumériques.
.SS "ÉLIMINER LES RÉPÉTITIONS ET EFFACER DES CARACTÈRES"
.PP
Quand seule l'option \-\-delete (\fI\-d\fP) est fournie,
.B tr
supprime tous les caractères d'entrée présents dans jeu1.
.PP
Quand seule l'option \-\-squeeze\-repeats (\fI\-s\fP) est fournie,
.B tr
remplace chaque répétitions de caractères appartenant au jeu1 par une
seule occurrence de ce caractère.
.PP
Quand les deux options \-\-delete et \-\-squeeze\-repeats sont réclamées
en même temps,
.B tr
effectue d'abord toutes les suppressions des caractères de jeu1, puis
élimine les répétitions des caractères appartenant au jeu2.
.PP
L'option \-\-squeeze\-repeats peut également être utilisée pendant les
traductions, auquel cas
.B tr
effectue d'abord la transposition, puis élimine les répétitions de
caractères appartenant au jeu2.
.PP
Voici quelques exemples destinés à illustrer diverses combinaisons
des options :
.PP
Supprimer les octets nuls :
.RS
tr -d '\e000'
.RE
.PP
Afficher chaque mot sur une ligne indépendante. Ceci convertit tous les
caractères non alphanumériques en sauts de lignes, puis regroupe
les lignes blanches successives en un seul saut de ligne :
.RS
tr -cs '[a-zA-Z0-9]' '[\en*]'
.RE
.PP
Convertir les séquences de sauts de lignes en un seul saut de
ligne (ceci supprime les lignes blanches) :
.RS
tr -s '\en'
.RE
.PP
La version GNU de
.B tr
accepte également les options supplémentaire suivantes :
.TP
.I "\-\-help"
Afficher un message d'aide sur la sortie standard et se terminer normalement.
.TP
.I "\-\-version"
Afficher un numéro de version sur la sortie standard et se terminer normalement.
.SS "MESSAGE D'AVERTISSEMENT"
.PP
Lorsque la variable d'environnement POSIXLY_CORRECT est validée, plusieurs
messages d'erreurs et d'avertissements sont inhibés, afin d'assurer une
compatibilité stricte avec POSIX.2.
Les messages en question se produisent dans les circonstances suivantes :
.PP
1. Quand l'option
.I \-\-delete
est utilisée sans l'option
.IR \-\-squeeze\-repeats,
et si \fIchaîne2\fP est fournie, la version GNU de
.B tr
affiche par défaut un message d'erreur et se termine, car \fIchaîne2\fP ne
serait pas utilisée. Les spécifications POSIX indiquent que dans ce
cas \fIchaîne2\fP doit simplement être ignorée. Ignorer un argument sans
prévenir l'utilisateur n'est pas une bonne idée.
.PP
2. Quand un nombre octal ambigu est fourni par une séquence d'échappement.
Par exemple \e400 correspond en réalité au caractère \e40 suivi du
chiffre 0, car la valeur octale 400 ne tient pas dans un octet.
.PP
Remarquez que la version GNU de
.B tr
ne fournit pas de compatibilité totale BSD ou System V. Par exemple,
il n'y a pas d'option pour inhiber l'interprétation des séquences
POSIX  [:alpha:], [=c=], et [c*10]. Remarquez également que la version GNU de
.B tr
ne supprime pas les octets nuls automatiquement contrairement aux
versions UNIX traditionnelles, avec lesquelles il n'y a pas de
moyen de conserver les octets nuls.

.SH TRADUCTION
Christophe Blaess, 1997-2003.
