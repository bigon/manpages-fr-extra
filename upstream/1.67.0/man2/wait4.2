.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 13:32:44 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 15/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Mise a Jour 15/04/97
.\" Mise a Jour 19/07/97
.\" Mise a Jour 04/06/2001 - LDP-man-pages-1.36
.\" Mise à jour 20/01/2002 - LDP-man-pages-1.47
.\" Mise à jour 18/07/2003 - LDP-man-pages-1.56
.TH WAIT4 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
wait3, wait4 \- Attendre la fin d'un processus \- Style BSD.
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/time.h>
.B #include <sys/resource.h>
.B #include <sys/wait.h>
.sp 2
.BI "pid_t wait3(int *" "status" ", int " options ,
.BI "      struct rusage *" rusage );
.sp
.BI "pid_t wait4(pid_t " pid ", int *" status ", int " options ,
.BI "      struct rusage *" rusage );
.fi
.SH DESCRIPTION
La fonction
.B wait3
suspend l'exécution du processus courant jusqu'à ce qu'un enfant
se termine, ou jusqu'à ce qu'un signal à intercepter arrive.
Si un processus fils s'est déjà terminé au moment de l'appel
(il est devenu "zombie"), la fonction revient immédiatement.
Toutes les ressources utilisées par le fils sont libérées.

La fonction
.B wait4
suspend l'exécution du processus courant jusqu'à ce que le 
processus fils numéro
.I pid
se termine, ou jusqu'à ce qu'un signal à intercepter arrive.
Si le fils mentionné par
.I pid
s'est déjà terminé au moment de l'appel
(il est devenu "zombie"), la fonction revient immédiatement.
Toutes les ressources utilisées par le fils sont libérées.

La valeur de
.I pid
peut également être l'une des suivantes :
.IP "< \-1"
attendre la fin de n'importe quel processus fils
appartenant à un groupe de processus d'ID 
.IR pid .
.IP \-1
attendre la fin de n'importe quel fils. C'est le même
comportement que
.BR wait3 .
.IP 0
attendre la fin de n'importe quel processus fils du même groupe
que l'appelant.
.IP "> 0"
attendre la fin du processus numéro
.IR pid .
.PP
La valeur de l'argument option
.I options
est un 
.I OU
binaire entre les constantes suivantes :
.TP
.B WNOHANG
ne pas bloquer si aucun fils ne s'est terminé.
.TP
.B WUNTRACED
recevoir l'information concernant également les fils bloqués
si on ne l'a pas encore reçue.
.PP
Si
.I status
est non
.BR NULL ,
.B wait3
et
.B wait4
y stockent l'information sur la terminaison du fils.
.PP
Cette information peut être analysée avec les macros suivantes,
qui prennent en argument le buffer
.I status
(un \fBint\fP et non pas un pointeur sur le buffer).
.TP 
.BI WIFEXITED( status )
non nul si le fils s'est terminé normalement
.TP
.BI WEXITSTATUS( status )
donne le code de retour tel qu'il a été mentionné dans l'appel
.B exit()
ou dans le
.B return
de la routine
.B main.
Cette macro ne peut être évaluée que si 
.B WIFEXITED
est non nul.
.TP
.BI WIFSIGNALED( status )
indique que le fils s'est terminé à cause d'un signal non
intercepté.
.TP
.BI WTERMSIG( status )
donne le numéro du signal qui a causé la fin du fils. Cette
macro ne peut être évaluée que si
.B WIFSIGNALED
est non nul.
.TP
.BI WIFSTOPPED( status )
indique que le fils est actuellement arrêté. Cette macro n'a de
sens que si l'on a effectué l'appel avec l'option
.BR WUNTRACED .
.TP
.BI WSTOPSIG( status )
donne le numéro du signal qui a causé l'arrêt du fils. Cette macro
ne peut être évaluée que si
.B WIFSTOPPED
est non nul.
.PP
Si
.I rusage
n'est pas
.BR NULL ,
La structure
.B rusage
définie dans
.B <sys/resource.h>
sera remplie avec les informations de comptabilité. Voir
.BR getrusage (2)
Pour plus de détails.
.SH "VALEUR RENVOYÉE"
En cas de réussite, le PID du fils qui s'est terminé est renvoyé,
en cas d'échec \-1 est renvoyé et
.I errno
contient le code d'erreur.
.SH "ERREURS"
.TP
.B ECHILD
Le processus indiqué par
.I pid
n'existe pas, ou n'est pas un fils du processus appelant.
.TP
.B EINTR
.B WNOHANG
n'est pas indiqué, et un signal à intercepter ou
.B SIGCHLD
a été reçu.
.SH NOTE
L'inclusion de
.I <sys/time.h>
n'est plus obligatoire, mais améliore la portabilité.
(En fait,
.I <sys/resource.h>
définit la structure
.I rusage
qui contient des champs de type
.I struct timeval
définis dans
.IR <sys/time.h> ).
.LP
Les prototypes de ces fonctions ne sont disponibles que si la constante
.B _BSD_SOURCE
est définie (soit explicitement, ou implicitement en ne définissant par
_POSIX_SOURCE ou en compilant avec l'option -ansi).
.SH "CONFORMITÉ"
SVr4, POSIX.1
.SH "VOIR AUSSI"
.BR signal (2),
.BR getrusage (2),
.BR wait (2),
.BR signal (7)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
