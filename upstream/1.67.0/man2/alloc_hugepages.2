.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 2003 Andries E. Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"    Traduction Christophe Blaess <ccb@club-internet.fr>
.\"    MàJ  18/07/2003 - LDP 1.56
.TH ALLOC_HUGEPAGES 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
alloc_hugepages, free_hugepages \- Allouer ou libérer des pages immenses.
.SH SYNOPSIS
.BI "void *alloc_hugepages(int " cle ", void *" adr ", size_t " lg ", int " prot ", int " attr );
.\" asmlinkage unsigned long sys_alloc_hugepages(int key, unsigned long addr,
.\" unsigned long len, int prot, int flag);
.sp
.BI "int free_hugepages(void *" adr );
.\" asmlinkage int sys_free_hugepages(unsigned long addr);
.SH DESCRIPTION
Les appels-système
.B alloc_hugepages
et
.B free_hugepages
ont été introduits dans Linux 2.5.36 et retirés à nouveau dans le 2.5.54.
Ils n'existent que sur i386 et ia64 (compilation avec l'option CONFIG_HUGETLB_PAGE).
Dans Linux 2.4.20 le numéro d'appel-système existe, mais renvoie toujours ENOSYS.
.LP
Sur un i386, le mécanisme matériel de gestion mémoire manipule des pages ordinaires (4 Ko) et des
pages immenses (2 à 4 Mo). De même l'ia64 connaît des pages immenses de diverses
tailles. Ces appels-système servent à projeter ces pages immenses dans l'espace
mémoire du processus ou à les libérer.
Les pages immenses sont verrouillées en mémoire et jamais swappées.
.LP
Le paramètre
.I cle
est un identificateur. Lorsqu'il vaut zéro, les pages sont privées et non héritées
par les processus descendants.
Lorsqu'il est positif, les pages sont partagées avec les autres applications utilisant la même
.IR cle ,
et héritées par les processus enfants.
.LP
Le paramètre
.I adr
de
.B free_hugepages()
indique quelle page doit être libérée - il a été renvoyé lors de
l'appel
.BR alloc_hugepages() .
(La mémoire n'est véritablement libérée que lorsque tous ses utilisateurs la relâchent).
Le paramètre
.I adr
de
.B alloc_hugepages()
est un désir que le noyau peut suivre ou non.
Les adresses doivent être correctement alignées.
.LP
Le paramètre
.I lg
est la taille du segment désiré. Il doit s'agir d'un multiple
de la taille d'une page immense.
.LP
Le paramètre
.I prot
indique le type de protection du segment. Il s'agit
d'une association de PROT_READ, PROT_WRITE, PROT_EXEC.
.LP
Le paramètre
.I flag
est ignoré, sauf si
.I cle
est positive. Dans ce cas, si
.I flag
vaut IPC_CREAT, alors un nouveau segment de page énorme est créé si
aucun n'existe avec cette clé. Sinon, l'erreur ENOENT est renvoyé
si aucun segment correspondant à la clé n'existe.
.IR 
.SH "VALEUR RENVOYÉE"
S'il réussit
.B alloc_hugepages
renvoie l'adresse du segment alloué, et
.B free_hugepages
renvoie zéro. En cas d'erreur, ils renvoient \-1 et remplissent
.I errno
avec le code d'erreur.
.SH ERREURS
.TP
.B ENOSYS
L'appel-système n'est pas supporté par ce noyau.
.SH "CONFORMITÉ"
Ces appels n'existent que dans les noyaux Linux 2.5.36 - 2.5.54.
Ils sont spécifiques à Linux sur processeurs Intel, et ne doivent pas être
employés sur des programmes conçus pour être protables. De plus, les numéros
de ces appels-système ont été marqués comme libres, et les programme les
utilisant risquent de se comporter de manière imprévisible dans l'avenir.
.SH FICHIERS
.I /proc/sys/vm/nr_hugepages
Nombre de pages énormes configurées.
Peut être lu ou écrit.
.LP
.I /proc/meminfo
Indique le nombre de pages énormes configurés, et leurs tailles
dans les trois variables HugePages_Total, HugePages_Free, Hugepagesize.
.SH NOTES
Ces appels-système ont disparu. Maintenant, le système de fichiers hugetblfs peut
être employé à leur place. La mémoire correspondant aux pages énormes (si le
processeur les supportent) peut être obtenue par un mmap() des fichiers de
ce système de fichiers virtuel.
.LP
Le nombre maximal de pages énormes peut être indiqué en utilisant l'argument
.B hugepages=
au boot.
.SH TRADUCTION
Christophe Blaess, 1996-2003.
