.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\"
.\"
.\" Traduction  11/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" Màj 08/04/1997
.\" Màj 19/07/1997
.\" Màj 18/07/2003
.\" Màj 30/07/2003 LDP-1.58
.\" Màj 04/07/2005 LDP-1.61
.\"
.TH MLOCK 2 "30 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
mlock \- Désactiver la pagination pour certaines parties de la mémoire.
.SH SYNOPSIS
.nf
.B #include <sys/mman.h>
.sp
\fBint mlock(const void *\fIaddr\fB, size_t \fIlen\fB);
.fi
.SH DESCRIPTION
.B mlock
désactive la pagination pour la portion de mémoire débutant à l'adresse
.I addr
avec une longueur de
.I len
octets.  Quand l'appel système
.B mlock
réussit, on a l'assurance que toutes les pages contenant une partie
de la zone mémoire spécifiée résident en mémoire vive (RAM) et y
resteront jusqu'à un déverrouillage par la fonction
.B munlock
ou
.B munlockall,
jusqu'à ce que les pages soit libérées avec
.BR munmap ,
ou encore jusqu'à ce que le processus se termine ou démarre un programme avec
.BR exec.
Les processus fils n'héritent pas du verrouillage des pages à travers un
.BR fork.

Il y a deux domaines principaux d'applications au verrouillage de pages\ :
les algorithmes en temps réel, et le traitement de données confidentielles.
Les applications temps réel réclament un comportement temporel déterministe, et
la pagination est, avec l'ordonnancement, une cause majeure de délais imprévus.
Ces algorithmes basculent habituellement sur un ordonnancement temps réel avec
.BR sched_setscheduler.
Les logiciels de cryptographie manipulent souvent quelques octets hautement
confidentiels, comme des mots de passe ou des clés privées. A cause de la
pagination ces données secrètes risquent d'être transférées sur un support
physique où elles pourraient être lues par un ennemi longtemps après que le
logiciel se soit terminé. (Soyez toutefois conscient que le mode suspendu
sur les portables et certains ordinateurs de bureau sauvegarde une copie
de la mémoire sur le disque, quelques soient les verrouillages).

Il n'y a pas d'empilement des verrouillages mémoire, ce qui signifie qu'une
page verrouillée plusieurs fois par
.B mlock
ou
.B mlockall
sera libérée en un seul appel à
.B munlock
pour la zone mémoire correspondante ou par un appel à
.BR munlockall.
Les pages qui sont verrouillées par plusieurs zones, ou par plusieurs processus
restent verrouillées en mémoire vive tant qu'il y a au moins un processus ou une
zone qui les verrouille.

Sur les systèmes POSIX où
.B mlock
et
.B munlock
sont disponibles, la constante symbolique
.B _POSIX_MEMLOCK_RANGE
est définie dans <unistd.h> et la valeur symbolique
.B PAGESIZE
de <limits.h> indique le nombre d'octets par page.
.SH NOTES
Dans l'appel-système de Linux,
.I addr
est automatiquement arrondie à la frontière de page la plus proche.
Toutefois, POSIX 1003.1-2001 permet à l'implémentation d'imposer que
.I addr
soit alignée sur une frontière de page. Les programmes portable en prendront soin.
.SH "VALEUR RENVOYÉE"
L'appel
.B mlock
renvoie 0 si il réussit, ou \-1 s'il échoue, auquel cas
.I errno
contient le code d'erreur, et rien n'est modifié sur les verrouillages
de la mémoire du processus.
.SH ERREURS
.TP
.B ENOMEM
Une partie des adresses incluses dans la zone désirée ne correspond
pas à une page de l'espace d'adressage accessible, ou le processus
a essayé de dépasser le nombre maximal de pages verrouillées.
.TP
.B EPERM
L'appelant n'a pas les privilèges appropriés, seul le Super\-User
peut verrouiller des pages.
.TP
.B EINVAL
(Pas sous Linux)
.I addr
n'est pas un multiple de la taille de page.
.LP
Linux ajoute
.TP
.B EINVAL
.I len
est négatif.
.SH CONFORMITÉ
POSIX.1b, SVr4. SVr4 documente un code d'erreur EAGAIN supplémentaire.
.SH "VOIR AUSSI"
.BR munlock (2),
.BR mlockall (2),
.BR munlockall (2).
.BR munmap (2),
.BR setrlimit (2)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
