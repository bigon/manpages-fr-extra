.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\"   MàJ 18/07/2003 LD-1.56
.TH PIVOT_ROOT 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
pivot_root \- Modifier la racine du système de fichiers.
.SH SYNOPSIS
.B #include <linux/unistd.h>
.sp
.B _syscall2(int,pivot_root,const char *,new_root,const char *,put_old)
.sp
.BI "int pivot_root(const char *" new_root ", const char *" put_old );
.SH DESCRIPTION
\fBpivot_root\fP déplace la racine du système de fichiers pour le processus courant
vers le répertoire \fIput_old\fP et fait de \fInew_root\fP la nouvelle racine du
système de fichiers pour le processus en cours.

L'utilisation typique de \fbpivot_root\fP est durant le boot, lorsque le système
monte un système de fichiers temporaire (par ex. un \fBinitrd\fP) puis monte
le véritable système de fichier, et le transforme en racine pour tous les
processus et threads concernés.

\fBpivot_root\fP peut changer ou non le répertoire de travail en cours
de tous les processus et threads qui utilisaient l'ancien répertoire racine.
L'appelant de \fBpivot_root\fP doit s'assurer que les processus ayant pour
racine ou répertoire de travail l'ancien répertoire se comportent correctement.
Le meilleur moyen est de modifier leur répertoire de travail et répertoire
racine avant d'invoquer \fBpivot_root\fP.

Le paragraphe ci-dessus est intentionellement flou, car l'implémentation
de \fBpivot_root\fP peut changer dans le futur. Actuellement,
\fBpivot_root\fP modifie la racine et le répertoire de travail de tous les
processus ou threads en \fInew_root\fP s'ils pointent sur l'ancien répertoire.
Ceci est nécessaire pour éviter que des threads du noyau ne conservent
l'ancien répertoire occupé, même s'ils accèdent au nouveau système de fichiers.
Dans le futur, il y aura peut-être un mécanisme pour les threads du noyau
pour renoncer explicitement à tout accès au système de fichiers, ce qui
évitera ce mécanisme un peu invasif.

Notez que ceci s'applique aussi au processus en cours\ : \fBpivot_root\fP
peut changer ou non son répertoire de travail. Il vaut mieux donc appeler
\fBchdir("/")\fP immédiatement après \fBpivot_root\fP.

Les restrictions suivantes s'appliquent à\fInew_root\fP et \fIput_old\fP\ :
.IP "\-" 3
Ils doivent être des répertoires,
.IP "\-" 3
\fInew_root\fP et \fIput_old\fP ne doivent pas être sur le même système de
fichiers que la racine actuelle.
.IP "\-" 3
\fIput_old\fP doit être un descendant de \fInew_root\fP\ : ajouter un nombre
non-nul de \fB/..\fP à la chaîne \fIput_old\fP doit ramener au même
répertoire que \fInew_root\fP.
.IP "\-" 3
Aucun système de fichiers ne doit être monté sur \fIput_old\fP.
.PP
Voir \fBpivot_root(8)\fP pour des exemples d'utilisation supplémentaires.

Si la racine en cours n'est pas un point de montage (après un \fBchroot(2)\fP
ou un \fBpivot_root\fP, voir plus bas), ce n'est pas l'ancien répertoire,
mais le point de montage du système de fichiers qui est monté dans \fIput_old\fP.

.SH NOTES
\fInew_root\fP n'a pas besoin d'être un point de montage. Dans ce cas,
\fB/proc/mounts\fP montrera le point de montage concernant
\fInew_root\fP comme racine (\fB/\fP).
.SH "VALEUR RENVOYÉE"
S'il réussit, l'appel renvoie zéro. Sinon il renvoie \-1 et rempli
\fIerrno\fP.
.SH ERREURS
\fBpivot_root\fP peut renvoyer  (dans \fIerrno\fP) toute erreur renvoyée par
\fBstat(2)\fP. De plus, il peut renvoyer\ :

.TP
.B EBUSY
\fInew_root\fP ou \fIput_old\fP sont sur le système de fichier principal actuel,
ou un système de fichiers est déjà monté sur \fIput_old\fP.
.TP
.B EINVAL
\fIput_old\fP n'est pas un descendant de \fInew_root\fP.
.TP
.B ENOTDIR
\fInew_root\fP ou \fIput_old\fP n'est pas un répertoire.
.TP
.B EPERM
Le processus appelant n'a pas les capacités d'administration.
.SH BOGUES
\fBpivot_root\fP ne devrait pas modifier le répertoire racine et le répertoire
de travail des autres processus du système.

Les utilisations les plus obscures de \fBpivot_root\fP peuvent rapidement
rendre fou.
.SH "CONFORMITÉ"
\fBpivot_root\fP est spécifique à Linux et donc non portable.
.SH HISTORIQUE
\fBpivot_root\fP a été introduit dans Linux 2.3.41.
.SH "VOIR AUSSI"
.BR chdir (2),
.BR chroot (2),
.BR initrd (4),
.BR pivot_root (8),
.BR stat (2)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
