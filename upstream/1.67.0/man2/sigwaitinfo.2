.\" Copyright (c) 2002 Michael kerrisk <mtk16@ext.canterbury.ac.nz>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traduction Christophe Blaess <ccb@¢lub-internet.fr>
.\" MàJ 18/07/2003   LDP1.56
.TH SIGWAITINFO 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
sigwaitinfo, sigtimedwait \- Attente synchrone de signaux.
.SH SYNOPSIS
.B #include <signal.h>
.sp
.BI "int sigwaitinfo(const sigset_t *" set ", siginfo_t *" info ");"
.sp
.BI "int sigtimedwait(const sigset_t *" set ", siginfo_t *" info ", "
.BI "const struct timespec " timeout ");"
.SH DESCRIPTION
.BR sigwaitinfo ()
suspend l'exécution du processus appelant jusqu'à ce que l'un des signaux
de l'ensemble
.I set
soit reçu. (Si l'un des signaux de l'ensemble
.I set
est déjà en attente pour le processus appelant,
.BR sigwaitinfo ()
revient immédiatement avec les informations concernant le signal).

.BR sigwaitinfo ()
retire le signal de la liste des signaux en attente pour le processus, 
et renvoie le numéro du signal en retour de fonction.
Si l'argument
.I info
n'est pas
.BR NULL ,
alors il sera rempli avec une structure du type
.I siginfo_t
(voir
.BR sigaction (2))
contenant les informations concernant le signal.
.PP
Les signaux reçus via
.BR sigwaitinfo ()
sont délivrés dans l'ordre habituel, voir
.BR signal (7)
pour plus de détails.
.PP
.BR sigtimedwait ()
opère exactement commee
.BR sigwaitinfo ()
mais elle a un argument supplémentaire,
.IR timeout ,
qui permet de fixer une limite maximale au temps
d'attente.
Cet argument est du type\ :
.sp
.in +2n
.nf
struct timespec {
    long    tv_sec;         /* secondes */
    long    tv_nsec;        /* nanosecondes */
}
.fi
.in -2n
.sp
Si les deux champs de cette structure sont nuls, 
.BR sigtimedwait ()
revient tout de suite, soit avec des informations sur un signal déjà en
attente, soit avec une erreur si aucun
signaux de l'ensemble
.I set
n'étaient disponibles.
.SH "VALEUR RENVOYÉE"
S'ils réussissent
.BR sigwaitinfo ()
et
.BR sigtimedwait ()
renvoient un numéro de signal (une valeur supérieure à zéro).
S'ils échouent, ils renvoient \-1, et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EAGAIN
Aucun signal de l'ensemble
.I set
n'a été reçu avant expiration du délai
.I timeout
indiqué pour
.BR sigtimedwait ().
.TP
.B EINVAL
.I timeout
etait invalide.
.TP
.B EINTR
L'appel a été interrompu par un gestionaire de signal
(un signal autre que ceux présents dans l'ensemble
.IR set .)
.SH NOTES
En utilisation habituelle, l'appelant bloque les signaux de l'ensemble
.I set
au préalable avec un appel
.BR sigprocmask ()
(afin que la délivrance des signaux ne se produise pas en dehors
de l'appel
.BR sigwaitinfo ()
ou
.BR sigtimedwait())
et n'installe pas de gestionnaire pour ces signaux.
.PP
POSIX ne spécifie as le comportement si une valeur
.B NULL
est indiquée pour l'argument
.I timeout
de
.BR sigtimedwait ()
permettant par exemple d'avoir le même comportement
que celui de
.BR sigwaitinfo (),
ce qui est le cas sous Linux.
.SH "CONFORMITÉ"
POSIX 1003.1-2001
.SH "VOIR AUSSI"
.BR kill (2),
.BR sigaction (2),
.BR signal (2),
.BR sigpending (2),
.BR sigprocmask (2),
.BR sigqueue (2),
.BR signal (7),
.BR sigsetops (3)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
