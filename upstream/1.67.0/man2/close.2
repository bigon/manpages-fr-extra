.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 21 22:40:25 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Feb 18 15:27:48 1995 by Michael Haardt
.\"
.\" Traduction 9/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Mise à jour 05/05/99 LDP-man-pages-1.23
.\" Mise à jour 30/08/2000 LDP 1.31
.\" Mise à jour 30/05/2001 LDP 1.36
.\" màj 15/01/02 LDP-man-pages 1.47
.\" màj 18/07/03 LDP-man-pages 1.56
.TH CLOSE 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
close \- Fermer un descripteur de fichier.
.SH SYNOPSIS
.nf
.B #include <unistd.h>
.sp
.BI "int close(int " fd );
.fi
.SH DESCRIPTION
.B close
ferme le descripteur
.IR fd , 
de manière à ce qu'il ne référence plus
aucun fichier, et puisse être réutilisé. Tous les verrouillages sur le
fichier qui lui était associé, appartenant au processus, sont supprimés
(quelque soit le descripteur qui fut utilisé pour obtenir le verrouillage).
.PP
Si
.I fd
est la dernière copie d'un descripteur de fichier donné, les ressources
qui lui sont associées sont libérées. 
Si le descripteur était la dernière référence sur un
fichier supprimé avec
.BR unlink (2),
le fichier est effectivement effacé.
.SH "VALEUR RENVOYÉE"
.BR close
renvoie 0 s'il réussit, ou \-1 en cas d'échec, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EBADF
Le descripteur de fichier
.I fd
est invalide
.TP
.B EINTR
L'appel-système
.BR close ()
a été interrompu par un signal.
.TP
.B EIO
Une erreur d'entrée-sortie s'est produit.
.SH "CONFORMITÉ"
SVr4, SVID, POSIX, X/OPEN, BSD 4.3. SVr4 documente une
condition d'erreur supplémentaire ENOLINK.
.SH "NOTES"
Ne pas vérifier la valeur de retour de close est une pratique courante
mais également une grave erreur de programmation. Il est possible qu'une erreur
correspondant à un appel
.IR write (2)
antérieur ne soit rapportée que lors du
.B close
final.
Ne pas vérifier la valeur de retour lorsque l'on ferme un fichier peut
conduire à une perte silencieuse de données. Ceci est principalement
vrai dans le cas de systèmes de fichiers NFS, ou avec l'utilisation des
quotas de disques.
.PP
Une fermeture sans erreur ne garantit pas que les données on été vraiment écrites sur le disque, car le noyau
repousse les écritures le plus tard possible. Il n'est pas fréquent qu'un système de fichiers vide les buffers
dès la fermeture d'un flux. Si vous désirez vous assurer que les informations sont en sûreté sur le disque,
utilisez
.BR fsync (2)
(mais des considérations matérielles entrent en jeu à ce moment).		
.SH "VOIR AUSSI"
.BR open (2),
.BR fcntl (2),
.BR shutdown (2),
.BR unlink (2),
.BR fclose (3).
.BR fsync (3).
.SH TRADUCTION
Christophe Blaess, 1996-2003.
