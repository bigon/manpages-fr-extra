.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Wed Jul 21 20:18:11 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 9/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"  màj 10/12/1997 (LDP man-pages 1.18)
.\"  màj 26/04/1998 (LDP man-pages 1.19)
.\"  màj 17/01/2002 (LDP man-pages 1.38)
.\"  màj 18/07/2003 (LDP man-pages 1.56)
.TH CHMOD 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM 
chmod, fchmod \- Modifier les permissions d'accès à un fichier.
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/stat.h>
.sp
.BI "int chmod(const char *" pathname ", mode_t " mode );
.br
.BI "int fchmod(int " fildes ", mode_t " mode );
.SH DESCRIPTION
.B chmod
change le mode d'accès du fichier
.I pathname.
.br
.B fchmod
change le mode d'accès du fichier associé au descripteur
.I fildes.

Le mode est spécifié par un
.IR OU 
binaire ( | ) entre les éléments suivants (les nombres sont en octal) :
.RS
.sp
.TP
S_ISUID
04000
modification du numéro d'utilisateur (UID) à l'exécution.
.TP
S_ISGID
02000
modification du numéro de groupe (GID) à l'exécution.
.TP
S_ISVTX
01000
positionner le sticky bit pour conserver le code
du programme en mémoire après exécution.
.TP
S_IRUSR (S_IREAD)
00400 
accès en lecture pour le propriétaire
.TP
S_IWUSR (S_IWRITE)
00200 
accès en écriture pour le propriétaire
.TP
S_IXUSR (S_IEXEC)
00100 
accès en exécution/parcours par le propriétaire
.TP
S_IRGRP
00040 
accès en lecture pour le groupe
.TP
S_IWGRP
00020 
accès en écriture pour le groupe
.TP
S_IXGRP
00010 
accès en exécution/parcours pour le groupe
.TP
S_IROTH
00004 
accès en lecture pour les autres
.TP
S_IWOTH
00002 
accès en écriture pour les autres
.TP
S_IXOTH
00001 
accès en exécution/parcours pour les autres
.sp
.RE

L'UID effectif du processus doit être nul (root) ou doit correspondre à celui  
du propriétaire du fichier.

Si l'UID effectif du processus n'est pas nul, et si le groupe du fichier
ne correspond ni au GID effectif du processus, ni à l'un de ses éventuels
groupes supplémentaires, le bit S_ISGID sera désactivé, mais cela ne créera
pas d'erreur.

Suivant le type de système de fichiers, les bits Set\-UID et Set\-GID peuvent
être effacés si un fichier est écrit. Sur certains systèmes de fichiers,
seul le Super\-User peut positionner le Sticky\-Bit, lequel peut avoir une
signification spécifique. Pour la signification du Sticky\-Bit et du bit
Set-GID sur les répertoires, voir
.BR stat (2).

Sur les systèmes de fichiers NFS, une restriction des autorisations d'accès
aura un effet immédiat y compris sur les fichiers déjà ouverts, car les
contrôles d'accès sont effectués sur le serveur, mais les fichiers sont
maintenus ouverts sur le client. Par contre, un élargissement des autorisations
peut ne pas être immédiat, si le client dispose d'un cache.
.SH "VALEUR RENVOYÉE"
.BR chmod " et " fchmod
renvoient 0 s'ils réussissent, ou \-1 en cas d'échec, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
Suivant le type de système de fichiers, différentes erreurs peuvent
être renvoyées. Les plus courantes pour
.B chmod
sont :
.TP
.B EPERM
L'UID effectif ne correspond pas au propriétaire du fichier, et n'est pas nul.
.TP
.B EROFS
Le fichier se trouve sur un système de fichiers en lecture seule.
.TP
.B EFAULT
.I pathname
pointe en dehors de l'espace d'adressage accessible.
.TP
.B ENAMETOOLONG
.I pathname
est trop long.
.TP
.B ENOENT
Le fichier n'existe pas.
.TP
.B ENOMEM
Pas assez de mémoire pour le noyau.      
.TP
.B ENOTDIR
Un élément du chemin d'accès n'est pas un répertoire.
.TP
.B EACCES
Le parcours d'un élément du chemin de recherche est interdit.
.TP
.B ELOOP
.I pathname
contient une référence circulaire (à travers un lien symbolique)
.TP
.B EIO
Une erreur d'entrée / sortie bas-niveau s'est produite durant la
modification de l'i-noeud.
.PP
Les erreurs les plus courantes pour
.B fchmod
sont :
.TP
.B EBADF
Le descripteur de fichier
.I fildes
est invalide.
.TP
.B EROFS
Voir plus haut.
.TP
.B EPERM
Voir plus haut.
.TP
.B EIO
Voir plus haut.
.SH "CONFORMITÉ"
L'appel
.B chmod
est conforme a SVr4, SVID, POSIX, X/OPEN, 4.4BSD, 
SVr4 décrit les erreurs EINTR,  ENOLINK  et  EMULTIHOP, mais pas ENOMEM.
POSIX.1  ne documente ni les erreurs EFAULT, ENOMEM, ELOOP et EIO,
ni les macros S_IREAD, S_IWRITE et S_IEXEC.
.PP
L'appel
.B fchmod
est conforme à 4.4BSD et SVr4.
SVr4 décrit les erreurs supplémentaires EINTR et ENOLINK.
POSIX réclame l'existence de la fonction
.B fchmod
si au moins une des
deux constantes
.B _POSIX_MAPPED_FILES
et
.B _POSIX_SHARED_MEMORY_OBJECTS
est définie,
et décrit les conditions d'erreur supplémentaires ENOSYS et EINVAL
mais pas EIO.
.PP
POSIX et X/OPEN ne documentent pas le Sticky Bit.
.SH "VOIR AUSSI"
.BR open (2),
.BR chown (2),
.BR stat (2)
.SH TRADUCTION
Christophe Blaess, 1996-2003.
