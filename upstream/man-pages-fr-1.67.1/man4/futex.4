.\" This manpage has been automatically generated by docbook2man
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/>
.\" Please send any bug reports, improvements, comments, patches,
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.\"
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" Màj 25/07/2003 LDP-1.56
.\" Màj 04/07/2005 LDP-1.61
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH "FUTEX" "4" "31 décembre 2002" LDP "Manuel du programmeur Linux"
.SH NOM
futex \- Verrous rapides dans l'espace utilisateur.
.SH SYNOPSIS

.nf
#include <linux/futex.h>
.fi
.SH "DESCRIPTION"
.PP
Le noyau Linux propose des Futex (Fast Userpace muTex) en guise de blocs
de base pour des verrous et sémaphores dans l'espace utilisateur. Ils sont très
simples et servent à implémenter des abstrations de plus haut niveau comme les mutex Posix.
.PP
Cette page ne documente pas toutes les décisions de conception mais se contente des informations
nécessaires pour le développeur d'application ou de bibliothèque. La plupart des programmeurs n'utiliseront jamais
les futex directement mais s'appuieront sur des bibliothèques les utilisant, comme l'implémentation NPTL des threads.
.PP
Un futex est identifié par une portion de mémoire qui peut être partagée entre processus. Dans chacun d'eux,
il peut avoir une adresse différente. Dans sa forme brute, un futex se comporte comme un sémaphore\ ;
il a un compteur que l'on incrémente et décrémente atomiquement, et les
processus peuvent attendre que sa valeur soit positive.
.PP
Les opérations sur les Futex se font entièrement dans l'espace utilisateur lorsqu'il n'y a pas de conflits.
Le noyau n'est impliqué que pour arbitrer les conflits. Comme toute conception sensée essayera d'éviter les conflits,
les futex sont optimisés pour cette situation.
.PP
Dans sa forme la plus simple, un futex est un entier aligné, manipulé uniquement par des
opérations assembleur atomiques. Les processus peuvent les partager par des projection mmap ou des segments de mémoire
partagée, ce qui correspond au cas des applications multi-threads.
.SH "SÉMANTIQUE"
.PP
Toute opération sur les futex débute dans l'espace utilisateur, mais il peut
être nécessaire d'invoquer
le noyau avec l'appel-système \fBfutex\fR(2).
.PP
Pour augmenter un futex, exécutez l'opération assembleur qui permet au CPU
hôte d'incrémenter atomiquement
un entier. Après, vérifiez s'il est passé de zéro à un, auquel cas il n'y
avait pas d'attente et l'opération est terminée. C'est le cas sans conflit,
rapide et courant.
.PP
S'il y avait un blocage, l'incrémentation atomique part d'un compteur à \-1
(ou une autre valeur négative). Si c'est le cas, il y a des processus en attente.
Il faut à présent mettre le compteur à 1 et demander au noyau de réveiller
tous les processus en attente, à l'aide de l'opération FUTEX_WAKE.
.PP
Attendre sur un futex pour le décrémenter est l'opération inverse. Décrémentez le compteur et
vérifiez s'il est descendu à zéro, auquel cas l'opération est terminée car le
futex était libre.
Dans tous les autres cas, le processus doit mettre le compteur à \-1 et demander au noyau d'attendre
qu'un autre processus libère le futex. Ceci est réalisé avec l'opération FUTEX_WAIT.
.PP
L'appel-système futex peut aussi recevoir un délai maximal d'attente pour que le futex
soit incrémenté. Dans ce cas, la sémantique est plus complexe et le programmeur doit se reporter à
\fBfutex\fR(2) pour plus de détail. Idem pour les attentes asynchrones.
.SH "NOTES"
.PP
Répetons-le, les futex bruts ne sont pas conçus pour être utilisés facilement. Les implémenteurs
sont supposés connaître l'assembleur et avoir lu les sources de la bibliothèque
futex en espace utilisateur décrite plus bas.
.PP
Cette page illustre l'utilisation la plus courante des primitives \fBfutex\fR(2)\ : ce n'est pas la seule.
.SH "AUTEURS"
.PP
Les futex ont été conçus et écrits par Hubertus Franke (IBM Thomas J. Watson Research Center),
Matthew Kirkwood, Ingo Molnar (Red Hat) et Rusty Russell (IBM Linux Technology Center). Cette page a été écrite
par Bert Hubert.
.SH "VERSIONS"
.PP
Le support initial des futex a été introduit dans Linux 2.5.7 avec une sémantique différente de celle décrite ci-dessus.
La sémantique actuelle est disponible depuis Linux 2.5.40.
.SH "VOIR AUSSI"
.PP
\fBfutex\fR(2),
«\ Fuss, Futexes and Furwocks: Fast Userlevel Locking in Linux\ » (proceedings of the Ottawa Linux
Symposium 2002),
futex example library, futex-*.tar.bz2 <URL:ftp://ftp.kernel.org:/pub/linux/kernel/people/rusty/>.
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 25\ juillet\ 2003
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 4\ futex\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
