.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fseek.3	6.11 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\"
.\" Traduction 23/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 19/07/1997
.\" Màj 06/06/2001 LDP-1.36
.\" Màj 25/01/2002 LDP-1.47
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH FSEEK 3 "29 novembre 1993" LDP "Manuel du programmeur Linux"
.SH NOM
fgetpos, fseek, fsetpos, ftell, rewind \- Accéder à la position courante d'un flux.
.SH SYNOPSIS
.B #include <stdio.h>
.sp
.BI "int fseek (FILE *" stream ", long " offset ", int " whence );
.br
.BI "long ftell (FILE *" stream );
.br
.BI "void rewind (FILE *" stream );
.br
.BI "int fgetpos (FILE *" stream ", fpos_t *" pos );
.br
.BI "int fsetpos (FILE *" stream ", fpos_t *" pos );
.SH DESCRIPTION
La fonction
.BR fseek ()
fixe l'indicateur de position du flux pointé par
.IR stream .
La nouvelle position, mesurée en octets, est obtenue en additionnant
.I offset
octets au point de départ indiqué par
.IR whence .
Si
.I whence
vaut
.BR SEEK_SET ,
.BR SEEK_CUR ,
ou
.BR SEEK_END ,
le point de départ correspond respectivement au début du fichier, à la
position actuelle, ou à la fin du fichier.
Un appel réussi à
.BR fseek ()
efface l'indicateur de fin de fichier pour le flux, et annule les
effets de toute fonction
.BR ungetc (3)
précédente sur le même flux.
.PP
La fonction
.BR ftell ()
lit la valeur de l'indicateur de position pour le flux pointé par
.IR stream .
.PP
La fonction
.BR rewind ()
ramène l'indicateur de position du flux pointé par
.I stream
au début du fichier. C'est l'équivalent de\ :
.PP
.RS
(void)fseek(stream, 0L, SEEK_SET)
.RE
.PP
sauf que l'indicateur d'erreur du flux est également effacé. (voir
.BR clearerr (3)).
.PP
Les fonctions
.BR fgetpos ()
et
.BR fsetpos ()
sont des alternatives à
.BR ftell ()
et
.BR fseek ()
(avec \fIwhence\fP valant
.BR SEEK_SET ),
en fixant, ou en mémorisant la valeur de l'indicateur de position du fichier
dans l'objet référencé par
.IR pos .
Sur certains systèmes non-UNIX, l'objet
.B fpos_t
peut être un objet complexe, et ces routines peuvent être les seules méthodes
possibles pour repositionner un flux de texte de manière portable.
.SH "VALEUR RENVOYÉE"
La fonction
.BR rewind ()
ne renvoie pas de valeur.
Si elles réussissent totalement,
.BR fgetpos (),
.BR fseek (),
.BR fsetpos ()
renvoient 0,
et
.BR ftell ()
renvoie la position actuelle. Sinon, elles renvoient \-1 et la variable globale
errno contient le code d'erreur.
.SH ERREURS
.TP
.B EBADF
Le flux
.I stream
n'est pas positionnable.
.TP
.B EINVAL
L'argument
.I whence
dans l'appel
.BR fseek ()
n'était ni
.BR SEEK_SET ,
ni
.BR SEEK_END ,
ni
.BR SEEK_CUR .
.PP
Les fonctions
.BR fgetpos (),
.BR fseek (),
.BR fsetpos (),
et
.BR ftell ()
peuvent également, en cas d'échec, positionner
.I errno
sur n'importe quelle erreur indiquée par les routines
.BR fflush (3),
.BR fstat (2),
.BR lseek (2),
et
.BR malloc (3).
.SH CONFORMITÉ
Les fonctions
.BR fgetpos (),
.BR fsetpos (),
.BR fseek (),
.BR ftell (),
et
.BR rewind ()
sont conformes a ANSI X3.159-1989 (ANSI C).
.SH "VOIR AUSSI"
.BR lseek (2),
.BR fseeko (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 23\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ fseek\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
