.\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" $Id: rtnetlink.3,v 1.2 1999/05/18 10:35:10 freitag Exp $
.\"
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH RTNETLINK 3 "18 mai 1999" LDP "Manuel du programmeur Linux"
.SH NOM
rtnetlink \- Macros manipulant des messages rtnetlink.
.SH SYNOPSIS
.B #include <asm/types.h>
.br
.B #include <linux/netlink.h>
.br
.B #include <linux/rtnetlink.h>
.br
.B #include <sys/socket.h>

.BI "rtnetlink_socket = socket(PF_NETLINK, int " socket_type ", NETLINK_ROUTE);"
.br
.B int RTA_OK(struct rtattr *rta, int rtabuflen);
.br
.B void *RTA_DATA(struct rtattr *rta);
.br
.B unsigned int RTA_PAYLOAD(struct rtattr *rta);
.br
.B struct rtattr *RTA_NEXT(struct rtattr *rta, unsigned int rtabuflen);
.br
.B unsigned int RTA_LENGTH(unsigned int length);
.br
.B unsigned int RTA_SPACE(unsigned int length);
.br
.SH DESCRIPTION
Tous les messages
.BR rtnetlink (7)
consistent en un en-tête de message
.BR netlink (7)
et des attributs. Ceux-ci ne devraient être manipulés que par les macros
fournies ici.

.PP
.BI RTA_OK( rta ", " attrlen )
renvoie vrai si
.I rta
pointe sur un attribut de routage valide\ ;
.I attrlen
est la longueur courante du tampon d'attributs. Si elle renvoie 0, vous
devez supposer qu'il n'y a pas d'autre attributs dans le message, même si
.I attrlen
n'est pas nulle.
.br
.BI RTA_DATA( rta )
renvoie un pointeur sur le début des données de cet attribut.
.br
.BI RTA_PAYLOAD( rta )
renvoie la longueur des données de cet attribut.
.br
.BI RTA_NEXT( rta ", " attrlen )
renvoie le premier attribut après
.IR rta .
Un appel à cette macro met à jour
.IR attrlen .
Vous devriez utiliser
.B RTA_OK
pour vérifier la validité du pointeur retourné.
.br
.BI RTA_LENGTH( len )
renvoie la longueur requise pour
.I len
octets de données plus l'en-tête.
.br
.BI RTA_SPACE( len )
renvoie la quantite de mémoire nécessaire pour un message composé de
.I len
octets de données.

.SH EXEMPLE
.\" XXX would be better to use libnetlink here

Créer un message rtnetlink pour choisir le MTU d'un périphérique.
.nf
	struct {
	       struct nlmsghdr nh;
	       struct ifinfomsg   if;
	       char	       attrbuf[512];
	} req;
	struct rtattr *rta;
	unsigned int mtu = 1000;
	int rtnetlink_sk = socket(PF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE);

	memset(&req, 0, sizeof(req));
	req.nh.nlmsg_len = NLMSG_LENGTH(sizeof(struct ifinfomsg));
	req.nh.nlmsg_flags = NLM_F_REQUEST;
	req.nh.nlmsg_type = RTML_NEWLINK;
	req.if.ifi_family = AF_UNSPEC;
	req.if.ifi_index = INTERFACE_INDEX;
	req.if.ifi_change = 0xffffffff; /* ???*/
	rta = (struct rtattr *)(((char *) &req) +
			NLMSG_ALIGN(n->nlmsg_len));
	rta->rta_type = IFLA_MTU;
	rta->rta_len = sizeof(unsigned int);
	req.n.nlmsg_longueurr = NLMSG_ALIGN(req.n.nlmsg_len) +
			RTA_LENGTH(sizeof(mtu));
	memcpy(RTA_DATA(rta), &mtu, sizeof (mtu));
	send(rtnetlink_sk, &req, req.n.nlmsg_len);
.fi
.SH BOGUES
Cette page de manuel est incomplète.
.SH VOIR AUSSI
.BR rtnetlink (7),
.BR netlink (7),
.BR netlink (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Thierry Vignaud
<tvignaud AT mandriva DOT com> en 2000
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ rtnetlink\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
