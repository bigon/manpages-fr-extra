.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Traduction 29/08/2000 par Christophe Blaess (ccb@club-internet.fr)
.\" LDP 1.30
.\" Màj 06/06/2001 LDP-1.36
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH MBSINIT 3 "20 novembre 2000" LDP "Manuel du programmeur Linux"
.SH NOM
mbsinit \- Vérifier si la conversion est dans l'état initial.
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "int mbsinit (const mbstate_t *" ps );
.fi
.SH DESCRIPTION
La conversion de caractères entre la représentation multi-octets et les caractères larges emploie
un état de type \fBmbstate_t\fP. La conversion d'une chaîne utilise un automate à états finis.
Lorsqu'elle est interrompue après la conversion d'un nombre entier de caractères, il peut être nécessaire
de mémoriser son état pour pouvoir traiter ultérieurement le reste de la chaîne. Un tel état de conversion
est indispensable pour certains encodages tels que ISO\-2022 et UTF\-7.
.PP
L'état initial est celui du début de la conversion de chaîne. Il y a deux types d'états, celui utilisé par les conversions
multi-octets en caractères larges, comme \fBmbsrtowcs\fP(), et celui employé par les conversions inverses, comme \fBwcsrtombs\fP().
Toutefois, les deux types peuvent être stockés dans une variable \fBmbstate_t\fP, et ils se présentent tous deux sous
la même forme initiale.
.PP
Pour les codages 8\ bits ou UTF\-8, tous les états sont équivalent à l'état initial.
Pour les encodages multioctets comme UTF\-8, EUC\-* BIG5 ou SJIS, la conversion
de caractère large en multioctet ne produit jamais d'état non-initial, mais
la conversion multioctet en caractère large comme \fBmbrtowc\fP peut produire
un état non initial si elle est interrompue au milieu d'un caractère.
.PP
Une possibilité pour créer un état mbstate_t initial est de le fixer à zéro\ :
.nf
  mbstate_t state;
  memset(&state,0,sizeof(mbstate_t));
.fi

Sous Linux, on peut aussi utiliser la ligne suivante, même si elle déclenche des avertissements du compilateur\ :
.nf
  mbstate_t state = { 0 };
.fi
.PP
La fonction \fBmbsinit\fP() vérifie si \fI*ps\fP correspond à un état initial.
.SH "VALEUR RENVOYÉE"
La fonction \fBmbsinit\fP() renvoie une valeur non-nulle si \fI*ps\fP est dans l'état initial, ou si \fIps\fP est un pointeur NULL.
Sinon, elle renvoie zéro.
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR mbsrtowcs (3),
.BR wcsrtombs (3)
.SH NOTES
Le comportement de \fBmbsinit\fP() dépend de la catégorie LC_CTYPE de la localisation.
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 29\ août\ 2000
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ mbsinit\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
