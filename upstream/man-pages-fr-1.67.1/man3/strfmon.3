.\" Copyright (c) 2000 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" 07/06/2001 LDP-1.37
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH STRFMON 3 "5 décembre 2000" LDP "Manuel du programmeur Linux"
.SH NOM
strfmon \- Convertir des valeurs monétaires en chaînes de caractères.
.SH SYNOPSIS
.nf
.B #include <monetary.h>
.sp
.BI "ssize_t strfmon(char *" s ", size_t " max ", const char *" format ,
.B "...);"
.fi
.SH DESCRIPTION
La fonction \fBstrfmon\fP() met en forme les valeurs transmises, en
fonction des spécifications de la chaîne de \fIformat\fP et place le résultat
dans la chaîne de caractère \fIs\fP de taille \fImax\fP.
.PP
Les caractères ordinaires de \fIformat\fP sont copié dans \fIs\fP sans
conversion. Les indicateurs de conversion sont introduits par un caractère «\ %\ ».
Immédiatement à sa suite, il peut y avoir zéro ou plusieurs drapeaux parmi
les suivants\ :
.TP
.BI = f
Le caractère unique
.I f
sert comme caractère numérique de remplissage (à utiliser avec une précision
à gauche, voir plus bas).
Sans indication, il s'agit du caractère espace.
.TP
.B ^
Ne pas utiliser les caractères de regroupement (par milliers par exemple) qui
peuvent être définis pour la localisation en cours. Par défaut, le groupement est actif.
.TP
.BR ( " or " +
L'attribut «\ (\ » indique que les valeurs négatives doivent être encadrées entre parenthèses.
L'attribut «\ +\ » indique que le signe doit être traité de la manière par défaut, c'est-à-dire
les valeurs précédées de l'indication locale de signe. Par exemple, rien pour les valeurs
positives et «\ -\ » pour les négatives.
.TP
.BR !
Omettre le signe monétaire.
.TP
.BR \-
Justifier tous les champs à gauche. Par défaut, la justification est à droite.
.LP
Ensuite, peut venir un champ de largeur\ : un chiffre décimal indiquant la largeur
minimale en octets. Par défaut, elle vaut 0. Un résultat plus petit que cette largeur
est complété avec des espaces (à gauche à moins que la justification soit à gauche).
.LP
Ensuite, il peut y avoir une précision à gauche de la forme «\ #\ » suivi par une chaîne
de chiffres décimaux. Si le nombre de chiffres à gauche de la virgule est inférieur à
cette valeur, la représentation est complétée à gauche avec le caractère de remplissage.
Les caractères de groupement ne sont pas comptés dans la largeur du champ.
.LP
Ensuite, il peut y avoir une précision à droite de la forme «\ .\ » suivi par une chaîne
de chiffres décimaux. La valeur est arrondie à ce nombre de décimales
avant d'être mise en forme.
La valeur par défaut est précisée dans les champs
.I frac_digits
et
.I int_frac_digits
de la localisation en cours.
Si la précision à droite est 0, aucun symbole décimal n'est affiché.
(Le symbole décimal est déterminé par LC_MONETARY, et peut différer
de celui indiqué dans LC_NUMERIC.)
.LP
Finalement, la spécification de conversion doit se terminer par un caractère de
conversion. Les trois caractères disponibles sont\ :
.TP
.B %
(Dans ce cas, la spécification entière doit être exactement «\ %%\ »).
Placer un caractère «\ %\ » dans la chaîne de résultat.
.TP
.B i
Un argument de type double est converti en utilisant les formats internationaux
des monnaies dans la localisation en cours.
.TP
.B n
Un argument de type double est converti en utilisant les formats nationaux
des monnaies dans la localisation en cours.
.SH "VALEUR RENVOYÉE"
La fonction \fBstrfmon\fP() renvoie le nombre de caractères placés dans la
chaîne \fIs\fP, sans compter le caractère NUL final, à condition
que tout tienne dans le tampon fourni.
Sinon, il rempli
.I errno
avec la valeur E2BIG et renvoie \-1. Le contenu de la chaîne est indéfini dans ce cas.
.SH EXEMPLE
L'appel
.RS
.nf
strfmon(buf, sizeof(buf), "[%^=*#6n] [%=*#6i]",
        1234.567, 1234.567);
.fi
.RE
affiche
.RS
[ fl **1234,57] [ NLG  **1 234,57]
.RE
Dans la localisation hollandaise (fl étant «\ florijnen\ » et NLG «\ Netherlands Guilders\ »).
Le caractère de groupement est horrible car il prend autant de place qu'un chiffre, alors
qu'il ne devrait occuper qu'un demi-espace,
ce qui peut induire en erreur.
Étonnamment, le «\ fl\ » est précédé et suivi par un espace,
et «\ NLG\ » est précédé par un espace et suivi par deux.
Il s'agit peut-être d'un bogue dans le fichier de localisation. Les localisations
italienne, australienne, suisse, et
portugaise donnent
.RS
[ L. **1235] [ ITL  **1.235]
.br
[ $**1234.57] [ AUD **1,234.57]
.br
[Fr. **1234,57] [CHF  **1.234,57]
.br
[ **1234$57Esc] [ **1.234$57PTE ]
.RE
.SH "VOIR AUSSI"
.BR setlocale (3),
.BR sprintf (3),
.BR locale (7)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 7\ juin\ 2001
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ strfmon\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
