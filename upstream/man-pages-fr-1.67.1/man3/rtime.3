.\" Copyright 2003 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\" Modified 2003-04-04 Walter Harms
.\" <walter.harms@informatik.uni-oldenburg.de>
.\"
.\" Slightly polished, aeb, 2003-04-06
.\"
.\" Traduction Christophe Blaess
.\" Màj 21/07/2003 LDP-1.57
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH RTIME 3 "4 avril 2003" LDP "Manuel du programmeur Linux"
.SH NOM
rtime \- Lire l'heure sur un serveur distant.
.SH SYNOPSIS
.sp
.B "#include <rpc/des_crypt.h>"
.sp
.BI "int rtime(struct sockaddr_in *" addrp ,
.BI "struct rpc_timeval *" timep ,
.BI "struct rpc_timeval *" timeout );
.sp
.SH DESCRIPTION
Cette fonction utilise le protocole Time Serveur décrit dans la
RFC 868 pour lire l'heure sur une machine distante.
.LP
Le protocole Time Serveur donne l'heure en secondes écoulées depuis le 1er janvier
1900 à minuit, et cette fonction soustrait la constante nécessaire pour convertir
le résultat en secondes écoulées depuis l'Ère Unix (01/01/1970 à minuit).
.LP
Si
.I timeout
est non-NULL, le port UDP/time (37) est utilisé, sinon
le port TCP/time (37) est utilisé.
.SH "VALEUR RENVOYÉE"
Si elle réussit, cette fonction renvoie zéro et la valeur 32\ bits obtenue est
stockée dans
.IR timep->tv_sec .
En cas d'échec, elle renvoie \-1 et
.I errno
contient le code d'erreur.
.SH ERREURS
Toutes les erreurs pour les fonctions sous-jacentes(sendto, poll, recvfrom,
connect, read) peuvent se produite, avec en outre\ :
.TP
.B ETIMEDOUT
Le délai indiqué en second argument a expiré.
.TP
.B EIO
Le nombre d'octets reçus n'est pas 4.
.SH "EXEMPLE"
Cet exemple demande que le port 37 soit ouvert et actif. Vérifiez que
l'entrée time dans
.I /etc/inetd.conf
ne soit pas commentée.
.br
Le programme se connecte sur un hôte nommé «\ linux\ ».
Utiliser «\ localhost\ » ne fonctionne pas.
Le résultat est l'heure locale de l'ordinateur «\ linux\ ».
.sp
.nf
#include <stdio.h>
#include <errno.h>
#include <string.h>
#include <time.h>
#include <rpc/auth_des.h>
#include <netdb.h>

int use_tcp = 0;
char *servername = "linux";

int main() {
  struct sockaddr_in name;
  struct rpc_timeval time1 = {0,0};
  struct rpc_timeval timeout = {1,0};
  struct hostent *hent;
  int ret;

  memset((char *)&name, 0, sizeof(name));
  sethostent(1);
  hent = gethostbyname(servername);
  memcpy((char *)&name.sin_addr, hent->h_addr, hent->h_length);

  ret = rtime(&name, &time1, use_tcp ? NULL : &timeout);
  if (ret < 0)
    perror("rtime error");
  else
    printf("%s", ctime((time_t *)&time1.tv_sec));

  return 0;
}
.fi
.SH "NOTES"
Seul IPV4 est supporté.
.LP
Certaines versions de
.I in.timed
supportent uniquement TCP. Essayez l'exemple précédent avec
.I use_tcp
fixé à 1.
.LP
La libc5 utilise le prototype
.br
int rtime(struct sockaddr_in *, struct timeval *, struct timeval *);
.br
et requiert
.I <sys/time.h>
à la place de
.IR <rpc/auth_des.h> .

.SH "BOGUES"
rtime() dans les glibc <= 2.2.5 ne fonctionne pas correctement
sur les machines 64\ bits.
.SH "VOIR AUSSI"
.BR netdate (1),
.BR ntpdate (1),
.BR rdate (1),
.BR inetd (8)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 21\ juillet\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ rtime\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
