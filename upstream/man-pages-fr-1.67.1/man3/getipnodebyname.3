.\" Copyright 2000 Sam Varshavchik <mrsam@stop.mail-abuse.org>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References: RFC 2553
.\" Traduction 31/08/2000 par Christophe Blaess (ccb@club-internet.fr)
.\" LDP 1.31
.\" Màj 06/06/2001 LDP-1.36
.\" Màj 25/01/2002 LDP-1.47
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 20/07/2005 LDP-1.64
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH GETIPNODEBYNAME 3 "3 avril 2002" LDP "Manuel du programmeur Linux"
.SH NOM
getipnodebyname, getipnodebyaddr, freehostent \- Obtenir les adresses réseau et noms d'hôte.
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/socket.h>
.B #include <netdb.h>
.sp
.BI "struct hostent * getipnodebyname (const char * " name ,
.BI "                         int " af ", int " flags ,
.BI "                         int * " error_num );
.sp
.BI "struct hostent * igetipnodebyaddr (const void * " addr ,
.BI "                         size_t " len ", int " af ,
.BI "                         int " flags ", int * " error_num );
.sp
.BI "void freehostent (struct hostent * " ip );
.fi
.SH DESCRIPTION
Ces fonctions sont déconseillées. Utilisez
.BR getaddrinfo (3)
et
.BR getnameinfo (2)
à leur place.
.LP
Les fonctions
.BR getipnodebyname (3)
et
.BR getipnodebyaddr (3)
renvoient le nom et l'adresse réseau d'un hôte.
Ces fonctions renvoient un pointeur
sur une structure définie comme suit\ :
.sp
.nf
.B struct  hostent {
.BI "        char    *" "h_name" ";"
.BI "        char    **" "h_aliases" ";"
.BI "        int     " "h_addrtype" ";"
.BI "        int     " "h_length" ";"
.BI "        char    **" "h_addr_list" ";"
.BI };
.fi
.PP
Ces fonctions remplacent les fonctions
.BR gethostbyname (3)
et
.BR gethostbyaddr (3)
qui ne pouvaient qu'accéder aux adresses réseau de la famille IPv4.
Les fonctions
.BR getipnodebyname (3)
et
.BR getipnodebyaddr (3)
peuvent fonctionner avec diverses familles d'adresses réseau.
.PP
Contrairement aux fonctions du type
.BR gethostby ,
Ces routines
renvoient des pointeurs
sur des zones de mémoires allouées dynamiquement.
La fonction
.BR freehostent (3)
sert à libérer la zone de mémoire allouée dynamiquement
une fois que l'on n'a plus besoin des
informations se trouvant dans la structure
.BR hostent .
.SS "Arguments de getipnodebyname"
La fonction
.BR getipnodebyname (3)
recherche l'adresse
réseau de l'hôte indiqué
dans son
argument
.IR name .
L'argument
.I af
prend l'une des valeurs suivantes\ :
.TP
.B AF_INET
Le paramètre
.I name
représente une adresse décimale pointée IPv4, ou le nom
d'un hôte sur un réseau IPv4.
.TP
.B AF_INET6
Le paramètre
.I name
représente une adresse hexadécimale IPv6, ou le nom
d'un hôte sur un réseau IPv6.
.PP
L'argument
.I flags
indique des options supplémentaires.
Plusieurs options peuvent être indiquées en
les regroupant par un OU binaire.
.I flags
doit être mis à 0
si aucune option n'est désirée.
.TP
.B AI_V4MAPPED
Cet attribut est utilisé avec
.B AF_INET6
pour demander de rechercher une adresse IPv4 plutôt
qu'une IPv6. L'adresse IPv4 devra toutefois
être projetée dans l'espace IPv6.
.TP
.B AI_DEFAULT
Cet attribut est utilisé avec
.B AI_V4MAPPED
pour demander une recherche simultanée d'adresses IPv4 et IPv6.
Toute adresse IPv4 trouvée sera projetée dans l'espace IPv6.
.TP
.B AI_ADDRCONFIG
Cet attribut est utilisé avec
.B AF_INET6
pour indiquer que les requêtes ultérieures d'adresses IPv6
n'auront pas lieu à moins que le système n'ait au moins une
adresse IPv6 affectée à une interface réseau. Symétriquement,
les requêtes d'adresses IPv4 n'auront lieu que si
le système dispose au mons d'une adresse IPv4 affectée à une interface réseau.
Cet attribut peut être utilisé seul ou
avec
.BR AI_V4MAPPED .
.TP
.B AI_ALL
Cet attribut est équivalent à
.BR "(AI_ADDRCONFIG | AI_V4MAPPED)" .
.SS "Arguments de getipnodebyaddr"
La fonction
.BR getipnodebyaddr (3)
recherche le nom d'un hôte dont
l'adresse réseau
est indiquée
par
l'argument
.IR addr .
L'argument
.I af
prend l'une des valeurs suivantes\ :
.TP
.B AF_INET
L'argument
.I addr
pointe vers une structure
.B "struct in_addr"
et
.I len
doit valoir
.BR "sizeof(struct in_addr)" .
.TP
.B AF_INET6
L'argument
.I addr
pointe vers une structure
.B "struct in6_addr"
et
.I len
doit valoir
.BR "sizeof(struct in6_addr)" .
.SH "VALEUR RENVOYÉE"
En cas d'erreur, un pointeur NULL est renvoyé, et
.I error_num
contiendra un code d'erreur parmi les suivants\ :
.TP
.B HOST_NOT_FOUND
Le nom d'hôte ou l'adresse réseau n'ont pas été trouvés.
.TP
.B NO_ADDRESS
Le serveur de noms reconnait l'adresse réseau ou le nom,
mais n'a pas fourni de réponse.
Ceci peut se produire si l'hôte n'a que des adresse IPv4, et
qu'on a demandé uniquement des informations IPv6, ou l'inverse.
.TP
.B NO_RECOVERY
Le serveur de noms a renvoyé une erreur définitive.
.TP
.B TRY_AGAIN
Le serveur de noms a renvoyé une erreur temporaire.
Réessayez plus tard.
.PP
Une recherche couronnée de succès renvoie un pointeur sur une structure
.B hostent
contenant les champs suivants\ :
.TP
.B h_name
Nom officiel de l'hôte.
.TP
.B h_aliases
Table de pointeurs vers des alias non-officiels du même hôte.
La table est terminée par un pointeur NULL.
.TP
.B h_addrtype
Il s'agit d'une copie de l'argument
.I af
de
.BR getipnodebyname (3)
ou
.BR getipnodebyaddr (3).
.I h_addrtype
sera toujours
.B AF_INET
si l'argument
.I af
était
.BR AF_INET .
.I h_addrtype
sera toujours
.B AF_INET6
si l'argument
.I af
était
.BR AF_INET6 .
.TP
.B h_length
Ce champ contiendra la longueur
.B sizeof(struct in_addr)
si
.I h_addrtype
est AF_INET, et
.B sizeof(struct in6_addr)
si
.I h_addrtype
vaut AF_INET6.
.TP
.B h_addr_list
Il s'agit d'une table de pointeurs vers les structures d'adresse
de l'hôte.
La table est terminée par un pointeur NULL.
.SH NOTES
Ces fonctions étaient présentes dans la glibc 2.1.91-95, mais en ont été
retirées. Plusieurs systèmes de type Unix les supportent, mais tous les
considèrent comme déconseillées.
.SH CONFORMITÉ
RFC 2553
.SH "VOIR AUSSI"
.BR getaddrinfo (3),
.BR getnameinfo (3),
.BR inet_ntop (3),
.BR inet_pton (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 31\ août\ 2000
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ getipnodebyname\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
