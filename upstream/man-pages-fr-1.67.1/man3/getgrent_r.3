.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Traduction : Alain Portal
.\" 08/07/2005 LDP-1.63
.\" Màj 14/12/2005 LDP-1.65
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH GETGRENT 3 "15 novembre 2003" LDP "Manuel du programmeur Linux"
.SH NOM
getgrent_r, fgetgrent_r \- Obtenir un enregistrement du fichier group de manière réentrante.
.SH SYNOPSIS
.nf
.B "#define _GNU_SOURCE"
.br
.B #include <grp.h>
.sp
.BI "int getgrent_r(struct group *" gbuf ", char *" buf ,
.br
.BI "               size_t " buflen ", struct group **" gbufp );
.sp
.BI "int fgetgrent_r(FILE *" fp ", struct group *" gbuf ", char *" buf ,
.br
.BI "                size_t " buflen ", struct group **" gbufp );
.SH DESCRIPTION
Les fonctions
.BR getgrent_r ()
et
.BR fgetgrent_r ()
sont les versions réentrantes des fonctions
.BR getgrent (3)
et
.BR fgetgrent (3).
La première lit l'enregistrement group suivant à partir du flux initialisé par
.BR setgrent (3).
La seconde lit l'enregistrement group suivant à partir du flux
.I fp
passé en paramètre.
.PP
La structure \fIgroup\fP est définie dans
.I <grp.h>
de la manière suivante\ :
.sp
.RS
.nf
struct group {
      char    *gr_name;      /* nom du groupe          */
      char    *gr_passwd;    /* mot de passe du groupe */
      gid_t   gr_gid;        /* ID du groupe           */
      char    **gr_mem;      /* membres du groupe      */
};
.ta
.fi
.RE
.sp
Les fonctions non réentrantes renvoient un pointeur sur une zone statique,
zone qui contient d'autres pointeurs vers le nom, le mot de passe et les
membres du groupe.
Les fonctions réentrantes décrites ici renvoient tout ceci dans des tampons
fournis par l'appelant. Il y a tout d'abord le tampon
.I gbuf
qui contient une structure group. Puis le tampon
.I buf
de taille
.I buflen
qui contient les chaînes supplémentaires.
Le résultat de ces fonctions, la structure group lue dans le flux,
est enregistré dans le tampon
.RI * gbuf
fourni, et un pointeur vers cette structure group est renvoyé dans
.RI * gbufp .
.SH "VALEUR RENVOYÉE"
Si elles réussissent, ces fonctions renvoient 0 et
.RI * gbufp
est un pointeur vers la structure group.
Si elles échouent, ces fonctions renvoient une valeur d'erreur et
.RI * gbufp
est NULL.
.SH ERREURS
.TP
.B ENOENT
Plus d'entrées.
.TP
.B ERANGE
L'espace tampon fourni est insuffisant. Veuillez essayer à nouveau avec
un tampon plus grand.
.SH EXEMPLE
.nf
#define _GNU_SOURCE
#include <grp.h>
#include <stdio.h>
#define BUFLEN 4096

int main() {
      struct group grp, *grpp;
      char buf[BUFLEN];
      int i;

      setgrent();
      while (1) {
            i = getgrent_r(&grp, buf, BUFLEN, &grpp);
            if (i)
                  break;
            printf("%s (%d):", grpp->gr_name, grpp->gr_gid);
            for (i = 0; ; i++) {
                  if (grpp->gr_mem[i] == NULL)
                        break;
                  printf(" %s", grpp->gr_mem[i]);
            }
            printf("\en");
      }
      endgrent();
      return 0;
}
.fi
.\" perhaps add error checking - should use strerror_r
.\" #include <errno.h>
.\" #include <stdlib.h>
.\"         if (i) {
.\"               if (i == ENOENT)
.\"                     break;
.\"               printf("getgrent_r: %s", strerror(i));
.\"               exit(1);
.\"         }
.SH "CONFORMITÉ"
Ces fonctions sont des extensions GNU, effectuées dans un style ressemblant
à la version POSIX de fonctions comme
.BR getpwnam_r (3).
D'autres systèmes utilisent le prototype
.sp
.nf
.in +4
struct group *
getgrent_r(struct group *grp, char *buf, int buflen);
.in
.fi
.sp
ou mieux,
.sp
.nf
.in +4
int
getgrent_r(struct group *grp, char *buf, int buflen,
           FILE **gr_fp);
.in
.fi
.sp
.SH NOTES
La fonction
.BR getgrent_r ()
n'est pas vraiment réentrante puisqu'elle partage la position de lecture
dans le flux avec tous les autres fils (threads).
.SH "VOIR AUSSI"
.BR fgetgrent (3),
.BR getgrent (3),
.BR getgrnam (3),
.BR getgrgid (3),
.BR group (5)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Alain Portal
<aportal AT univ-montp2 DOT fr> le 8 juillet 2005
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ getgrent_r\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
