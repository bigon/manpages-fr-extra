.\" Written by Michael Haardt, Fri Nov 25 14:51:42 MET 1994
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" Modifications, Sun Feb 26 14:39:45 1995, faith@cs.unc.edu
.\" Added siglongjmp, Sun Mar  2 22:03:05 EST 1997, jrv@vanzandt.mv.com
.\"
.\" Traduction 04/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 10/07/1997.
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH LONGJMP 3 "2 mars 1997" LDP "Manuel du programmeur Linux"
.SH NOM
longjmp, siglongjmp \- Saut non-local vers un contexte de pile sauvegardé.
.SH SYNOPSIS
#include <setjmp.h>
.sp
.nf
.BI "void longjmp (jmp_buf " env ", int " val );
.BI "void siglongjmp (sigjmp_buf " env ", int " val );
.fi
.SH DESCRIPTION
\fBlongjmp\fP() et \fBsetjmp\fP() sont utiles pour la gestion d'erreurs et
d'interruptions rencontrées dans une routine bas-niveau d'un programme.
\fBlongjmp\fP() restitue l'environnement sauvegardé lors du dernier appel
de \fBsetjmp\fP() avec l'argument \fIenv\fP correspondant. Après l'appel de
\fBlongjmp\fP(), l'exécution du programme continue comme si l'appel correspondant
de \fBsetjmp\fP() venait juste de renvoyer \fIval\fP.
\fBlongjmp\fP() ne peut pas renvoyer 0. Si \fBlongjmp\fP est appelé avec
0 en tant que second argument, \fBsetjmp\fP() renverra 1 à la place.
.P
\fBsiglongjmp\fP() est identique à \fBlongjmp\fP() hormis le type de
son argument \fIenv\fP. Si l'argument \fIsavesigs\fP est non nul
lors de l'appel de \fBsigsetjmp\fP(), alors \fBsiglongjmp\fP()
restituera également l'ensemble des signaux bloqués.
.SH "VALEUR RENVOYÉE"
Ces fonctions ne reviennent jamais.
.SH "CONFORMITÉ"
POSIX
.SH NOTES
POSIX ne précise pas si \fBlongjmp\fP() restore le contexte de
signal. Si vous voulez sauver et restorer le masque de signaux, utilisez
\fBsiglongjmp\fP().
.P
\fBlongjmp\fP() et \fBsiglongjmp\fP() rendent les programmes difficiles
à comprendre et à maintenir. Il est préférable si possible d'utiliser
une autre méthode.
.SH "VOIR AUSSI"
.BR setjmp (3),
.BR sigsetjmp (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 4\ novembre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ longjmp\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
