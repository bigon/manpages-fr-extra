.\" (c) 2001 by John Levon <moz@compsoc.man.ac.uk>
.\" Based in part on GNU libc documentation.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" 2001-10-11, 2003-08-22, aeb, added some details
.\"
.\" Traduction 17/05/2002 par Stéphan Rafin (stephan.rafin@laposte.net)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 27/06/2005 LDP-1.60
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH POSIX_MEMALIGN 3 "22 août 2003" "GNU" "Manuel du programmeur Linux"
.SH NOM
posix_memalign, memalign, valloc \- Allocation de mémoire alignée.
.SH SYNOPSIS
.nf
.B #define _XOPEN_SOURCE 600
.B #include <stdlib.h>
.sp
.BI "int posix_memalign(void **" memptr ", size_t " alignment ", size_t " size );
.sp
.B #include <malloc.h>
.sp
.BI "void *valloc(size_t " size );
.BI "void *memalign(size_t " boundary ", size_t " size );
.nl
.fi
.SH DESCRIPTION
La fonction
.BR posix_memalign ()
alloue
.I size
octets et place l'adresse de la mémoire allouée dans
.IR "*memptr".
L'adresse de la mémoire allouée est un multiple de
.IR "alignment",
qui doit lui même être une puissance de deux et un multiple de
.IR "sizeof(void *)" .

La fonction obsolète
.BR memalign ()
alloue
.I size
octets et renvoie un pointeur vers la mémoire allouée.
L'adresse mémoire est alors un multiple de
.IR "boundary",
qui doit être une puissance de deux.

La fonction obsolète
.BR valloc ()
alloue
.I size
octets et renvoie un pointeur vers la mémoire allouée.
L'adresse mémoire est alors un multiple de la taille de page.
Cette fonction est équivalente à
.IR "memalign(sysconf(_SC_PAGESIZE),size)" .

Pour ces trois routines, la mémoire n'est pas initialisée à zéro.

.SH "VALEUR RENVOYÉE"
.BR memalign ()
et
.BR valloc ()
renvoient un pointeur sur la mémoire allouée, ou bien
.B NULL
si la requête échoue.

.BR posix_memalign ()
renvoie zéro en cas de succès, ou l'une des valeurs d'erreurs répertoriées dans
la section suivante en cas d'échec. Notez que
.IR errno
n'est pas affectée par cette fonction.

.SH "ERREURS"
.TP
.B EINVAL
Le paramètre
.IR alignment
n'est pas une puissance de deux, ou n'est pas un multiple de
.IR "sizeof(void *)" .
.TP
.B ENOMEM
Mémoire insuffisante pour réaliser la demande d'allocation.

.SH NOTES
Il y a des restrictions d'alignement sur beaucoup de systèmes, par exemple
sur les tampons utilisés pour les entrées-sorties directes des périphériques
de bloc. POSIX spécifie que l'appel
.I "pathconf(path,_PC_REC_XFER_ALIGN)"
indique quel alignement est nécessaire. On peut à présent utiliser
.BR posix_memalign ()
pour satifaire cette condition.

.BR posix_memalign ()
vérifie que
.IR alignment
répond bien aux exigences détaillées ci-dessus.
.BR memalign ()
est susceptible de ne pas contrôler que le paramètre
.IR boundary
est correct.

La norme POSIX impose que la mémoire obtenue par un appel à
.BR posix_memalign ()
puisse être libérée en utilisant
.BR free ().
Certains systèmes ne fournissent aucun moyen afin de libérer la
mémoire allouée par
.BR memalign ()
ou
.BR valloc ()
(parce que l'on peut seulement passer comme paramètre à
.BR free ()
un pointeur obtenu via
.BR malloc (),
Alors que, par exemple,
.BR memalign ()
pourrait appeler
.BR malloc ()
et aligner par la suite la valeur obtenue).
.\" Other systems allow passing the result of
.\" .IR valloc ()
.\" to
.\" .IR free (),
.\" but not to
.\" .IR realloc ().
La libc GNU permet de libérer la mémoire obtenue par n'importe laquelle de
ces trois fonctions par appel à
.BR free ().

La version libc GNU de
.BR malloc ()
renvoie toujours des adresses mémoire alignées sur 8\ octets, ainsi ces
routines ne sont nécessaires qu'en cas de besoin de valeurs d'alignement plus
grandes.

.SH HISTORIQUE
Les fonctions
.BR memalign ()
et
.BR valloc ()
sont disponibles dans toutes les bibliothèques libc de Linux.
La fonction
.BR posix_memalign ()
est disponible depuis la glibc 2.1.91.

.SH "CONFORMITÉ"
La fonction
.BR valloc ()
est apparue dans BSD 3.0. Elle est qualifiée d'obsolète dans BSD 4.3,
et de légende dans SUSv2. Elle n'apparaît plus dans SUSv3.
La fonction
.BR memalign ()
est apparue dans SunOS 4.1.3 mais pas dans BSD 4.4.
La fonction
.BR posix_memalign ()
provient de POSIX 1003.1d.

.SH "ENTÊTES"
Tout le monde est d'accord que
.BR posix_memalign ()
est déclaré dans <stdlib.h>. Pour la déclarer, la glibc a besoin que
_GNU_SOURCE soit définie, ou que _XOPEN_SOURCE soit définie à une valeur qui
ne soit pas plus petite que 600.

Tout le monde est d'accord que
.BR memalign ()
est déclaré dans <malloc.h>.

Conformément à SUSv2,
.IR valloc ()
est déclaré dans <stdlib.h>.
Libc4,5 et glibc le déclarent dans <malloc.h> et peut être également dans
<stdlib.h> (à savoir, si _GNU_SOURCE est définie, ou _BSD_SOURCE est définie,
ou, pour glibc, si _XOPEN_SOURCE_EXTENDED est définie, ou, de manière
équivalente, _XOPEN_SOURCE est définie à une valeur qui n'est pas plus petite
que 500).

.SH "VOIR AUSSI"
.BR malloc (3),
.BR free (3),
.BR getpagesize (2),
.BR brk (2)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Stéphan Rafin
<stephan DOT rafin AT laposte DOT net> le 17\ mai\ 2002
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ posix_memalign\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
