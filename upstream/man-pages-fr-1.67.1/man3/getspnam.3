.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl) and
.\" Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" Distributed under GPL
.\"
.\" Traduction : Alain Portal
.\" 08/07/2005 LDP-1.63
.\" Màj 14/12/2005 LDP-1.65
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH GETSPNAM 3 "15 novembre 2003" LDP "Manuel du programmeur Linux"
.SH NOM
getspnam, getspnam_r, getspent, getspent_r, setspent, endspent, fgetspent, fgetspent_r, sgetspent, sgetspent_r, putspent, lckpwdf, ulckpwdf \- Obtenir un enregistrement du fichier des mots de passe cachés
.SH SYNOPSIS
.nf
/* API du fichier des mots de passe cachés */
.br
.B #include <shadow.h>
.sp
.BI "struct spwd *getspnam(const char *" name );
.sp
.B struct spwd *getspent(void);
.sp
.B void setspent(void);
.sp
.B void endspent(void);
.sp
.BI "struct spwd *fgetspent(FILE *" fp );
.sp
.BI "struct spwd *sgetspent(const char *" s );
.sp
.BI "int putspent(struct spwd *" p ", FILE *" fp );
.sp
.B int lckpwdf(void);
.sp
.B int ulckpwdf(void);
.sp
/* Extension GNU */
.br
.BR "#define _SVID_SOURCE" "    /* ou _BSD_SOURCE */
.br
.B #include <shadow.h>
.sp
.BI "int getspent_r(struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int getspnam_r(const char *" name ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int fgetspent_r(FILE *" fp ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int sgetspent_r(const char *" s ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.fi
.SH DESCRIPTION
Il a longtemps été considéré comme sûr d'avoir des mots de passe chiffrés
ouvertement visibles dans le fichier des mots de passe. Lorsque les
ordinateurs sont devenus plus rapides et que les gens sont devenus plus
conscients des problèmes de sécurité, cela n'était plus acceptable.
Julianne Frances Haugh a implémenté la suite d'utilitaires «\ shadow\ » qui
conserve les mots de passe chiffrés dans le fichier
.IR /etc/shadow ,
lisible seulement par le super-utilisateur.
.LP
Les routines d'accès décrites plus loin ressemblent à celles concernant le
fichier
.IR /etc/passwd .
Cette configuration des mots de passe cachés a été supplantée par PAM
(pluggable authentication modules), et le fichier
.I /etc/nsswitch.conf
décrit à présent les sources à utiliser.
.LP
La fonction
.BR getspnam ()
renvoie un pointeur sur une structure contenant une partie des champs d'une
ligne extraite de
.I /etc/shadow
pour l'entrée correspondant à l'utilisateur de nom
.IR name .
.LP
La fonction
.BR getspent ()
renvoie un pointeur sur l'entrée suivante du fichier des mots de passe cachés.
La position dans le flux d'entrée est initialisée par
.BR setspent ().
Lorsque la lecture est effectuée, le programme devrait appeler
.BR endspent ()
pour désallouer les ressources.
.\" certains systèmes nécessitent un appel à setspent() avant le premier
.\" getspent(), pas la GlibC
.LP
La fonction
.BR fgetspent ()
est similaire à
.BR getspent ()
mais utilise le flux fourni plutôt que celui implicitement ouvert par
.BR setspent ().
.LP
La fonction
.BR sgetspent ()
analyse la chaîne
.I s
fournie dans la structure spwd.
.LP
La fonction
.BR putspent ()
écrit le contenu de la structure spwd
.RI * p
fournie sous forme d'une ligne de texte au format du fichier des mots de passe
cachés dans le flux
.IR fp .
Les entrées chaînes de valeur NULL et les entrées numériques de valeur \-1
sont écrites comme des chaînes vides.
.LP
La fonction
.BR lckpwdf ()
a pour but de protéger contre les accès multiples à la base de données des
mots de passe cachés. Elle tente d'obtenir un verrou, renvoie 0 si elle y
arrive ou \-1 si elle échoue (le verrou n'a pas pu être obtenu dans les 15
secondes).
La fonction
.BR ulckpwdf ()
libère le verrou.
Veuillez noter qu'il n'y a pas de protection contre l'accès direct au fichier
des mots de passe cachés. Seuls les programmes qui utilisent
.BR lckpwdf ()
remarqueront le verrou.
.LP
C'étaient les routines qui composaient l'API originale shadow.
Elles sont largement disponibles.
.\" Également dans libc5
.\" SUN n'a pas sgetspent()
.SS "Versions réentrantes"
De manière analogue aux routines réentrantes pour le fichier password, la
glibc a aussi ici des versions réentrantes.
La fonction
.BR getspnam_r ()
est comme la fonction
.BR getspnam ()
mais enregistre la structure passwd cachée trouvée dans l'espace pointé par
.IR spbuf .
Cette structure passwd cachée contient des pointeurs vers des chaînes qui sont
stockées dans le tampon
.I buf
de taille
.IR buflen .
Un pointeur vers le résultat (en cas de réussite) ou NULL (au cas où aucune
entrée n'a été trouvée ou qu'une erreur soit survenue) est stocké dans
.RI * spbufp .
.LP
Les fonctions
.BR getspent_r (),
.BR fgetspent_r ()
et
.BR sgetspent_r ()
sont analogues.
.LP
Certains systèmes non-glibc ont également des fonctions portant ces noms,
souvent avec des prototypes différents.
.\" SUN n'a pas sgetspent_r()
.SS Structure
La structure passwd cachée est définie dans \fI<shadow.h>\fP de la manière
suivante\ :
.sp
.nf
struct spwd {
    char *sp_namp;         /* Nom de connexion */
    char *sp_pwdp;         /* Mot de passe chiffré */
    long sp_lstchg;        /* Date de dernière modification */
    long sp_min;           /* Nombre de jours minimun entre
                              deux modifications */
    long sp_max;           /* Nombre de jours maximun entre
                              deux modifications */
    long sp_warn;          /* Nombre de jours avant l'expiration
                              du mot de passe pour avertir
                              l'utilisateur de le modifier */
    long sp_inact;         /* Nombre de jours après l'expiration
                              du mot de passe pour la désactivation
                              du compte */
    long sp_expire;        /* Nombre de jours depuis le 1er janvier 1970
                              avant que le compte ne soit désactivé */
    unsigned long sp_flag; /* Réservé */
};
.fi
.SH "VALEUR RENVOYÉE"
Ces routines renvoient NULL s'il n'y a plus d'entrée disponible ou si une
erreur est survenue pendant le traitement.
Les routines qui ont un \fBint\fR comme valeur de retour renvoient 0 en cas de
réussite et \-1 en cas d'échec.
.LP
Pour les fonctions non réentrantes, la valeur de retour peut pointer sur une
zone statique et peut être écrasée par des appels consécutifs de ces fonctions.
.LP
Les fonctions réentrantes renvoient zéro si elles réussissent. Si elles
échouent, une valeur d'erreur est renvoyée.
.SH ERREURS
.TP
.B ERANGE
Le tampon fourni est trop petit.
.SH FICHIERS
.TP
.I /etc/shadow
fichier base de données des mots de passe cachés
.TP
.I /etc/.pwd.lock
fichier verrou
.LP
Le fichier d'inclusion
.I <paths.h>
définit la constante _PATH_SHADOW comme étant le chemin du fichier des mots
de passe cachés.
.SH "CONFORMITÉ"
.TP
La base de données des mots de passe cachés et son API associée ne sont pas
spécifiées par POSIX.1-2001. Toutefois, beaucoup d'autres systèmes fournissent
une API similaire.
.SH "VOIR AUSSI"
.BR getpwnam (3),
.BR getpwnam_r (3),
.BR getgrnam (3),
.BR shadow (5)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Alain Portal
<aportal AT univ-montp2 DOT fr> le 8 juillet 2005
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ getspnam\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
