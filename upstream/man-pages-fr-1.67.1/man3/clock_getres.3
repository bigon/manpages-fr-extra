.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 2003 Nick Clifford (zaf@nrc.co.nz), Jan 25, 2003
.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl), Aug 24, 2003
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2003-08-23 Martin Schulze <joey@infodrom.org> improvements
.\" 2003-08-24 aeb, large parts rewritten
.\"
.\" Traduction : Alain Portal
.\" 27/06/2005 LDP-1.60
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH CLOCK_GETRES 3 "24 août 2003" "" "Manuel du programmeur Linux"
.SH NOM
clock_getres, clock_gettime, clock_settime \- fonctions d'horloge et de temps
.SH SYNOPSIS
.B #include <time.h>
.sp
.BI "int clock_getres(clockid_t " clk_id ", struct timespec *" res );
.br
.BI "int clock_gettime(clockid_t " clk_id ", struct timespec *" tp );
.br
.BI "int clock_settime(clockid_t " clk_id ", const struct timespec *" tp );
.SH DESCRIPTION
La fonction
.BR clock_getres ()
cherche la résolution (précision) de l'horloge
.I clk_id
spécifiée et si
.I res
est non NULL, elle l'enregistre dans la structure timespec pointée par
.IR res .
La résolution des horloges dépend de l'implémentation et ne peut pas être
configurée par un processus particulier.
Si la valeur du temps pointé par l'argument
.I tp
de
.BR clock_settime ()
n'est pas un multiple de
.IR res ,
cette valeur est tronquée à un multiple de
.IR res .
.PP
Les fonctions
.BR clock_gettime ()
et
.BR clock_settime ()
récupèrent et configurent le temps de l'horloge
.I clk_id
spécifiée.
.PP
Les arguments
.I res
et
.I tp
sont des structures
.B timespec
définies dans
.IR <time.h> \ :
.sp
.nf
struct timespec {
.in +8
time_t   tv_sec;        /* secondes */
long     tv_nsec;       /* nanosecondes */
.in -8
};
.fi
.PP
L'argument
.I clk_id
est l'identifiant d'une horloge particulière sur laquelle agir.
Une horloge peut être globale au système, et par conséquent visible de
tous les processus, ou propre à un processus, si elle mesure le temps
uniquement pour celui-ci.
.LP
Toutes les implémentations supportent l'horloge temps réel globale, laquelle
est identifiée par
.BR CLOCK_REALTIME .
Son temps représente le nombre de secondes et nanosecondes écoulées depuis le
début de l'Ére Unix (01-01-1970 GMT 00:00). Lorsque son temps est modifié,
les horloges mesurant un intervalle de temps ne sont pas affectées alors
que celles indiquant une date (heure) absolue le sont.
.LP
Plusieurs horloges peuvent être implémentées. L'interprétation des valeurs de
temps correspondantes et l'effet sur les temporisateurs ne sont pas spécifiés.
.LP
Les versions suffisamment récentes de la GNU libc et du noyau Linux gèrent
les horloges suivantes\ :
.TP
.B CLOCK_REALTIME
Horloge temps réel globale au système.
Configurer cette horloge nécessite d'avoir les privilèges appropriés.
.TP
.B CLOCK_MONOTONIC
Horloge non configurable qui représente un temps monotone
depuis une date de début arbitraire.
.TP
.B CLOCK_PROCESS_CPUTIME_ID
Horloge CPU haute résolution pour processus.
.TP
.B CLOCK_THREAD_CPUTIME_ID
Horloge CPU spécifique aux threads.
.SH "VALEUR RETOURNÉE"
.BR clock_gettime "(), " clock_settime ()
et
.BR clock_getres ()
renvoient 0 si elles réussissent ou \-1 si elles échouent, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EPERM
.BR clock_settime ()
n'a pas l'autorisation de configurer l'horloge spécifiée.
.TP
.B EINVAL
L'horloge
.I clk_id
spécifiée n'est pas supportée sur ce système.
.TP
.B EFAULT
.I tp
pointe en dehors de l'espace d'adressage accessible.
.SH NOTE
La plupart des systèmes nécessitent d'être liés à la bibliothèque librt
afin de pouvoir utiliser ces fonctions.
.SH "DISPONIBILITÉ"
Sur les systèmes conformes à la spécification POSIX sur lesquels ces fonctions
sont disponibles, la constante symbolique
.B _POSIX_TIMERS
est définie dans <unistd.h> comme étant une valeur supérieure à 0.
Les constantes symboliques
.BR _POSIX_MONOTONIC_CLOCK ,
.BR _POSIX_CPUTIME ,
.B _POSIX_THREAD_CPUTIME
indiquent que
.BR CLOCK_MONOTONIC ,
.BR CLOCK_PROCESS_CPUTIME_ID ,
.B CLOCK_THREAD_CPUTIME_ID
sont disponibles. (Voir aussi
.BR sysconf (3).)
.SH "CONFORMITÉ"
SUSv2, POSIX 1003.1-2001.
.SH "VOIR AUSSI"
.BR date (1),
.BR adjtimex (2),
.BR gettimeofday (2),
.BR settimeofday (2),
.BR time (2),
.BR ctime (3),
.BR ftime (3),
.BR sysconf (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Alain Portal
<aportal AT univ-montp2 DOT fr> le 9 juin 2005
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ clock_getres\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
