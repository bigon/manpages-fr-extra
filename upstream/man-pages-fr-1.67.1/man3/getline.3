.\" Copyright (c) 2001 John Levon <moz@compsoc.man.ac.uk>
.\" Based in part on GNU libc documentation
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Traduction 06/05/2002 par Stéphan Rafin (stephan.rafin@laposte.net)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH GETLINE 3 "7 octobre 2001" LDP "Manuel du programmeur Linux"
.SH NOM
getline, getdelim \- Saisie de chaîne délimitée.
.SH SYNOPSIS
.nf
.B #define _GNU_SOURCE
.B #include <stdio.h>
.sp
.BI "ssize_t getline(char **" lineptr ", size_t *" n ", FILE *" stream );
.nl
.BI "ssize_t getdelim(char **" lineptr ", size_t *" n ", int " delim ", FILE *" stream );
.SH DESCRIPTION
.BR getline ()
lit une ligne entière et stocke l'adresse du tampon contenant
le texte dans
.IR "*lineptr".
Le tampon se termine par un 0 terminal et inclut le caractère saut-de-ligne,
si un tel séparateur a été trouvé.

.\" FIXME: what happens if *lineptr is NULL but *n isn't zero ?
.\" Answer: *n is ignored and a new buffer is allocated
Si
.IR "*lineptr"
vaut
.BR "NULL",
la routine
.BR getline ()
alloue un tampon pour recevoir la ligne, ce tampon devra être libéré par le programme
utilisateur.
Alternativement, avant d'appeler
.BR getline (),
.IR "*lineptr"
peut contenir un pointeur vers un tampon alloué par
.BR malloc ()
et de taille
.IR "*n"
octets. Si le tampon n'est pas suffisant pour recevoir la ligne saisie,
.BR getline ()
redimensionne le tampon afin de s'adapter grâce à
.BR realloc (),
mettant à jour
.IR "*lineptr"
et
.IR "*n"
comme il se doit. Quoi qu'il en soit, en cas de succès,
.IR "*lineptr"
et
.IR "*n"
seront adaptés afin de rendre compte respectivement de l'adresse et
de la taille du tampon.

.BR getdelim ()
fonctionne comme
.BR getline (),
si ce n'est qu'un séparateur différent de saut-de-ligne peut être spécifié
en tant qu'argument
.IR delimiter.
Tout comme avec
.BR getline (),
aucun séparateur n'est ajouté s'il n'y en avait pas
dans l'entrée avant que la fin du fichier ne soit atteinte.
.SH "VALEUR RENVOYÉE"
En cas de succès,
.BR getline ()
et
.BR getdelim ()
renvoient le nombre de caractères lus, séparateur inclus,
mais sans compter le zéro terminal. Cette valeur peut être utilisée
afin de traiter les caractères null insérés dans la ligne lue.

Les deux fonctions renvoient \-1 en cas d'échec de lecture de la ligne (condition de fin de fichier incluse)
.SH ERREURS
.TP
.B EINVAL
Paramètres erronés
.RI ( n
ou
.I lineptr
valent NULL, ou bien
.I stream
n'est pas valide).
.SH "EXEMPLE"
.nf
#define _GNU_SOURCE
#include <stdio.h>
#include <stdlib.h>

int main(void)
{
	FILE * fp;
	char * line = NULL;
	size_t len = 0;
	ssize_t read;
	fp = fopen("/etc/motd", "r");
	if (fp == NULL)
		exit(EXIT_FAILURE);
	while ((read = getline(&line, &len, fp)) != -1) {
		printf("Retrieved line of length %zu :\en", read);
		printf("%s", line);
	}
	if (line)
		free(line);
	return EXIT_SUCCESS;
}
.fi
.SH "CONFORMITÉ"
getline() tout comme getdelim() sont des extensions GNU.
Elles sont disponibles depuis la libc 4.6.27.
.SH "VOIR AUSSI"
.BR read (2),
.BR fopen (3),
.BR fread (3),
.BR gets (3),
.BR fgets (3),
.BR scanf (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Stéphan Rafin
<stephan DOT rafin AT laposte DOT net> le 6\ mai\ 2002
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ getline\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
