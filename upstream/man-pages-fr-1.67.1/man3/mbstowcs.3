.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Traduction 04/11/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH MBSTOWCS 3 "25 juillet 1999" LDP "Manuel du programmeur Linux"
.SH NOM
mbstowcs \- Convertir une chaîne de caractères multi-octets en une chaîne de caractères étendus.
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "size_t mbstowcs (wchar_t *" dest ", const char *" s ", size_t " n );
.fi
.SH DESCRIPTION
Si
.I dest
n'est pas un pointeur
.BR NULL ,
la fonction
.BR mbstowcs ()
convertit la chaîne multi-octets
.I src
en chaîne de caractères larges
.IR dest .
Elle écrira au plus
.I n
caractères larges dans
.IR dest .
L'état de conversion est initialisé. La conversion peut s'arrêter pour l'une
des trois raisons suivantes\ :
.PP
1. Une séquence multi-octets invalide a été rencontrée. Dans ce cas, elle
renvoie (size_t)(\-1).
.PP
2. \fIn\fP caractères larges non-nuls ont été stockés dans
.IR dest .
Dans ce cas, le nombre de caractères écrits dans
.I dest
est renvoyé, mais l'état de décalage en ce point est perdu.
.PP
3. La chaîne multi-octets a été complètement convertie, y compris le
caractère nul final. Dans ce cas, le nombre de caractères larges écrits dans
.IR dest ,
sans compter le caractère nul final, est renvoyé.
.PP
Le programmeur doit s'assurer qu'il y a assez de place pour au moins
.I n
caractères larges dans
.IR dest .
.PP
Si
.I dest
est
.BR NULL ,
.I n
est ignoré, et la conversion se présente comme au-dessus, excepté que les
caractères larges ne sont pas écrits en mémoire et qu'aucune limite de longueur
n'existe.
.PP
Afin d'éviter la situation numéro 2 ci-dessus, le programmeur doit s'assurer que
.I n
est supérieur ou égal a
.IR "mbstowcs(NULL,src,0)+1" .

.SH "VALEUR RENVOYÉE"
La fonction
.BR mbstowcs ()
renvoie le nombre de caractères larges qui constituent la partie convertie
de la chaîne, sans compter le caractère nul final. Si une séquence multi-octets
invalide est rencontrée, elle renvoie (size_t)(\-1).
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR mbsrtowcs (3)
.SH NOTES
Le comportement de
.BR mbstowcs
dépend de la catégorie
.B LC_CTYPE
de la localisation en cours.
.PP
La fonction
.BR mbsrtowcs (2)
fournit une meilleure interface pour la même fonctionnalité.
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 4\ novembre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ mbstowcs\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
