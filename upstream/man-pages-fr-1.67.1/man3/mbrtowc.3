.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Traduction 29/08/2000 par Christophe Blaess (ccb@club-internet.fr)
.\" LDP 1.30
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH MBRTOWC 3 "22 novembre 2001" LDP "Manuel du programmeur Linux"
.SH NOM
mbrtowc \- Convertir une séquence multi-octets en caractère large.
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "size_t mbrtowc (wchar_t *" pwc ", const char *" s ", size_t " n ", mbstate_t *" ps );
.fi
.SH DESCRIPTION
L'usage principal de cette fonction est celui avec \fIs\fP non-NULL et \fIpwc\fP non-NULL.
Dans ce cas, la fonction \fBmbrtowc\fP() examine au plus \fIn\fP octets de la séquence commençant en \fIs\fP,
en extrait le prochain caractère multi-octets complet, et le place en \fI*pwc\fP.
Elle met à jour l'état de décalage \fI*ps\fP. Si le caractère large obtenu n'est pas L'\\0', elle renvoie
le nombre d'octets lus depuis \fIs\fP. Si le caractère large obtenu est L'\\0', elle réinitialise
l'état de décalage \fI*ps\fP et renvoie zéro.
.PP
Si les \fIn\fP octets commençant en \fIs\fP ne contiennent pas de caractère large complet, \fBmbrtowc\fP()
renvoie \fI(size_t)(\-2)\fP. Cela peut se produire même si \fIn\fP >= \fIMB_CUR_MAX\fP, lorsque la séquence multi-octets
contient des séquences de décalage redondantes.
.PP
Si la séquence multi-octets commençant en \fIs\fP contient une séquence invalide avant le prochain
caractère complet, \fBmbrtowc\fP() renvoie \fI(size_t)(\-1)\fP et place dans \fBerrno\fP la valeur \fBEILSEQ\fP.
Dans ce cas, les effets sur \fI*ps\fP sont indéfinis.
.PP
Une autre situation est possible, si \fIs\fP est non-NULL, mais \fIpwc\fP est NULL. Dans ce cas, \fBmbrtowc\fP
se comporte comme précédemment, mais n'enregistre pas le caractère large obtenu.
.PP
Un troisième cas se présente si \fIs\fP est NULL. Alors, \fIpwc\fP et \fIn\fP sont
ignorés. Si l'état de conversion représenté par \fI*ps\fP indique une conversion
multi-octets incomplète, la fonction \fBmbrtowc\fP() renvboie
\fI(size_t)(\-1)\fP, remplie \fBerrno\fP avec \fBEILSEQ\fP, et
laisse \fI*ps\fP dans un état indéfini. Sinon, la fonction \fBmbrtowc\fP() function
remet \fI*ps\fP dans l'état initial et renvoie 0.
.PP
Dans tous ces cas, si \fIps\fP est un pointeur NULL, une zone de mémoire statique
propre à \fBmbrtowc\fP() est utiliséé à sa place.
Sinon, \fI*ps\fP doit être un objet \fBmbstate_t\fP valide.
Un tel objet \fBmbstate_t\fP noté \fIa\fP peut être initialisé
en le mettant à zéro, par exemple ainsi\ :
.sp
.RS
memset(&a, 0, sizeof(a));
.RE
.SH "VALEUR RENVOYÉE"
La fonction \fBmbrtowc\fP() renvoie le nombre d'octets balayés depuis la séquence commençant en \fIs\fP, si
un caractère large non nul a été reconnu. Elle renvoie zéro si un caractère large nul est rencontré.
Elle renvoie (size_t)(\-1) et remplit \fBerrno\fP avec \fBEILSEQ\fP, si une séquence invalide est trouvée.
Elle renvoie (size_t)(\-2) si elle n'a pas trouvé de caractère entier, et si \fIn\fP doit être augmenté.
.SH "CONFORMITÉ"
ISO/ANSI C, UNIX98
.SH "VOIR AUSSI"
.BR mbsrtowcs (3)
.SH NOTES
Le comportement de \fBmbrtowc\fP() dépend de la catégorie LC_CTYPE de la localisation.
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 29\ août\ 2000
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ mbrtowc\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
