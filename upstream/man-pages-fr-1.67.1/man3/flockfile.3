.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traduction 22/04/2002 par Stéphan Rafin (stephan.rafin@laposte.net)
.\"
.\" Màj 21/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH LOCKFILE 3 "18 octobre 2001" LDP "Manuel du programmeur Linux"
.SH NOM
flockfile, ftrylockfile, funlockfile \- Verrouillage d'un flux pour stdio.
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.sp
.BI "void flockfile(FILE *" filehandle );
.br
.BI "int ftrylockfile(FILE *" filehandle );
.br
.BI "void funlockfile(FILE *" filehandle );
.fi
.SH DESCRIPTION
Les fonctions stdio peuvent être utilisées dans un contexte multithread.
Ceci est réalisé en affectant à chaque objet de type FILE
un compteur et (si le compteur est non nul) un thread propriétaire.
Lors de chaque appel à la librairie stdio, ces fonctions attendent jusqu'à ce que
l'objet FILE ne soit plus verrouillé par un thread différent, puis elles le verrouillent,
réalisent l'entrée sortie demandée, et libèrent l'objet.
.LP
(Remarque\ : ce verrouillage n'a rien à voir avec le verrouillage de fichier réalisé
par des fonctions comme
.BR flock (2)
et
.BR lockf (3).)
.LP
Tout ceci est invisible au programmeur en C, mais il existe deux raisons
de souhaiter un contrôle plus fin. D'une part, un thread peut réaliser
une  série d'entrées-sorties interdépendantes, ces opérations
ne devant pas être interrompues par les entrées sorties d'autres threads.
D'autre part, on peut désirer supprimer l'overhead induit par ce verrouillage
afin d'obtenir de meilleures performances.
.LP
À cette fin, un thread peut verrouiller explicitement un objet de type FILE,
puis réaliser sa série d'entrées-sorties, et enfin, relâcher le verrou.
Cela empêche les autres threads d'intervenir (sur le flux)
entre-temps. Si la motivation du verrouillage est la recherche de
meilleures  performances, on peut réaliser l'entrée-sortie à l'aide des
versions non bloquantes des fonctions stdio\ : avec
\fIgetc_unlocked\fP() et \fIputc_unlocked\fP() au lieu de
\fIgetc\fP() et \fIputc\fP().
.LP
La fonction \fBflockfile\fP() attend jusqu'à ce que *\fIfilehandle\fP ne
soit plus verrouillé par un autre thread, puis affecte *\fIfilehandle\fP
au thread actuel, et incrémente le compteur.
.LP
La fonction \fBfunlockfile\fP() décrémente le compteur de verrou.
.LP
La fonction \fBftrylockfile\fP() est une version non bloquante de
\fBflockfile\fP(). Elle ne fait rien lorsqu'un autre thread
détient *\fIfilehandle\fP, sinon, elle se l'approprie et incrémente
le compteur.
.SH "VALEUR RENVOYÉE"
La fonction \fBftrylockfile\fP() renvoie zéro en cas de succès
(le verrou a été obtenu), et une valeur différente de zéro en cas d'échec.
.SH ERREURS
Aucune.
.SH DISPONIBILITÉ
Ces fonctions sont disponibles lorsque _POSIX_THREAD_SAFE_FUNCTIONS
est défini. Elles sont présentes dans la libc depuis la version 5.1.1
et dans la glibc depuis la glic 2.0.
.SH "CONFORMITÉ"
POSIX.1
.SH "VOIR AUSSI"
.BR unlocked_stdio (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Stéphan Rafin
<stephan DOT rafin AT laposte DOT net> le 22\ avril\ 2002
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ flockfile\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
