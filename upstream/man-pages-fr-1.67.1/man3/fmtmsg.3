.\"  Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\"  Distributed under GPL
.\"  adapted glibc info page
.\"
.\"  This should run as 'Guru Meditation' (amiga joke :)
.\"  The function is quite complex an deserves an example
.\"
.\"  Polished, aeb, 2003-11-01
.\"
.\" Traduction : Alain Portal
.\" 04/07/2005 LDP-1.61
.\" Màj 14/12/2005 LDP-1.65
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH fmtmsg 3 "1er novembre 2003" LDP "Manuel du programmeur Linux"
.SH "NOM"
fmtmsg \- Afficher des messages d'erreur formatés
.SH SYNOPSIS
.sp
.B #include <fmtmsg.h>
.sp
.BI "int fmtmsg(long " classification ", const char *" label ", int " severity ,
.br
.in 18
.BI "const char *" text ", const char *" action ", const char *" tag );
.sp
.SH DESCRIPTION
Cette fonction affiche un message décrit par ses paramètres sur le(s)
périphérique(s) spécifié(s) par le paramètre
.IR classification .
Pour les messages écrits sur
.IR stderr ,
le format dépend de la variable d'environnement
.BR MSGVERB .
.LP
Le paramètre
.I label
identifie la source du message. La chaîne doit être composée en deux parties,
séparées par le caractère deux-points «\ :\ », où la première partie ne
comporte pas plus de 10 caractères et la seconde, pas plus de 14.
.LP
Le paramètre
.I text
décrit la condition de l'erreur.
.LP
Le paramètre
.I action
décrit les étapes possibles pour récupérer l'erreur.
Si elle est affichée, elle sera préfixée par "TO FIX:\ ".
.LP
Le paramètre
.I tag
est une référence à la documentation en ligne où l'on pourra trouver plus
d'information. Il devrait contenir la valeur
.I label
et un numéro d'identification unique.
.SS "Paramètres factices"
Chacun des paramètres peut avoir une valeur factice.
La valeur de classification factice
.B MM_NULLMC
(0L) ne spécifie aucune sortie, aussi, rien n'est affiché.
La valeur de sévérité factice
.B NO_SEV
(0) signifie qu'aucune sévérité n'est fournie.
Les valeurs
.BR MM_NULLLBL ,
.BR MM_NULLTXT ,
.BR MM_NULLACT ,
.BR MM_NULLTAG
sont des synonymes de ((char\ *)\ 0), la chaîne vide, et
.B MM_NULLSEV
est un synonyme de
.BR NO_SEV .
.SS "Le paramètre classification"
Le paramètre
.I classification
est la somme de valeurs décrivant 4 types d'informations.
.br
.sp
La première valeur définit le canal de sortie.
.TP 12n
.B MM_PRINT
Sortir sur
.IR stderr .
.TP
.B MM_CONSOLE
Sortir sur la console du système.
.TP
.B "MM_PRINT | MM_CONSOLE"
Sortir sur les deux.
.PP
La deuxième valeur est la source de l'erreur\ :
.TP 12n
.B MM_HARD
Une erreur matérielle est survenue.
.TP
.B MM_FIRM
Une erreur micro-logicielle (firmware) est survenue.
.TP
.B MM_SOFT
Une erreur logicielle est survenue.
.PP
La troisième valeur encode le détecteur du problème\ :
.TP 12n
.B MM_APPL
L'erreur a été détectée par une application.
.TP
.B MM_UTIL
L'erreur a été détectée par un utilitaire.
.TP
.B MM_OPSYS
L'erreur a été détectée par le système d'exploitation.
.PP
La quatrième valeur indique la gravité de l'incident\ :
.TP 12n
.B MM_RECOVER
L'erreur est récupérable.
.TP
.B MM_NRECOV
L'erreur n'est pas récupérable.
.SS "Le paramètre severity"
Le paramètre
.I severity
peut prendre l'une des valeurs suivantes\ :
.TP 12n
.B MM_NOSEV
Aucune sévérité ne sera affichée.
.TP
.B MM_HALT
Cette valeur est affichée en tant que HALT.
.TP
.B MM_ERROR
Cette valeur est affichée en tant que ERROR.
.TP
.B MM_WARNING
Cette valeur est affichée en tant que WARNING.
.TP
.B MM_INFO
Cette valeur est affichée en tant que INFO.
.PP
Les valeurs numériques sont prises entre 0 et 4. Utiliser
.B addseverity()
ou la variable d'environnement
.B SEV_LEVEL
vous permet d'ajouter d'autres niveaux et messages à afficher.
.SH "ENVIRONNEMENT"
La variable d'environnement
.B MSGVERB
(«\ volubilité du message\ ») peut être utilisée pour supprimer des parties
de la sortie vers
.IR stderr .
(Cela n'a pas d'influence sur la sortie vers la console.)
Lorsque cette variable est définie, non vide et que c'est une liste de
mots-clés valides séparés par le caractère deux-points, seules les parties
du message correspondantes à ces mots-clès seront affichées.
Les mots-clés valides sont «\ label\ », «\ severity\ », «\ text\ »,
«\ action\ » et «\ tag\ ».
.PP
La variable d'environnement
.B SEV_LEVEL
peut être utilisée afin d'introduire de nouveaux niveaux de gravité.
Par défaut, seuls les cinqs niveaux de gravité décrits précédemment sont
disponibles. Toute autre valeur numérique fera que fmtmsg() n'affichera rien.
Si l'utilisateur positionne
.B SEV_LEVEL
avec un format comme
.sp
.RS
SEV_LEVEL=[description[:description[:...]]]
.RE
.sp
dans l'environnement du processus avant le premier appel à fmtmsg(),
où chaque description est de la forme
.sp
.RS
severity-keyword,level,printstring
.RE
.sp
alors
.BR fmtmsg ()
acceptera également les valeurs indiquées pour le niveau (en plus des niveaux
standards 0-4), et utilisera la chaîne à afficher (printstring) indiquée
lorsqu'un tel niveau surviendra.
.LP
La partie «\ severity-keyword\ » n'est pas utilisée par
.R fmtmsg ()
mais doit être présente.
La partie «\ level\ » est la représentation alphabétique d'un nombre.
La valeur numérique doit être un nombre strictement supérieur à 4.
Cette valeur doit être utilisée dans le paramètre «\ severity\ » de
.BR fmtmsg ()
pour sélectionner cette classe. Il n'est pas possible de surcharger
les classes prédéfinies. La partie «\ printstring\ » est la chaîne qui sera
affichée lorsqu'un message de cette classe est traité par
.BR fmtmsg ().
.SH "VALEURS RENVOYÉES"
La fonction peut retourner 4 valeurs\ :
.TP 12n
.B MM_OK
Tout c'est bien passé.
.TP
.B MM_NOTOK
Échec complet.
.TP
.B MM_NOMSG
Erreur lors de l'écriture sur
.IR stderr .
.TP
.B MM_NOCON
Erreur lors de l'écriture sur la console.
.SH "CONFORMITÉ"
Les fonctions
.BR fmtmsg ()
et
.BR addseverity (),
et les variables d'environnement
.B MSGVERB
et
.B SEV_LEVEL
proviennent de System V (XPG4-UNIX).
La fonction
.BR fmtmsg ()
et la variable d'environnement
.B MSGVERB
sont décrites dans la spécification POSIX 1003.1-2001.
.SH NOTES
Les pages de manuel System V et Unixware nous disent que ces fonctions ont
été remplacées par «\ pfmt() et addsev()\ » ou par «\ pfmt(),
vpfmt(), lfmt(), et vlfmt()\ », et seront supprimées par la suite.
.SH "EXEMPLE"
.nf
#include <stdio.h>
#include <fmtmsg.h>

int main() {
  long class = MM_PRINT | MM_SOFT | MM_OPSYS | MM_RECOVER;
  int err;
  err = fmtmsg(class, "util-linux:mount", MM_ERROR,
        "unknown mount option", "See mount(8).", "util-linux:mount:017");
  switch(err) {
    case MM_OK:
      break;
    case MM_NOTOK:
      printf("Nothing printed\en");
      break;
    case MM_NOMSG:
      printf("Nothing printed to stderr\en");
      break;
    case MM_NOCON:
      printf("No console output\en");
      break;
    default:
      printf("Unknown error from fmtmsg()\en");
  }
  return 0;
}
.fi
.PP
La sortie devrait être\ :
.nf
  util-linux:mount: ERROR: unknown mount option
  TO FIX: See mount(8).  util-linux:mount:017
.fi
et après
.nf
  MSGVERB=text:action; export MSGVERB
.fi
la sortie devient\ :
.nf
  unknown mount option
  TO FIX: See mount(8).
.fi
.SH "VOIR AUSSI"
.BR addseverity (3),
.BR perror (3)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Alain Portal
<aportal AT univ-montp2 DOT fr> le 4 juillet 2005
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 3\ fmtmsg\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
