.\" Copyright (C) 1996 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 April 1996 by Andries Brouwer (aeb@cwi.nl)
.\" 960412: Added comments from Stephen Tweedie
.\" Modified Tue Oct 22 22:28:41 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Mon Jan  5 20:31:04 1998 by aeb.
.\"
.\" Traduction 15/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 15/04/1997
.\" Màj 11/12/1997 LDP-1.18
.\" Màj 25/04/1998 LDP-1.19
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH SYSCTL 2 "11 avril 1996" LDP "Manuel du programmeur Linux"
.SH NOM
sysctl \- Lire/écrire les paramètres système.
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.B #include <linux/unistd.h>
.sp
.B #include <linux/sysctl.h>
.sp
.B _syscall1(int, _sysctl, struct __sysctl_args *, args);
.sp
.BI "int _sysctl(struct __sysctl_args *" args );
.SH DESCRIPTION
L'appel système
.B _sysctl
lit et/ou écrit les paramètres du noyau. Par exemple, le nom d'hôte
ou le nombre maximum de fichiers ouverts. L'argument a la forme
.PP
.nf
struct __sysctl_args {
        int *name;        /* integer vector describing variable */
        int nlen;         /* length of this vector */
        void *oldval;     /* 0 or address where to store old value */
        size_t *oldlenp;  /* available room for old value,
                             overwritten by actual size of old value */
        void *newval;     /* 0 or address of new value */
        size_t newlen;    /* size of new value */
};
.fi
.PP
Cet appel effectue une recherche dans la structure arborescente
regroupée sous le répertoire
.BR /proc/sys ,
puis,
si les valeurs réclamées y sont trouvées, appelle les routines
appropriées pour lire ou modifier les valeurs.

.SH "EXEMPLE"
.nf
#include <linux/unistd.h>
#include <linux/types.h>
#include <linux/sysctl.h>

_syscall1(int, _sysctl, struct __sysctl_args *, args);
int sysctl(int *name, int nlen, void *oldval, size_t *oldlenp,
           void *newval, size_t newlen)
{
        struct __sysctl_args args={name,nlen,oldval,oldlenp,newval,newlen};
        return _sysctl(&args);
}

#define SIZE(x) sizeof(x)/sizeof(x[0])
#define OSNAMESZ 100

char osname[OSNAMESZ];
int osnamelth;
int name[] = { CTL_KERN, KERN_OSTYPE };

main(){
        osnamelth = SIZE(osname);
        if (sysctl(name, SIZE(name), osname, &osnamelth, 0, 0))
                perror("sysctl");
        else
                printf("Cette machine fonctionne avec %*s\en", osnamelth, osname);
        return 0;
}
.fi

.SH "VALEUR RENVOYÉE"
.B _sysctl
renvoie 0 s'il réussit, et \-1 s'il échoue auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B ENOTDIR
.I name
non trouvé.
.TP
.B EPERM
pas de droits de parcours sur l'un des «\ répertoires\ » rencontrés,
ou pas de permission de lecture avec
.I oldval
non nul, ou encore pas de permission d'écriture avec
.I newval
non nul.
.TP
.B EFAULT
Demande de lecture de la valeur précédente en fournissant
.I oldval
non NULL, mais pas de place disponible dans
.IR oldlenp .
.SH "CONFORMITÉ"
Cet appel système est spécifique Linux et ne doit pas être employé
dans les programmes destinés à être portables.
Un appel
.B sysctl
est présent dans Linux depuis la version 1.3.57. Il existait
dans BSD 4.4. Seul Linux dispose du miroir
.I /proc/sys
et les conventions de noms d'objets diffèrent entre Linux et BSD 4.4,
mais les déclarations de la fonction
.BR sysctl (2)
sont identiques sur les deux systèmes.
.SH BOGUES
Les noms des objets peuvent varier d'une version à l'autre du noyau.
CET APPEL-SYSTÈME N'A AUCUN INTÉRÊT POUR LES APPLICATIONS. Utilisez
l'interface
.I /proc/sys
à la place.
.br
Tous les objets disponibles ne sont pas proprement documentés.
.br
Il n'est pas possible de changer de système d'exploitation en écrivant dans
.IR /proc/sys/kernel/ostype .
.SH "VOIR AUSSI"
.BR proc (5)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 15\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ sysctl\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
