.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1996 Tom Bjorkholm <tomb@mydata.se>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 1996-04-11 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written (1.3.86)
.\" 1996-04-12 Tom Bjorkholm <tomb@mydata.se>
.\"            Update for Linux 1.3.87 and later
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 08/04/1997
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 23/12/2005 LDP-1.67
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH MREMAP 2 "12 avril 1996" LDP "Manuel du programmeur Linux"
.SH NOM
mremap \- Modifier une projection de la mémoire virtuelle.
.SH SYNOPSIS
.B #include <unistd.h>
.br
.B #include <sys/mman.h>
.sp
.BI "void * mremap(void *" old_address ", size_t " old_size
.BI ", size_t " new_size ", unsigned long " flags );
.fi
.SH DESCRIPTION
\fBmremap\fR agrandit (ou diminue) une projection (Ndt\ : mapping) de mémoire virtuelle
en mémoire réelle, en la déplaçant éventuellement (sous contrôle de l'argument
\fIflags\fR et de la place disponible dans l'espace d'adressage virtuel).

\fIold_address\fR est l'ancienne adresse du bloc de mémoire virtuelle à agrandir
(ou à diminuer). Veuillez noter que \fIold_address\fR doit être alignée sur une frontière de
page. \fIold_size\fR est la taille du bloc de mémoire virtuelle.
\fInew_size\fR est la taille désirée pour le nouveau bloc de mémoire.

L'argument \fIflags\fR contient les options décrites plus bas.

Sous Linux, la mémoire est divisée en pages. Un processus
utilisateur dispose d'un ou plusieurs segments linéaires
de mémoire virtuelle.
À chaque segment correspond une ou plusieurs projections dans
les pages de mémoire réelle (dans la table des pages).
Chaque segment de mémoire virtuelle dispose de ses propres
droits d'accès (sa protection), ce qui peut déclencher
des fautes de segmentation si la mémoire est utilisée
incorrectement (par exemple, en écrivant dans un segment en
lecture seule).
De même une tentative d'accès à la mémoire en\-dehors des segments
déclenche également une faute de segmentation.

\fBmremap\fR utilise le schéma de la table des pages de Linux.
\fBmremap\fR modifie la correspondance entre les adresses virtuelles et les
pages de mémoire réelle. Ce mécanisme peut être utilisé pour implémenter un
\fBrealloc\fR très efficace.

.SH OPTIONS
Ces valeurs sont combinées par un
.I OU
binaire «\ |\ » dans le champ
.I flags
lors de l'appel de
.BR mremap.
.TP
.B MREMAP_MAYMOVE
indique que le bloc virtuel peut être déplacé si le
redimensionnement ne peut pas être effectué à la même
adresse virtuelle.

.SH "VALEUR RENVOYÉE"
\fBmremap\fR renvoie un pointeur sur la nouvelle zone de
mémoire virtuelle s'il réussit.
En cas d'échec, la valeur
.B MAP_FAILED
(c.-à-d. (void *) \-1) est renvoyée et \fIerrno\fR contient
le code d'erreur.

.SH ERREURS
.TP
.B EINVAL
Un argument invalide a été fourni. \fIold_address\fR n'était
probablement pas alignée sur une frontière de pages.
.TP
.B EFAULT
"Segmentation fault." Une adresse dans l'intervalle entre
\fIold_address\fR et \fIold_address\fR+\fIold_size\fR
n'est pas une adresse virtuelle valide pour ce processus.
On peut également obtenir  EFAULT même s'il existe des
projections recouvrant la zone complète demandée, mais
que ces projections sont de types différents.
.TP
.B EAGAIN
Le segment de mémoire est verrouillé et sa projection ne
peut pas être modifiée.
.TP
.B ENOMEM
La zone de mémoire ne peut pas être agrandie à l'emplacement
actuel, et l'option \fIMREMAP_MAYMOVE\fR n'a pas été
fournie dans \fIflags\fR.
Ou encore, il n'y a plus assez de mémoire virtuelle disponible.
.SH NOTE
Avec la GlibC actuelle, pour obtenir la définition de la constante
.BR MREMAP_MAYMOVE ,
il faut définir _GNU_SOURCE avant d'inclure <sys/mman.h>.
.SH CONFORMITÉ
Cet appel système est spécifique à Linux et ne doit pas être
employé dans des programmes conçus pour être portables. BSD 4.2
a un appel système
.BR mremap (2)
avec une sémantique totalement différente.
.SH "VOIR AUSSI"
.BR getpagesize (2),
.BR realloc (3),
.BR malloc (3),
.BR brk (2),
.BR sbrk (2),
.BR mmap (2)
.P
(\fIModern Operating Systems\fR by Andrew S. Tannenbaum,
\fIInside Linux\fR by Randolf Bentson,
\fIThe Design of the UNIX Operating System\fR by Maurice J. Bach.)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 14\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ mremap\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
