.\" Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Sun Nov 28 17:06:19 1993, Rik Faith (faith@cs.unc.edu)
.\"          with material from Luigi P. Bai (lpb@softint.com)
.\" Portions Copyright 1993 Luigi P. Bai
.\" Modified Tue Oct 22 22:04:23 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 5 Jan 2002, Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\" Modified, 19 Sep 2002, Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\"	Added SHM_REMAP flag description
.\"
.\" Traduction 16/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 15/04/1997
.\" Màj 20/01/2002 LDP-1.47
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH SHMOP 2 "5 janvier 2002" LDP "Manuel du programmeur Linux"
.SH NOM
shmop, shmat, shmdt \- Opérations sur la mémoire partagée.
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/shm.h>
.fi
.sp
.BI "void *shmat ( int " shmid ,
.BI "const void * " shmaddr ,
.BI "int " shmflg );
.sp
.BI "int shmdt (const void * " shmaddr );
.SH DESCRIPTION
La fonction
.B shmat
attache le segment de mémoire partagée identifié par
.B shmid
au segment de données du processus appelant.
L'adresse d'attachement est indiquée par
.I shmaddr
avec les critères suivants\ :
.IP
Si
.I shmaddr
vaut
.BR NULL ,
le système essaye de trouver une adresse libre pour attacher
le segment.
.IP
Si
.I shmaddr
n'est pas
.B NULL
et si
.B SHM_RND
est indiqué dans
.IR shmflg ,
l'attachement a lieu à l'adresse
.I shmaddr
arrondie au multiple inférieur de
.BR SHMLBA .
Sinon
.I shmaddr
doit être alignée sur une frontière de page, où l'attachement a lieu.
.PP
Si
.B SHM_RDONLY
est indiqué dans
.IR shmflg ,
le segment est attaché en lecture seulement, et le processus doit disposer
de la permission de lecture dessus. Sinon le segment est attaché en lecture
et écriture et le processus doit disposer des deux permissions d'accès.
Il n'y a pas de notion d'écriture seule pour les
segments de mémoire partagée.
.PP
L'option (spécifique à Linux)
.B SHM_REMAP
peut être ajoutée dans
.I shmflg
pour indiquer que la projection du segment doit remplacer une projection
précédente dans l'intervalle commençant en
.I shmaddr
et s'étendant sur la taille du segment.
(Normalement une erreur
.B EINVAL
se produirait si une projection existait déjà dans l'intervalle indiqué).
Dans ce cas,
.I shmaddr
ne doit pas être
.BR NULL .
.PP
La valeur
.B brk
du processus appelant n'est pas altérée par l'attachement. Le segment est
automatiquement détaché quand le processus se termine. Le même segment peut être
attaché à la fois en lecture seule et en lecture/écriture. Il peut également
être attaché en plusieurs endroits de l'espace d'adressage du processus.
.PP
Si
.B shmat
réussit, les membres de la structure
.B shmid_ds
associée au segment de mémoire partagée sont mis à jour ainsi\ :
.IP
.B shm_atime
correspond à l'heure actuelle.
.IP
.B shm_lpid
contient le PID de l'appelant.
.IP
.B shm_nattch
est incrémenté de 1
.PP
Notez que l'attachement réussit même si le segment de mémoire est
marqué pour destruction.
.PP
La fonction
.B shmdt
détache le segment de mémoire partagée situe à l'adresse indiquée par
.IR shmaddr .
Le segment doit être effectivement attaché, et l'adresse
.I shmaddr
doit être celle renvoyée précédemment par
.BR shmat.
.PP
Quand
.B shmdt
réussit, les membres de la structure
.B shmid_ds
associée au segment de mémoire partagée sont mis à jour ainsi\ :
.IP
.B shm_dtime
correspond à l'heure actuelle.
.IP
.B shm_lpid
contient le PID de l'appelant.
.IP
.B shm_nattch
est décrémenté de 1. S'il devient nul, et si le
segment est marqué pour destruction, il est
effectivement détruit.
.PP
La région occupée de l'espace d'adressage du processus est
libérée.
.PP
.SH "AUTRES APPELS SYSTÈMES"
.TP
.BR fork ()
Après un
.BR fork ()
le fils hérite des segments de mémoire partagée.
.TP
.BR exec ()
Après un
.BR exec ()
tous les segments de mémoire partagée sont détachés (pas détruits).
.TP
.BR exit ()
Lors d'un
.BR exit ()
tous les segments de mémoire partagée sont détachés (pas détruits).
.PP
.SH "VALEUR RENVOYÉE"
Les deux fonctions renvoient
.B \-1
si elles échouent, auquel cas
.B errno
contient le code d'erreur.
Sinon
.B shmat
renvoie l'adresse d'attachement du segment de mémoire partagée, et
.B shmdt
renvoie
.BR 0 .
.SH ERREURS
.BR shmat "\ :"
.TP
.B EACCES
L'appelant n'a pas les permissions d'accès nécessaires pour l'attachement.
.TP
.B EINVAL
.I shmid
est invalide,
.I shmaddr
est mal alignée,
ou
.B SH_REMAP
a été réclamé et
.I shmaddr
est
.BR NULL .
.TP
.B ENOMEM
Pas assez de mémoire pour le système.
.PP
.BR shmdt "\ :"
.TP
.BR EINVAL .
Pas de segment attaché à l'adresse
.IR shmaddr.
.SH NOTES
Utiliser
.B shmat
avec
.I shmaddr
éggale à
.B NULL
est la manière conseillée, portable, d'attacher un segment de mémoire partagée.
Soyez conscients que le segment attaché de cette manière peut l'être à
des adresses différentes dans les différents processus.
Ainsi, tout pointeur contenu dans la mémoire partagée doit être relatif
(typiquement par rapport au début du segment) et pas
absolu.
.LP
Les paramètres système suivants influent sur
.BR  shmat "\ :"
.TP
.B SHMLBA
Multiple pour l'adresse de début de segment.
Doit être aligné sur une frontière de page.
Pour l'implémentation actuelle,
.B SHMBLA
à la même valeur que
.BR PAGE_SIZE .
.PP
L'implémentation n'a pas de limite intrinsèque pour le nombre maximal de
segment de mémoire partagée par processus.
.RB ( SHMSEG ).
.SH CONFORMITÉ
SVr4, SVID. SVr4 mentionne une condition d'erreur supplémentaire EMFILE.
Dans SVID-v4 le type de l'argument \fIshmaddr\fP a été modifié de
.B "char\ *"
en
.BR "const void\ *" ,
et le type de retour de \fIshmat\fP() de
.B "char\ *"
en
.BR "void\ *" .
(Les bibliothèques Linux libc4 et libc5 avaient le prototype
.B "char\ *" ,
la GlibC 2 celui
.BR "void\ *" ).
.SH "VOIR AUSSI"
.BR brk (2),
.BR ipc (5),
.BR mmap (2),
.BR shmctl (2),
.BR shmget (2)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 16\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ shmop\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
