.\" Copyright (c) 2002 Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" added note on self-signalling, aeb, 2002-06-07
.\"
.\" Traduction Christophe Blaess <ccb@club-internet.fr>
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH SIGQUEUE 2 "7 juin 2002" LDP "Manuel du programmeur Linux"
.SH NOM
sigqueue \- Enregistrer un signal et des données pour un processus
.SH SYNOPSIS
.B #include <signal.h>
.sp
.BI "int sigqueue(pid_t " pid ", int " sig ", const union sigval " valeur ");
.SH DESCRIPTION
.BR sigqueue ()
envoie le signal
.I sig
au processus indiqué par
.IR pid .
Les permissions requises pour l'émission du signal sont les même que pour
.BR kill (2).
Comme avec
.BR kill (2),
le signal nul (0) peut servir à vérifier si un processus existe
avec un PID donné.
.PP
L'argument
.I valeur
sert à indiquer une donnée (soit un entier, soit un pointeur) qui accompagnera
le signal et se présente avec le type suivant\ :
.sp
.in +2n
.nf
union sigval {
    int   sival_int;
    void *sival_ptr;
};
.fi
.in -2n

Si le processus récepteur a installé un gestionnaire pour le signal avec l'option
.B SA_SIGINFO
lors du
.BR sigaction (2),
il pourra obtenir la donnée dans le champ
.I si_value
de la structure
.I siginfo_t
passée en second argument au gestionnaire.
De plus, le champ
.I si_code
de la structure contiendra
.BR SI_QUEUE .
.SH "VALEUR RENVOYÉE"
L'appel
.BR sigqueue ()
renvoie s'il réussit, indiquant que le signal a bien été
mis dans la file du processus récepteur.
Sinon il renvoie \-1 et
.I errno
contient le code de l'erreur.
.SH ERREURS
.TP
.B EAGAIN
La limite du nombre de signaux en file a été atteinte.
(Voir
.BR signal (7)
pour plus d'informations).
.TP
.B EINVAL
.I sig
est invalide.
.TP
.B ESRCH
Il n'y a pas de processus correspondant au
.IR pid .
.TP
.B EPERM
Le processus n'a pas la permission d'envoyer un signal
au processus visé.
(Voir
.BR kill (2)
pour plus d'informations).
.SH NOTES
Si l'appel consiste à envoyer un signal au processus qui l'a invoqué,
et si le signal n'est pas bloqué par le thread appelant, et si aucun autre
thread ne peut traiter le signal (soit en l'ayant
débloqué, ou en faisant une attente avec
.BR sigwait (3)),
alors au moins quelques signaux seront délivrés au thread appelant avant
que la fonction ne revienne.
.SH "CONFORMITÉ"
POSIX 1003.1-2001
.SH "VOIR AUSSI"
.BR kill (2),
.BR sigaction (2),
.BR signal (2),
.BR sigwait (3),
.BR signal (7)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 18\ juillet\ 2003
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ sigqueue\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
