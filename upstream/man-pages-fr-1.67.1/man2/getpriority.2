.\" Copyright (c) 1980, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpriority.2	6.9 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 16:33:19 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Jul  1 21:59:57 1996 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Wed Nov  6 03:55:47 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 21 Oct 01, Michael Kerrisk, <mtk16@ext.canterbury.ac.nz>
.\"    Corrected statement under EPERM to clarify privileges required
.\" Modified, 21 Jun 02, Michael Kerrisk, <mtk16@ext.canterbury.ac.nz>
.\"	Clarified meaning of 0 value for 'who' argument
.\"
.\" Traduction  11/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" Màj 08/04/1997
.\" Màj 20/05/2001 - LDP-man-pages-1.36
.\" Màj 16/01/2002 LDP 1.47
.\" Màj 18/07/2003 LDP 1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH GETPRIORITY 2 "21 juin 2002" LDP "Manuel du programmeur Linux"
.SH NOM
getpriority, setpriority \- Lire/écrire la priorité d'ordonnancement du processus.
.SH SYNOPSIS
.B #include <sys/time.h>
.br
.B #include <sys/resource.h>
.sp
.BI "int getpriority(int " which ", int " who );
.br
.BI "int setpriority(int " which ", int " who ", int " prio );
.SH DESCRIPTION
La priorité d'ordonnancement du processus, du groupe de processus ou
de l'utilisateur, comme précisé dans
.I which
et
.I who
est lue avec
.B getpriority
et fixée avec
.B setpriority.

.I Which
doit être l'un des éléments
.BR PRIO_PROCESS,
.BR PRIO_PGRP,
ou
.BR PRIO_USER,
et
.I who
est interprété en fonction de
.I which
(un ID de processus pour
.B PRIO_PROCESS,
un ID de groupe de processus
pour
.B PRIO_PGRP,
et un ID d'utilisateur pour
.BR PRIO_USER).
Une valeur nulle pour
.I who
indique (respectivement) le processus appelant, le groupe de processus de
l'appelant ou l'UID réel du processus appelant.
.I Prio
est une valeur dans l'intervalle \-20 à 20 (voir les Notes plus bas).
La priorité par défaut est 0, les priorités les plus faibles indiquant
un ordonnancement le plus favorable.

La fonction
.B getpriority
renvoie la plus haute priorité (la plus basse valeur numérique)
dont a bénéficié l'un des processus indiqué. La fonction
.B setpriority
fixe la priorité des processus indiqués à la valeur fournie.
Seul le super-utilisateur peut diminuer la valeur numérique de la priorité.
.SH "VALEUR RENVOYÉE"
Comme
.B getpriority
peut tout à fait renvoyer la valeur \-1, il faut
effacer la variable externe
.I errno
avant l'appel afin de vérifier
si une valeur \-1 indique une
erreur ou une priorité légitime.
L'appel
.B setpriority
renvoie 0 s'il réussit, ou \-1 s'il échoue et remplit
.IR errno .
.SH ERREURS
.TP
.B ESRCH
Aucun processus ne correspond aux valeurs de
.I which
et
.I who
indiquées.
.TP
.B EINVAL
.I Which
n'était ni
.BR PRIO_PROCESS,
ni
.BR PRIO_PGRP,
ni
.BR PRIO_USER.
.PP
De plus
.B setpriority
peut échouer pour les erreurs suivantes\ :
.TP
.B EPERM
Un processus correspond bien aux valeurs indiquées, mais ni l'UID réel,
ni l'UID effectif de l'appelant ne lui correspondent.
.TP
.B EACCES
Tentative de favoriser un processus sans être super-utilisateur.
.SH NOTES
Les détails concernant la condition d'erreur EPERM dépendent du système.
La description ci-dessus concerne ce que dit SUSv3, et qui semble être suivi
par tous les systèmes de type SysV.
Linux demande que l'UID réel ou effectif de l'appelant correspondent à
l'UID réel du processus \fIwho\fP (et non pas à son UID effectif).
Tous les systèmes de type BSD (SunOS 4.1.3, Ultrix 4.2
BSD 4.3, FreeBSD 4.3, OpenBSD-2.5...) demandent que l'UID
effectif de l'appelant corresponde à l'UID réel
ou effectif du processus \fIwho\fP.
.LP
Le véritable intervalle des priorités varie suivant les versions du noyau.
Sur les systèmes Linux antérieure au 1.3.36 l'intervalle s'étendait de
\-infini à 15. Depuis le 1.3.43 il correspond à \-20..19, et l'appel-système
getpriority renvoie 40..1 pour ces valeurs (puisque les nombres négatifs
sont des codes d'erreur).
La routine de bibliothèque convertit N en 20-N.
.LP
L'inclusion
.I <sys/time.h>
n'est plus obligatoire, mais améliore la portabilité.
(En fait,
.I <sys/resource.h>
définit la structure
.I rusage
qui contient des champs de type
.I struct timeval
défini
.IR <sys/time.h> ).
.SH CONFORMITÉ
SVr4, BSD 4.4 (Cette fonction est apparue dans BSD 4.2).
.SH "VOIR AUSSI"
.BR nice (1),
.BR fork (2),
.BR renice (8)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 11\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ getpriority\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
