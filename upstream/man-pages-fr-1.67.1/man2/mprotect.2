.\" -*- nroff -*-
.\"
.\" Copyright (C) 1995 Michael Shields <shields@tembel.org>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and author of this work.
.\"
.\" Modified 1996-10-22 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1997-05-31 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2003-08-24 by Andries Brouwer <aeb@cwi.nl>
.\"
.\" Traduction  12/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" Màj 03/06/1997
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 27/06/2005 LDP-1.60
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH MPROTECT 2 "24 août 2003" "Linux 2.4" "Manuel du programmeur Linux"
.SH NOM
mprotect \- Contrôler les autorisations d'accès à une partie de la mémoire.
.SH SYNOPSIS
.nf
.B #include <sys/mman.h>
.sp
\fBint mprotect(const void *\fIaddr\fB, size_t *\fIlen\fB, int \fIprot\fB);
.fi
.SH DESCRIPTION
La fonction
.B mprotect
spécifie la protection souhaitée pour la (les) page(s) contenant tout ou une
partie de l'intervalle [\fIaddr\fP,\fIaddr\fP+\fIlen\fP-1].
Si un accès interdit se produit, le programme reçoit un signal
.BR SIGSEGV.
.PP
.I prot
est un OU binaire «\ |\ » entre les valeurs suivantes\ :
.TP 1.1i
.B PROT_NONE
On ne peut pas accéder du tout à la zone de mémoire.
.TP
.B PROT_READ
On peut lire la zone de mémoire.
.TP
.B PROT_WRITE
On peut écrire dans la zone de mémoire.
.TP
.B PROT_EXEC
La zone de mémoire peut contenir du code exécutable.
.PP
La nouvelle protection remplace toute autre protection précédente.
Par exemple, si la mémoire a été marquée précédemment \fBPROT_READ\fR,
et si l'on appelle \fBmprotect\fR avec \fBPROT_WRITE\fR, la zone
concernée ne sera plus lisible.
.SH "VALEUR RENVOYÉE"
.B mprotect
renvoie 0 s'il réussit, ou \-1 s'il échoue, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EINVAL
\fIaddr\fR n'est pas un pointeur valide, ou ce n'est pas un multiple de
PAGESIZE.
.TP
.B EFAULT
La mémoire n'est pas accessible.
.TP
.B EACCES
L'accès spécifié n'est pas possible sur ce type de mémoire. Ceci
se produit par exemple si vous utilisez
.BR mmap (2)
pour représenter un fichier en lecture-seule en mémoire, et
si vous demandez de marquer cette zone avec
.BR PROT_WRITE.
.TP
.B ENOMEM
Pas assez de mémoire pour le noyau.
.SH "EXEMPLE D'UTILISATION"
.nf
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/mman.h>

#include <limits.h> /* pour avoir PAGESIZE */
#ifndef PAGESIZE
  #define PAGESIZE 4096
#endif

int
main(void)
{
    char *p;
    char c;

    /* Allocation d'un tampon, protection
       par défaut PROT_READ|PROT_WRITE. */
    p = malloc(1024 + PAGESIZE - 1);
    if (!p) {
        perror("Impossible d'allouer suffisamment de mémoire");
        exit(errno);
    }

    /*
     * Aligner p sur un multiple de PAGESIZE (que l'on suppose être
     * une puissance de 2)
     */
    p = (char *) (((int) p + PAGESIZE-1) & ~(PAGESIZE-1));

    c = p[666];         /* lecture ok */
    p[666] = 42;        /* ecriture ok */

    /* Buffer marqué en lecture-seule */
    if (mprotect(p, 1024, PROT_READ)) {
        perror("Impossible d'utiliser mprotect");
        exit(errno);
    }

    c = p[666];         /* lecture ok */
    p[666] = 42;        /* écriture, fin du programme avec SIGSEGV */

    exit(0);
}
.fi
.SH CONFORMITÉ
SVr4, POSIX.1b (anciennement POSIX.4).  SVr4 définit un code d'erreur
EAGAIN supplémentaire. Les conditions d'erreur SVr4 ne correspondent pas
tout à fait à celles de Linux.
POSIX.1B précise que
.B mprotect
ne peut être utilisé que sur des zones de mémoire obtenues avec
.BR mmap (2).
.SH "VOIR AUSSI"
.BR mmap (2)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 12\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ mprotect\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
