.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\" Parts Copyright (c) 1995 Nicolai Langfeldt (janl@ifi.uio.no), 1/1/95
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 10:54:27 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Thu May 18 11:00:31 1995 by Rik Faith (faith@cs.unc.edu)
.\"          to add comments suggested by Todd Larason (jtl@molehill.org)
.\" Modified Fri Jan 31 17:43:02 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Thu Jan 9 10:20:31 1995 by Martin Schulze (joey@infodrom.north.de)
.\"          to add more error codes suggested by Richard Kettlewell (richard@greenend.org.uk)
.\" Modified Wed May 13 18:46:44 1998 by Michael Haardt <michael@cantor.informatik.rwth-aachen.de>
.\" Modified 990706 by aeb; much of the info under `Other Systems' was
.\"          taken from a net post by Albert Cahalan.
.\" Modified 000107 by aeb: added <sys/types.h> include.
.\"
.\" Traduction 13/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\" Màj 15/04/1997
.\" Màj 11/12/1997 LDP-1.18
.\" Màj 12/12/1998 LDP-1.21
.\" Màj 09/04/1999 LDP-1.22
.\" Màj 18/05/1999 LDP-1.23
.\" Màj 26/06/2000 LDP-1.30
.\" Màj 30/08/2000 LDP-1.31
.\" Màj 04/06/2001 LDP-1.36
.\" Màj 06/06/2001 LDP-1.37
.\" Màj 16/01/2002 LDP-1.38
.\" Màj 18/07/2003 LDP-1.56
.\" Màj 20/07/2005 LDP-1.64
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH STAT 2 "18 juillet 2003" LDP "Manuel du programmeur Linux"
.SH NOM
stat, fstat, lstat \- Obtenir l'état d'un fichier (file status).
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/stat.h>
.br
.B #include <unistd.h>
.sp
.BI "int stat(const char *" file_name ", struct stat *" buf );
.br
.BI "int fstat(int " filedes ", struct stat *" buf );
.br
.BI "int lstat(const char *" file_name ", struct stat *" buf );
.SH DESCRIPTION
.PP
Ces fonctions renvoient des informations à propos du fichier
indiqué. Vous n'avez besoin d'aucun droit d'accès au fichier
pour obtenir les informations, mais vous devez avoir le droit
de parcours de tous les répertoires mentionnés dans le
chemin menant au fichier.
.PP
.B stat
récupère l'état du fichier pointé par
.I file_name
et remplit le tampon
.IR buf .

.B lstat
est identique à
.BR stat ,
sauf que dans le cas d'un lien symbolique, il donne l'état du lien lui-même
plutôt que celui du fichier visé.

.B fstat
est identique à
.BR stat ,
sauf que le fichier ouvert est pointé
par le descripteur
.IR filedes ,
obtenu avec
.BR open (2).

.PP
Les trois fonctions retournent une structure
.I stat
contenant les champs suivants\ :
.PP
.RS
.nf
struct stat {
    dev_t         st_dev;      /* Périphérique                  */
    ino_t         st_ino;      /* Numéro i\-noeud                */
    mode_t        st_mode;     /* Protection                    */
    nlink_t       st_nlink;    /* Nb liens matériels            */
    uid_t         st_uid;      /* UID propriétaire              */
    gid_t         st_gid;      /* GID propriétaire              */
    dev_t         st_rdev;     /* Type périphérique             */
    off_t         st_size;     /* Taille totale en octets       */
    blksize_t     st_blksize;  /* Taille de bloc pour E/S       */
    blkcnt_t      st_blocks;   /* Nombre de blocs alloués       */
    time_t        st_atime;    /* Heure dernier accès           */
    time_t        st_mtime;    /* Heure dernière modification   */
    time_t        st_ctime;    /* Heure dernier changement état */
};
.fi
.RE
.PP
Le champ
.I st_size
indique la taille du fichier (s'il s'agit d'un fichier régulier ou d'un lien
symbolique) en octets. La taille d'un lien symbolique est la longueur de la
chaîne représentant le chemin d'accès qu'il vise, sans le caractère NUL final.

La valeur
.I st_blocks
donne la taille du fichier en blocs de 512 octets
(cette valeur peut être plus petite que
.IR st_size /512
par exemple si le fichier contient des trous).
La valeur
.I st_blksize
indique la taille de bloc «\ préférée\ » pour les entrées-sorties du système
de fichiers (l'écriture dans un fichier par petits morceaux peut induire de nombreuses
étapes lecture-modification-écriture peu efficaces).
.PP
Les systèmes de fichiers de Linux n'implémentent pas tous les champs liés
à la date. Certains systèmes de fichiers autorisent le montage de telle
manière que les accès ne modifient pas le champ
.I st_atime
(voir l'option «\ noatime\ » de
.BR mount (8)).

Le champ
.I st_atime
est modifié par les accès au fichier, c'est-à-dire avec
.BR exec (2),
.BR mknod (2),
.BR pipe (2),
.BR utime (2)
et
.BR read (2)
(d'au moins un octet). D'autres routines, comme
.BR mmap (2),
peuvent ou non mettre à jour ce champ
.IR st_atime .

Le champ
.I st_mtime
est modifié par des changements sur le fichier lui-même, c'est-à-dire
.BR mknod (2),
.BR truncate (2),
.BR utime (2)
et
.BR write (2)
(d'au moins un octet).
D'autre part, le champ
.I st_mtime
d'un répertoire est modifié lors de la création ou la suppression de fichiers
en son sein.
Le champ
.I st_mtime
.IR n "'est
.I pas
mis à jour lors de modification de propriétaire, groupe, mode ou nombre de liens physiques.

Le champ
.I st_ctime
est modifié lors d'une écriture ou une modification de données
concernant l'i\-noeud (propriétaire, groupe, mode, etc...)
.PP
Les macros POSIX suivantes sont fournies pour vérifier le type de fichier\ :
.RS
.TP 1.2i
S_ISREG(m)
un fichier régulier\ ?
.TP
S_ISDIR(m)
un répertoire\ ?
.TP
S_ISCHR(m)
un péripherique en mode caractère\ ?
.TP
S_ISBLK(m)
un périphérique en mode bloc\ ?
.TP
S_ISFIFO(m)
une FIFO\ ?
.TP
S_ISLNK(m)
un lien symbolique\ ? (Pas dans POSIX.1-1996).
.TP
S_ISSOCK(m)
une socket\ ? (Pas dans POSIX.1-1996).
.RE
.PP
Les attributs suivants correspondent au champ
.IR st_mode\ :

.P
.TS
l l l.
S_IFMT	00170000	masque du type de fichier
S_IFSOCK	0140000	socket
S_IFLNK	0120000	lien symbolique
S_IFREG	0100000	fichier régulier
S_IFBLK	0060000	périphérique blocs
S_IFDIR	0040000	répertoire
S_IFCHR	0020000	périphérique caractères
S_IFIFO	0010000	fifo
S_ISUID	0004000	bit Set-UID
S_ISGID	0002000	bit Set-Gid
S_ISVTX	0001000	bit "sticky"
S_IRWXU	00700	lecture/écriture/exécution du propriétaire
S_IRUSR	00400	le propriétaire a le droit de lecture
S_IWUSR	00200	le propriétaire a le droit d'écriture
S_IXUSR	00100	le propriétaire a le droit d'exécution
S_IRWXG	00070	lecture/écriture/exécution du groupe
S_IRGRP	00040	le groupe a le droit de lecture
S_IWGRP	00020	le groupe a le droit d'écriture
S_IXGRP	00010	le groupe a le droit d'exécution
S_IRWXO	00007	lecture/écriture/exécution des autres
S_IROTH	00004	les autres ont le droit de lecture
S_IWOTH	00002	les autres ont le droit d'écriture
S_IXOTH	00001	les autres ont le droit d'exécution
.TE
.P
Le bit Set-GID (S_ISGID) a plusieurs utilisations particulières\ :
pour un répertoire, il indique que la sémantique BSD doit être appliquée
en son sein, c'est-à-dire que les fichiers qui y sont créés héritent leur
GID du répertoire et non pas du GID effectif du processus créateur, et les
sous-répertoires auront automatiquement le bit S_ISGID actif. Pour les fichiers
qui n'ont pas d'autorisation d'exécution pour le groupe (S_IXGRP non actif),
ce bit indique qu'un verrouillage strict est en vigueur sur ce fichier.
.P
Le bit «\ sticky\ » (S_ISVTX) sur un répertoire indique que les fichiers qui s'y
trouvent ne peuvent être renommés ou effacés que par leur propriétaire, par le
propriétaire du répertoire ou par root.
.SH "VALEUR RENVOYÉE"
Ces fonctions
retournent zéro si elles réussissent.
En cas d'echec, \-1 est renvoyé, et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EBADF
.I filedes
est un mauvais descripteur.
.TP
.B ENOENT
Un composant de
.I file_name
n'existe pas, ou il s'agit d'une chaîne vide.
.TP
.B ENOTDIR
Un composant du chemin d'accès n'est pas un répertoire.
.TP
.B ELOOP
Trop de liens symboliques rencontrés dans le chemin d'accès.
.TP
.B EFAULT
Un pointeur se trouve en dehors de l'espace d'adressage.
.TP
.B EACCES
Autorisation refusée.
.TP
.B ENOMEM
Pas assez de mémoire pour le noyau.
.TP
.B ENAMETOOLONG
Nom de fichier trop long.
.SH "CONFORMITÉ"
Les appels
.B stat
et
.B fstat
sont conformes aux versions SVr4, POSIX, X/OPEN, BSD 4.3. L'appel
.BR lstat
est conforme aux versions BSD 4.3 et SVr4.
SVr4 mentionne des conditions d'erreur supplémentaires EINTR, ENOLINK et
EOVERFLOW pour
.BR fstat.
Pour
.B stat
et
.B lstat
SVr4 indique les conditions supplémentaires EACCES, EINTR, EMULTIHOP, ENOLINK,
et EOVERLOW. L'utilisation des champs
.I st_blocks
et
.I st_blksize
risque d'être moins portable. Ils ont été introduits dans BSD,
et ne sont pas mentionnés dans POSIX. Leur interprétation change
suivant les systèmes, voire sur un même système s'il y a des montages NFS.
.LP
POSIX ne décrit pas les bits S_IFMT, S_IFSOCK, S_IFLNK, S_IFREG, S_IFBLK,
S_IFDIR, S_IFCHR, S_IFIFO, S_ISVTX, mais réclame d'utiliser les macros
S_ISDIR(), etc. Les macros S_ISLNK et S_ISSOCK ne se trouvent pas dans
POSIX.1-1996 mais seront présentes dans le prochain standard POSIX. La première
vient de SVID 4v2, la seconde de SUSv2.
.LP
Unix V7 (et les systèmes suivants) propose S_IREAD, S_IWRITE, S_IEXEC, là où POSIX
préfère leurs synonymes S_IRUSR, S_IWUSR, S_IXUSR.
.SH "AUTRES SYSTÈMES"
Voici quelques valeurs qui ont été (ou sont) utilisées sur d'autres systèmes
.P
.TS
l l l l l.
hex	nom	ls	octal	description
f000	S_IFMT		170000	Masque du type de fichier
0000			000000	SCO out-of-service inode, BSD unknown type
				SVID-v2 and XPG2 have both 0 and 0100000 for ordinary file
1000	S_IFIFO	p|	010000	fifo (tube nommé)
2000	S_IFCHR	c	020000	fichier spécial caractère (V7)
3000	S_IFMPC		030000	fichier spécial caractère multiplexé (V7)
4000	S_IFDIR	d/	040000	répertoire (V7)
5000	S_IFNAM		050000	fichier spécial nommé XENIX avec deux
				sous-types distingués par st_rdev valant 1 ou 2:
0001	S_INSEM	s	000001	sous-type sémaphore de IFNAM XENIX
0002	S_INSHD	m	000002	sous-type données partagées de IFNAM XENIX
6000	S_IFBLK	b	060000	fichier spécial bloc (V7)
7000	S_IFMPB		070000	fichier spécial bloc multiplexé (V7)
8000	S_IFREG	-	100000	fichier normal (V7)
9000	S_IFCMP		110000	compressé VxFS
9000	S_IFNWK	n	110000	fichier spécial réseau (HP-UX)
a000	S_IFLNK	l@	120000	lien symbolique (BSD)
b000	S_IFSHAD		130000	Fichier shadow Solaris pour l'ACL (invisible)
c000	S_IFSOCK	s=	140000	socket (BSD; aussi "S_IFSOC" sur VxFS)
d000	S_IFDOOR	D>	150000	Solaris door
e000	S_IFWHT	w%	160000	BSD whiteout (non utilisé pour les inoeuds)

0200	S_ISVTX		001000	«\ sticky bit\ »: garder en mémoire après exécution (V7)
				réservé (SVID-v2)
				non-répertoires\ : ne pas swapper le fichier (SunOS)
				répertoires\ : restrictions d'effacement (SVID-v4.2)
0400	S_ISGID		002000	Utiliser l'ID du groupe à l'exécution (V7)
				répertoires\ : sémantique BSD propageant le GID
0400	S_ENFMT		002000	Verrouillage strict Système V (partage S_ISGID)
0800	S_ISUID		004000	Utiliser l'ID utilisateur à l'exécution (V7)
0800	S_CD		004000	Fichier répertoire dépendant du contexte (HP-UX)
.TE
Une commande sticky est apparue dans la version 32V d'AT&T UNIX.
.SH "VOIR AUSSI"
.BR chmod (2),
.BR chown (2),
.BR readlink (2),
.BR utime (2)
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 15\ octobre\ 1996
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 2\ stat\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
