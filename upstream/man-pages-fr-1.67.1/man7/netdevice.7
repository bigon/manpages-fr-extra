.\" Don't change the first line, it tells man that tbl is needed.
.\" This man page is Copyright (C) 1999 Andi Kleen <ak@muc.de>.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" $Id: netdevice.7,v 1.10 2000/08/17 10:09:54 ak Exp $
.\"
.\" Traduction Christophe Blaess, <ccb@club-internet.fr>
.\" Màj 25/07/2003 LDP-1.56
.\" Màj 01/05/2006 LDP-1.67.1
.\"
.TH NETDEVICE 7 "2 mai 1999" LDP "Manuel de l'administrateur Linux"
.SH NOM
netdevice \- Accès bas-niveau aux périphériques réseau sous Linux.
.SH SYNOPSIS
.B "#include <sys/ioctl.h>"
.B "#include <net/if.h>"

.SH DESCRIPTION
Cette page de manuel décrit l'interface des socket permettant de configurer
les périphériques réseau.

Linux support des ioctls standard pour configurer les périphériques réseau. Il servent
sur n'importe quel descripteur de socket, quelqu'en soit la famille ou le type.
Ils utilisent une
structure
.BR ifreq " :"

.nf
.ta 4 12 20
struct ifreq {
	char	ifr_name[IFNAMSIZ];	/* nom interface */
	union {
		struct sockaddr	ifr_addr;
		struct sockaddr	ifr_dstaddr;
		struct sockaddr	ifr_broadaddr;
		struct sockaddr	ifr_netmask;
		struct sockaddr	ifr_hwaddr;
		short	ifr_flags;
		int	ifr_ifindex;
		int	ifr_metric;
		int	ifr_mtu;
		struct ifmap	ifr_map;
		char	ifr_slave[IFNAMSIZ];
		char	ifr_newname[IFNAMSIZ];
		char *	ifr_data;
	};
};

struct ifconf {
  	int ifc_len;		/* taille tampon */
	union {
		char *	ifc_buf; /* adresse tampon */
		struct ifreq *ifc_req; /* table de structures */
	};
};
.ta
.fi

Normalement, l'utilisateur indique le périphérique concerné en remplissant
.B ifr_name
avec le nom de l'interface. Tous les autres membres de la structure peuvent
partager la mémoire.

.SH IOCTLS
Si un ioctl est indiqué comme privilégié, alors il nécessite un UID effectif
nul ou la capacité.
.B CAP_NET_ADMIN
Sinon, il renverra
l'erreur
.BR EPERM .

.TP
.B SIOCGIFNAME
En utilisant
.BR ifr_ifindex ,
renvoie le nom de l'interface dans
.BR ifr_name .
C'est le seul ioctl qui renvoie un résultant dans
.BR ifr_name .

.TP
.B SIOCGIFINDEX
Retrouve le numéro d'interface et le place dans
.BR ifr_ifindex .

.TP
.BR SIOCGIFFLAGS ", " SIOCSIFFLAGS
Lire ou écrire les attributs actifs du périphérique.
.B ifr_flags
est un mot contenant un masque de bits combinant les valeurs suivantes\ :

.TS
tab(:);
c s
l l.
Device flags
IFF_UP:Interface fonctionne.
IFF_BROADCAST:Adresse de broadcast valide.
IFF_DEBUG:Attribut interne de débogage.
IFF_LOOPBACK:Interface de type loopback.
IFF_POINTOPOINT:Interface de type point-à-point.
IFF_RUNNING:Resources allouées.
IFF_NOARP:Pas de protocole Arp, adresse de destination L2 absente.
IFF_PROMISC:Interface en mode promiscuous.
IFF_NOTRAILERS:N'utilise pas les postambules.
IFF_ALLMULTI:Accepte tous les paquets multicast.
IFF_MASTER:Maître d'un système de répartition de charge.
IFF_SLAVE:Esclave d'un système de répartition de charge.
IFF_MULTICAST:Support multicast.
IFF_PORTSEL:Capable de sélectionner le média via ifmap.
IFF_AUTOMEDIA:Sélection automatique du média.
IFF_DYNAMIC:T{
Adresse perdue quand l'interfac est arrêtée.
T}
.TE

Écrire les attributs est une opération privilégiée, mais tout
processus peut les lire.
.TP
.BR SIOCGIFMETRIC ", " SIOCSIFMETRIC
Lire ou écrire la métrique du périphérique en utilisant
.BR ifr_metric .
Ceci n'est pas encore implémenté, il renvoie dans
.B ifr_metric
la valeur 0 si on essaye de lire, et renvoie l'erreur
.B EOPNOTSUPP
si on essaye d'écrire.
.TP
.BR SIOCGIFMTU ", " SIOCSIFMTU
Lire ou écrire le MTU (Maximum Transfer Unit) du périphérique avec
.BR ifr_mtu .
Fixer le MTU est une opération privilégiée. Fixer un MTU trop petit
peut faire planter le noyau.
.TP
.BR SIOCGIFHWADDR ", " SIOCSIFHWADDR
Lire ou écrire l'adresse matérielle du périphérique en utilisant
.BR ifr_hwaddr .
Cette adresse matérielle est indiquée dans une structure
.IR sockaddr .
.I sa_family
contien le type de périphérique ARPHRD_*,
.I sa_data
est l'adresse matérielle L2 commençant par l'octet 0.
Écrire l'adresse matérielle est une opération privilégiée.
.TP
.B SIOCSIFHWBROADCAST
Fixer l'adresse de broadcast du périphérique à partir de
.BR ifr_hwaddr .
C'est une opération privilégiée.
.TP
.BR SIOCGIFMAP ", " SIOCSIFMAP
Lire ou écrire les paramètres matériels de l'interface en utilisant
.BR ifr_map .
L'écriture des paramètres est une opération privilégiée.

.nf
.ta 4 20 42
struct ifmap
{
	unsigned long	mem_start;
	unsigned long	mem_end;
	unsigned short	base_addr;
	unsigned char	irq;
	unsigned char	dma;
	unsigned char	port;
};
.ta
.fi

L'interprétation de la structure ifmap dépend du pilote de périphérique
et de l'architecture.
.TP
.BR SIOCADDMULTI ", " SIOCDELMULTI
Ajouter ou supprimer une adresse des filtres multicast du niveau liaison
du périphérique en utilisant
.BR ifr_hwaddr .
Ce sont des opérations privilégiées.
Voir aussi
.BR packet (7)
pour une autre possibilité.
.TP
.BR SIOCGIFTXQLEN ", " SIOCSIFTXQLEN
Lire ou écrire la taille de la file d'émission du périphérique avec
.BR ifr_qlen .
L'Écriture de la taille de la file est une opértation privilégiée.
.TP
.B SIOCSIFNAME
Changer le nom de l'interface indiquée dans
.BR ifr_name
pour
.BR ifr_newname .
C'est une opération privilégiée. Elle n'est possible que si l'interface
n'est pas en fonctionnement.
.TP
.B SIOCGIFCONF
Renvoie une liste des adresses (couche de transport) des interfaces. Ceci
ne marche actuellement qu'avec les adresses AF_INET (IPv4) pour des raisons
de compatibilité. L'utilisateur passe une structure
.B ifconf
en argument à l'ioctl. Elle contient un pointeur sur une table de structures
.I ifreq
dans son membre
.B ifc_req
et la longueur en octets dans
.B ifc_len.
Le noyau remplit les ifreqs avec toutes les adresses L3 des interfaces
en fonctionnement\ :
.I ifr_name
contient le nom de l'interfacez (eth0:1 etc.), et
.I ifr_addr
l'adresse.
Le noyau renvoie la longueur réelle dans
.IR ifc_len .
Si
.I ifc_len
est égal à la longueur originale du tampon, on a probablement atteint la
limite, et il est conseillé de recommencer avec un tampon plus grand.
S'il réussit, l'ioctl renvoie 0, sinon il renvoie \-1.
Atteindre la limite du tampon n'est pas considéré comme une erreur.
\" XXX Slaving isn't supported in 2.2
.\" .TP
.\" .BR SIOCGIFSLAVE ", " SIOCSIFSLAVE
.\" Get or set the slave device using
.\" .BR ifr_slave .
.\" Setting the slave device is a privileged operation.
.\" .PP
.\" XXX add amateur radio stuff.
.PP
La plupart des protocoles supportent leurs propres ioctls pour configurer
les options d'interface spécifiques aux protocoles. Voir les pages de manuel
correspondante. Pour configurer les adresses IP, voir
.BR ip (7).
.PP
De plus, certains périphériques supportent des ioctls privés, non décrits ici.
.SH NOTES
Strictement parlant,
.B SIOCGIFCONF
est spécifique à IP et devrait se trouver dans
.BR ip (7).
.LP
Les noms des interfaces sans adresses, ou celles qui n'ont pas l'attribut
.B IFF_RUNNING
peuvent être trouvés dans
.IR /proc/net/dev .
.LP
Les adresses IPv6 locales se trouvent dans /proc/net ou grâce à
.BR rtnetlink (7).
.SH BOGUES
Dans la GlibC 2.1 il manque la maco
.I ifr_newname
dans net/if.h. Ajoutez les lignes suivantes dans votre programme\ :
.sp
.RS
.nf
.ta 4 20 42
#ifndef ifr_newname
#define ifr_newname     ifr_ifru.ifru_slave
#endif
.ta
.fi
.RE
.SH "VOIR AUSSI"
.BR ip (7),
.BR proc (7),
.BR rtnetlink (7)
.SH TRADUCTION
.SH TRADUCTION
.PP
Ce document est une traduction réalisée par Christophe Blaess
<http://www.blaess.fr/christophe/> le 25\ juillet\ 2003
et révisée le 2\ mai\ 2006.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité. La version anglaise la plus à jour de ce document est
toujours consultable via la commande\ : «\ \fBLANG=en\ man\ 7\ netdevice\fR\ ».
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas, toute
erreur dans cette page de manuel.
