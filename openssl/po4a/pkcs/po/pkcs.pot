# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2015-05-05 17:54-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: C/apps/crl.pod:3 C/apps/crl2pkcs7.pod:3 C/apps/pkcs12.pod:4 C/apps/pkcs7.pod:3 C/apps/pkcs8.pod:3 C/crypto/PKCS12_create.pod:3 C/crypto/PKCS12_parse.pod:3 C/crypto/PKCS7_decrypt.pod:3 C/crypto/PKCS7_encrypt.pod:3 C/crypto/PKCS7_sign.pod:3 C/crypto/PKCS7_sign_add_signer.pod:3 C/crypto/PKCS7_verify.pod:3
msgid "NAME"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:5
msgid "crl - CRL utility"
msgstr ""

#. type: =head1
#: C/apps/crl.pod:7 C/apps/crl2pkcs7.pod:7 C/apps/pkcs12.pod:8 C/apps/pkcs7.pod:7 C/apps/pkcs8.pod:7 C/crypto/PKCS12_create.pod:7 C/crypto/PKCS12_parse.pod:7 C/crypto/PKCS7_decrypt.pod:7 C/crypto/PKCS7_encrypt.pod:7 C/crypto/PKCS7_sign.pod:7 C/crypto/PKCS7_sign_add_signer.pod:7 C/crypto/PKCS7_verify.pod:7
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:9
msgid ""
"B<openssl> B<crl> [B<-inform PEM|DER>] [B<-outform PEM|DER>] [B<-text>] "
"[B<-in filename>] [B<-out filename>] [B<-nameopt option>] [B<-noout>] "
"[B<-hash>] [B<-issuer>] [B<-lastupdate>] [B<-nextupdate>] [B<-CAfile file>] "
"[B<-CApath dir>]"
msgstr ""

#. type: =head1
#: C/apps/crl.pod:24 C/apps/crl2pkcs7.pod:17 C/apps/pkcs12.pod:44 C/apps/pkcs7.pod:19 C/apps/pkcs8.pod:27 C/crypto/PKCS12_create.pod:14 C/crypto/PKCS12_parse.pod:13 C/crypto/PKCS7_decrypt.pod:13 C/crypto/PKCS7_encrypt.pod:13 C/crypto/PKCS7_sign.pod:13 C/crypto/PKCS7_sign_add_signer.pod:14 C/crypto/PKCS7_verify.pod:15
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:26
msgid "The B<crl> command processes CRL files in DER or PEM format."
msgstr ""

#. type: =head1
#: C/apps/crl.pod:28 C/apps/crl2pkcs7.pod:23 C/apps/pkcs12.pod:50 C/apps/pkcs7.pod:23 C/apps/pkcs8.pod:33
msgid "COMMAND OPTIONS"
msgstr ""

#. type: =item
#: C/apps/crl.pod:32 C/apps/crl2pkcs7.pod:27 C/apps/pkcs7.pod:27 C/apps/pkcs8.pod:44
msgid "B<-inform DER|PEM>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:34
msgid ""
"This specifies the input format. B<DER> format is DER encoded CRL "
"structure. B<PEM> (the default) is a base64 encoded version of the DER form "
"with header and footer lines."
msgstr ""

#. type: =item
#: C/apps/crl.pod:38 C/apps/crl2pkcs7.pod:33 C/apps/pkcs7.pod:33 C/apps/pkcs8.pod:51
msgid "B<-outform DER|PEM>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:40 C/apps/pkcs7.pod:35 C/apps/pkcs8.pod:53
msgid ""
"This specifies the output format, the options have the same meaning as the "
"B<-inform> option."
msgstr ""

#. type: =item
#: C/apps/crl.pod:43 C/apps/crl2pkcs7.pod:39 C/apps/pkcs12.pod:60 C/apps/pkcs12.pod:163 C/apps/pkcs7.pod:38 C/apps/pkcs8.pod:56
msgid "B<-in filename>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:45 C/apps/pkcs7.pod:40
msgid ""
"This specifies the input filename to read from or standard input if this "
"option is not specified."
msgstr ""

#. type: =item
#: C/apps/crl.pod:48 C/apps/crl2pkcs7.pod:44 C/apps/pkcs12.pod:65 C/apps/pkcs12.pod:158 C/apps/pkcs7.pod:43 C/apps/pkcs8.pod:67
msgid "B<-out filename>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:50 C/apps/pkcs7.pod:45
msgid "specifies the output filename to write to or standard output by default."
msgstr ""

#. type: =item
#: C/apps/crl.pod:53 C/apps/pkcs7.pod:53
msgid "B<-text>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:55
msgid "print out the CRL in text form."
msgstr ""

#. type: =item
#: C/apps/crl.pod:57
msgid "B<-nameopt option>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:59
msgid ""
"option which determines how the subject or issuer names are displayed. See "
"the description of B<-nameopt> in L<x509(1)|x509(1)>."
msgstr ""

#. type: =item
#: C/apps/crl.pod:62 C/apps/pkcs12.pod:87 C/apps/pkcs7.pod:58
msgid "B<-noout>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:64
msgid "don't output the encoded version of the CRL."
msgstr ""

#. type: =item
#: C/apps/crl.pod:66
msgid "B<-hash>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:68
msgid ""
"output a hash of the issuer name. This can be use to lookup CRLs in a "
"directory by issuer name."
msgstr ""

#. type: =item
#: C/apps/crl.pod:71
msgid "B<-hash_old>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:73
msgid ""
"outputs the \"hash\" of the CRL issuer name using the older algorithm as "
"used by OpenSSL versions before 1.0.0."
msgstr ""

#. type: =item
#: C/apps/crl.pod:76
msgid "B<-issuer>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:78
msgid "output the issuer name."
msgstr ""

#. type: =item
#: C/apps/crl.pod:80
msgid "B<-lastupdate>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:82
msgid "output the lastUpdate field."
msgstr ""

#. type: =item
#: C/apps/crl.pod:84
msgid "B<-nextupdate>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:86
msgid "output the nextUpdate field."
msgstr ""

#. type: =item
#: C/apps/crl.pod:88 C/apps/pkcs12.pod:274
msgid "B<-CAfile file>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:90
msgid ""
"verify the signature on a CRL by looking up the issuing certificate in "
"B<file>"
msgstr ""

#. type: =item
#: C/apps/crl.pod:93 C/apps/pkcs12.pod:278
msgid "B<-CApath dir>"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:95
msgid ""
"verify the signature on a CRL by looking up the issuing certificate in "
"B<dir>. This directory must be a standard certificate directory: that is a "
"hash of each subject name (using B<x509 -hash>) should be linked to each "
"certificate."
msgstr ""

#. type: =head1
#: C/apps/crl.pod:102 C/apps/crl2pkcs7.pod:75 C/apps/pkcs12.pod:290 C/apps/pkcs7.pod:82 C/apps/pkcs8.pod:142 C/crypto/PKCS12_create.pod:28 C/crypto/PKCS12_parse.pod:21 C/crypto/PKCS7_decrypt.pod:20 C/crypto/PKCS7_encrypt.pod:19 C/crypto/PKCS7_encrypt.pod:54 C/crypto/PKCS7_sign.pod:24 C/crypto/PKCS7_sign.pod:69 C/crypto/PKCS7_sign_add_signer.pod:32 C/crypto/PKCS7_verify.pod:73
msgid "NOTES"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:104
msgid "The PEM CRL format uses the header and footer lines:"
msgstr ""

#. type: verbatim
#: C/apps/crl.pod:106
#, no-wrap
msgid ""
" -----BEGIN X509 CRL-----\n"
" -----END X509 CRL-----\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/crl.pod:109 C/apps/crl2pkcs7.pod:63 C/apps/pkcs12.pod:314 C/apps/pkcs7.pod:72 C/apps/pkcs8.pod:198
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:111
msgid "Convert a CRL file from PEM to DER:"
msgstr ""

#. type: verbatim
#: C/apps/crl.pod:113
#, no-wrap
msgid ""
" openssl crl -in crl.pem -outform DER -out crl.der\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:115
msgid "Output the text form of a DER encoded certificate:"
msgstr ""

#. type: verbatim
#: C/apps/crl.pod:117
#, no-wrap
msgid ""
" openssl crl -in crl.der -text -noout\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/crl.pod:119 C/apps/pkcs12.pod:341 C/apps/pkcs8.pod:241 C/crypto/PKCS12_parse.pod:38 C/crypto/PKCS7_decrypt.pod:39 C/crypto/PKCS7_sign.pod:95 C/crypto/PKCS7_verify.pod:101
msgid "BUGS"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:121
msgid ""
"Ideally it should be possible to create a CRL using appropriate options and "
"files too."
msgstr ""

#. type: =head1
#: C/apps/crl.pod:124 C/apps/crl2pkcs7.pod:87 C/apps/pkcs12.pod:365 C/apps/pkcs7.pod:101 C/apps/pkcs8.pod:250 C/crypto/PKCS12_create.pod:67 C/crypto/PKCS12_parse.pod:49 C/crypto/PKCS7_decrypt.pod:47 C/crypto/PKCS7_encrypt.pod:71 C/crypto/PKCS7_sign.pod:104 C/crypto/PKCS7_sign_add_signer.pod:78 C/crypto/PKCS7_verify.pod:110
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: C/apps/crl.pod:126
msgid "L<crl2pkcs7(1)|crl2pkcs7(1)>, L<ca(1)|ca(1)>, L<x509(1)|x509(1)>"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:5
msgid "crl2pkcs7 - Create a PKCS#7 structure from a CRL and certificates."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:9
msgid ""
"B<openssl> B<crl2pkcs7> [B<-inform PEM|DER>] [B<-outform PEM|DER>] [B<-in "
"filename>] [B<-out filename>] [B<-certfile filename>] [B<-nocrl>]"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:19
msgid ""
"The B<crl2pkcs7> command takes an optional CRL and one or more certificates "
"and converts them into a PKCS#7 degenerate \"certificates only\" structure."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:29
msgid ""
"This specifies the CRL input format. B<DER> format is DER encoded CRL "
"structure.B<PEM> (the default) is a base64 encoded version of the DER form "
"with header and footer lines."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:35
msgid ""
"This specifies the PKCS#7 structure output format. B<DER> format is DER "
"encoded PKCS#7 structure.B<PEM> (the default) is a base64 encoded version of "
"the DER form with header and footer lines."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:41
msgid ""
"This specifies the input filename to read a CRL from or standard input if "
"this option is not specified."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:46
msgid ""
"specifies the output filename to write the PKCS#7 structure to or standard "
"output by default."
msgstr ""

#. type: =item
#: C/apps/crl2pkcs7.pod:49 C/apps/pkcs12.pod:180
msgid "B<-certfile filename>"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:51
msgid ""
"specifies a filename containing one or more certificates in B<PEM> format.  "
"All certificates in the file will be added to the PKCS#7 structure. This "
"option can be used more than once to read certificates form multiple files."
msgstr ""

#. type: =item
#: C/apps/crl2pkcs7.pod:56
msgid "B<-nocrl>"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:58
msgid ""
"normally a CRL is included in the output file. With this option no CRL is "
"included in the output file and a CRL is not read from the input file."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:65
msgid "Create a PKCS#7 structure from a certificate and CRL:"
msgstr ""

#. type: verbatim
#: C/apps/crl2pkcs7.pod:67
#, no-wrap
msgid ""
" openssl crl2pkcs7 -in crl.pem -certfile cert.pem -out p7.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:69
msgid ""
"Creates a PKCS#7 structure in DER format with no CRL from several different "
"certificates:"
msgstr ""

#. type: verbatim
#: C/apps/crl2pkcs7.pod:72
#, no-wrap
msgid ""
" openssl crl2pkcs7 -nocrl -certfile newcert.pem \n"
"\t-certfile demoCA/cacert.pem -outform DER -out p7.der\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:77
msgid ""
"The output file is a PKCS#7 signed data structure containing no signers and "
"just certificates and an optional CRL."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:80
msgid ""
"This utility can be used to send certificates and CAs to Netscape as part of "
"the certificate enrollment process. This involves sending the DER encoded "
"output as MIME type application/x-x509-user-cert."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:84
msgid ""
"The B<PEM> encoded form with the header and footer lines removed can be used "
"to install user certificates and CAs in MSIE using the Xenroll control."
msgstr ""

#. type: textblock
#: C/apps/crl2pkcs7.pod:89
msgid "L<pkcs7(1)|pkcs7(1)>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:6
msgid "pkcs12 - PKCS#12 file utility"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:10
msgid ""
"B<openssl> B<pkcs12> [B<-export>] [B<-chain>] [B<-inkey filename>] "
"[B<-certfile filename>] [B<-name name>] [B<-caname name>] [B<-in filename>] "
"[B<-out filename>] [B<-noout>] [B<-nomacver>] [B<-nocerts>] [B<-clcerts>] "
"[B<-cacerts>] [B<-nokeys>] [B<-info>] [B<-des | -des3 | -idea | -aes128 | "
"-aes192 | -aes256 | -camellia128 | -camellia192 | -camellia256 | -nodes>] "
"[B<-noiter>] [B<-maciter | -nomaciter | -nomac>] [B<-twopass>] [B<-descert>] "
"[B<-certpbe cipher>] [B<-keypbe cipher>] [B<-macalg digest>] [B<-keyex>] "
"[B<-keysig>] [B<-password arg>] [B<-passin arg>] [B<-passout arg>] [B<-rand "
"file(s)>] [B<-CAfile file>] [B<-CApath dir>] [B<-CSP name>]"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:46
msgid ""
"The B<pkcs12> command allows PKCS#12 files (sometimes referred to as PFX "
"files) to be created and parsed. PKCS#12 files are used by several programs "
"including Netscape, MSIE and MS Outlook."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:52
msgid ""
"There are a lot of options the meaning of some depends of whether a PKCS#12 "
"file is being created or parsed. By default a PKCS#12 file is parsed. A "
"PKCS#12 file can be created by using the B<-export> option (see below)."
msgstr ""

#. type: =head1
#: C/apps/pkcs12.pod:56
msgid "PARSING OPTIONS"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:62
msgid ""
"This specifies filename of the PKCS#12 file to be parsed. Standard input is "
"used by default."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:67
msgid ""
"The filename to write certificates and private keys to, standard output by "
"default.  They are all written in PEM format."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:70 C/apps/pkcs8.pod:62
msgid "B<-passin arg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:72
msgid ""
"the PKCS#12 file (i.e. input file) password source. For more information "
"about the format of B<arg> see the B<PASS PHRASE ARGUMENTS> section in "
"L<openssl(1)|openssl(1)>."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:76 C/apps/pkcs8.pod:74
msgid "B<-passout arg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:78
msgid ""
"pass phrase source to encrypt any outputted private keys with. For more "
"information about the format of B<arg> see the B<PASS PHRASE ARGUMENTS> "
"section in L<openssl(1)|openssl(1)>."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:82
msgid "B<-password arg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:84
msgid ""
"With -export, -password is equivalent to -passout.  Otherwise, -password is "
"equivalent to -passin."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:89
msgid ""
"this option inhibits output of the keys and certificates to the output file "
"version of the PKCS#12 file."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:92
msgid "B<-clcerts>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:94
msgid "only output client certificates (not CA certificates)."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:96
msgid "B<-cacerts>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:98
msgid "only output CA certificates (not client certificates)."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:100
msgid "B<-nocerts>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:102
msgid "no certificates at all will be output."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:104
msgid "B<-nokeys>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:106
msgid "no private keys will be output."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:108
msgid "B<-info>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:110
msgid ""
"output additional information about the PKCS#12 file structure, algorithms "
"used and iteration counts."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:113
msgid "B<-des>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:115
msgid "use DES to encrypt private keys before outputting."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:117
msgid "B<-des3>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:119
msgid ""
"use triple DES to encrypt private keys before outputting, this is the "
"default."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:121
msgid "B<-idea>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:123
msgid "use IDEA to encrypt private keys before outputting."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:125
msgid "B<-aes128>, B<-aes192>, B<-aes256>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:127
msgid "use AES to encrypt private keys before outputting."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:129
msgid "B<-camellia128>, B<-camellia192>, B<-camellia256>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:131
msgid "use Camellia to encrypt private keys before outputting."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:133
msgid "B<-nodes>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:135
msgid "don't encrypt the private keys at all."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:137
msgid "B<-nomacver>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:139
msgid "don't attempt to verify the integrity MAC before reading the file."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:141
msgid "B<-twopass>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:143
msgid ""
"prompt for separate integrity and encryption passwords: most software always "
"assumes these are the same so this option will render such PKCS#12 files "
"unreadable."
msgstr ""

#. type: =head1
#: C/apps/pkcs12.pod:149
msgid "FILE CREATION OPTIONS"
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:153
msgid "B<-export>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:155
msgid ""
"This option specifies that a PKCS#12 file will be created rather than "
"parsed."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:160
msgid ""
"This specifies filename to write the PKCS#12 file to. Standard output is "
"used by default."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:165
msgid ""
"The filename to read certificates and private keys from, standard input by "
"default.  They must all be in PEM format. The order doesn't matter but one "
"private key and its corresponding certificate should be present. If "
"additional certificates are present they will also be included in the "
"PKCS#12 file."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:170
msgid "B<-inkey filename>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:172
msgid ""
"file to read private key from. If not present then a private key must be "
"present in the input file."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:175
msgid "B<-name friendlyname>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:177
msgid ""
"This specifies the \"friendly name\" for the certificate and private "
"key. This name is typically displayed in list boxes by software importing "
"the file."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:182
msgid "A filename to read additional certificates from."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:184
msgid "B<-caname friendlyname>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:186
msgid ""
"This specifies the \"friendly name\" for other certificates. This option may "
"be used multiple times to specify names for all certificates in the order "
"they appear. Netscape ignores friendly names on other certificates whereas "
"MSIE displays them."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:191
msgid "B<-pass arg>, B<-passout arg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:193
msgid ""
"the PKCS#12 file (i.e. output file) password source. For more information "
"about the format of B<arg> see the B<PASS PHRASE ARGUMENTS> section in "
"L<openssl(1)|openssl(1)>."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:197
msgid "B<-passin password>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:199
msgid ""
"pass phrase source to decrypt any input private keys with. For more "
"information about the format of B<arg> see the B<PASS PHRASE ARGUMENTS> "
"section in L<openssl(1)|openssl(1)>."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:203
msgid "B<-chain>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:205
msgid ""
"if this option is present then an attempt is made to include the entire "
"certificate chain of the user certificate. The standard CA store is used for "
"this search. If the search fails it is considered a fatal error."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:209
msgid "B<-descert>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:211
msgid ""
"encrypt the certificate using triple DES, this may render the PKCS#12 file "
"unreadable by some \"export grade\" software. By default the private key is "
"encrypted using triple DES and the certificate using 40 bit RC2."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:215
msgid "B<-keypbe alg>, B<-certpbe alg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:217
msgid ""
"these options allow the algorithm used to encrypt the private key and "
"certificates to be selected. Any PKCS#5 v1.5 or PKCS#12 PBE algorithm name "
"can be used (see B<NOTES> section for more information). If a a cipher name "
"(as output by the B<list-cipher-algorithms> command is specified then it is "
"used with PKCS#5 v2.0. For interoperability reasons it is advisable to only "
"use PKCS#12 algorithms."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:224
msgid "B<-keyex|-keysig>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:226
msgid ""
"specifies that the private key is to be used for key exchange or just "
"signing.  This option is only interpreted by MSIE and similar MS "
"software. Normally \"export grade\" software will only allow 512 bit RSA "
"keys to be used for encryption purposes but arbitrary length keys for "
"signing. The B<-keysig> option marks the key for signing only. Signing only "
"keys can be used for S/MIME signing, authenticode (ActiveX control signing)  "
"and SSL client authentication, however due to a bug only MSIE 5.0 and later "
"support the use of signing only keys for SSL client authentication."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:235
msgid "B<-macalg digest>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:237
msgid "specify the MAC digest algorithm. If not included them SHA1 will be used."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:239
msgid "B<-nomaciter>, B<-noiter>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:241
msgid ""
"these options affect the iteration counts on the MAC and key algorithms.  "
"Unless you wish to produce files compatible with MSIE 4.0 you should leave "
"these options alone."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:245
msgid ""
"To discourage attacks by using large dictionaries of common passwords the "
"algorithm that derives keys from passwords can have an iteration count "
"applied to it: this causes a certain part of the algorithm to be repeated "
"and slows it down. The MAC is used to check the file integrity but since it "
"will normally have the same password as the keys and certificates it could "
"also be attacked.  By default both MAC and encryption iteration counts are "
"set to 2048, using these options the MAC and encryption iteration counts can "
"be set to 1, since this reduces the file security you should not use these "
"options unless you really have to. Most software supports both MAC and key "
"iteration counts.  MSIE 4.0 doesn't support MAC iteration counts so it needs "
"the B<-nomaciter> option."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:257
msgid "B<-maciter>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:259
msgid ""
"This option is included for compatibility with previous versions, it used to "
"be needed to use MAC iterations counts but they are now used by default."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:262
msgid "B<-nomac>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:264
msgid "don't attempt to provide the MAC integrity."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:266
msgid "B<-rand file(s)>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:268
msgid ""
"a file or files containing random data used to seed the random number "
"generator, or an EGD socket (see L<RAND_egd(3)|RAND_egd(3)>).  Multiple "
"files can be specified separated by a OS-dependent character.  The separator "
"is B<;> for MS-Windows, B<,> for OpenVMS, and B<:> for all others."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:276
msgid "CA storage as a file."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:280
msgid ""
"CA storage as a directory. This directory must be a standard certificate "
"directory: that is a hash of each subject name (using B<x509 -hash>) should "
"be linked to each certificate."
msgstr ""

#. type: =item
#: C/apps/pkcs12.pod:284
msgid "B<-CSP name>"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:286
msgid "write B<name> as a Microsoft CSP name."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:292
msgid ""
"Although there are a large number of options most of them are very rarely "
"used. For PKCS#12 file parsing only B<-in> and B<-out> need to be used for "
"PKCS#12 file creation B<-export> and B<-name> are also used."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:296
msgid ""
"If none of the B<-clcerts>, B<-cacerts> or B<-nocerts> options are present "
"then all certificates will be output in the order they appear in the input "
"PKCS#12 files. There is no guarantee that the first certificate present is "
"the one corresponding to the private key. Certain software which requires a "
"private key and certificate and assumes the first certificate in the file is "
"the one corresponding to the private key: this may not always be the "
"case. Using the B<-clcerts> option will solve this problem by only "
"outputting the certificate corresponding to the private key. If the CA "
"certificates are required then they can be output to a separate file using "
"the B<-nokeys -cacerts> options to just output CA certificates."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:307
msgid ""
"The B<-keypbe> and B<-certpbe> algorithms allow the precise encryption "
"algorithms for private keys and certificates to be specified. Normally the "
"defaults are fine but occasionally software can't handle triple DES "
"encrypted private keys, then the option B<-keypbe PBE-SHA1-RC2-40> can be "
"used to reduce the private key encryption to 40 bit RC2. A complete "
"description of all algorithms is contained in the B<pkcs8> manual page."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:316
msgid "Parse a PKCS#12 file and output it to a file:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:318
#, no-wrap
msgid ""
" openssl pkcs12 -in file.p12 -out file.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:320
msgid "Output only client certificates to a file:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:322
#, no-wrap
msgid ""
" openssl pkcs12 -in file.p12 -clcerts -out file.pem\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:324
#, no-wrap
msgid ""
"Don't encrypt the private key:\n"
" \n"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:326
#, no-wrap
msgid ""
" openssl pkcs12 -in file.p12 -out file.pem -nodes\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:328
msgid "Print some info about a PKCS#12 file:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:330
#, no-wrap
msgid ""
" openssl pkcs12 -in file.p12 -info -noout\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:332
msgid "Create a PKCS#12 file:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:334
#, no-wrap
msgid ""
" openssl pkcs12 -export -in file.pem -out file.p12 -name \"My "
"Certificate\"\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:336
msgid "Include some extra certificates:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:338
#, no-wrap
msgid ""
" openssl pkcs12 -export -in file.pem -out file.p12 -name \"My Certificate\" "
"\\\n"
"  -certfile othercerts.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:343
msgid "Some would argue that the PKCS#12 standard is one big bug :-)"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:345
msgid ""
"Versions of OpenSSL before 0.9.6a had a bug in the PKCS#12 key generation "
"routines. Under rare circumstances this could produce a PKCS#12 file "
"encrypted with an invalid key. As a result some PKCS#12 files which "
"triggered this bug from other implementations (MSIE or Netscape) could not "
"be decrypted by OpenSSL and similarly OpenSSL could produce PKCS#12 files "
"which could not be decrypted by other implementations. The chances of "
"producing such a file are relatively small: less than 1 in 256."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:353
msgid ""
"A side effect of fixing this bug is that any old invalidly encrypted PKCS#12 "
"files cannot no longer be parsed by the fixed version. Under such "
"circumstances the B<pkcs12> utility will report that the MAC is OK but fail "
"with a decryption error when extracting private keys."
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:358
msgid ""
"This problem can be resolved by extracting the private keys and certificates "
"from the PKCS#12 file using an older version of OpenSSL and recreating the "
"PKCS#12 file from the keys and certificates using a newer version of "
"OpenSSL. For example:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs12.pod:362
#, no-wrap
msgid ""
" old-openssl -in bad.p12 -out keycerts.pem\n"
" openssl -in keycerts.pem -export -name \"My PKCS#12 file\" -out fixed.p12\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs12.pod:367
msgid "L<pkcs8(1)|pkcs8(1)>"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:5
msgid "pkcs7 - PKCS#7 utility"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:9
msgid ""
"B<openssl> B<pkcs7> [B<-inform PEM|DER>] [B<-outform PEM|DER>] [B<-in "
"filename>] [B<-out filename>] [B<-print_certs>] [B<-text>] [B<-noout>] "
"[B<-engine id>]"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:21
msgid "The B<pkcs7> command processes PKCS#7 files in DER or PEM format."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:29
msgid ""
"This specifies the input format. B<DER> format is DER encoded PKCS#7 v1.5 "
"structure.B<PEM> (the default) is a base64 encoded version of the DER form "
"with header and footer lines."
msgstr ""

#. type: =item
#: C/apps/pkcs7.pod:48
msgid "B<-print_certs>"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:50
msgid ""
"prints out any certificates or CRLs contained in the file. They are preceded "
"by their subject and issuer names in one line format."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:55
msgid ""
"prints out certificates details in full rather than just subject and issuer "
"names."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:60
msgid ""
"don't output the encoded version of the PKCS#7 structure (or certificates is "
"B<-print_certs> is set)."
msgstr ""

#. type: =item
#: C/apps/pkcs7.pod:63 C/apps/pkcs8.pod:133
msgid "B<-engine id>"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:65
msgid ""
"specifying an engine (by its unique B<id> string) will cause B<pkcs7> to "
"attempt to obtain a functional reference to the specified engine, thus "
"initialising it if needed. The engine will then be set as the default for "
"all available algorithms."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:74
msgid "Convert a PKCS#7 file from PEM to DER:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs7.pod:76
#, no-wrap
msgid ""
" openssl pkcs7 -in file.pem -outform DER -out file.der\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:78
msgid "Output all certificates in a file:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs7.pod:80
#, no-wrap
msgid ""
" openssl pkcs7 -in file.pem -print_certs -out certs.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:84
msgid "The PEM PKCS#7 format uses the header and footer lines:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs7.pod:86
#, no-wrap
msgid ""
" -----BEGIN PKCS7-----\n"
" -----END PKCS7-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:89
msgid "For compatibility with some CAs it will also accept:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs7.pod:91
#, no-wrap
msgid ""
" -----BEGIN CERTIFICATE-----\n"
" -----END CERTIFICATE-----\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/pkcs7.pod:94
msgid "RESTRICTIONS"
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:96
msgid "There is no option to print out all the fields of a PKCS#7 file."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:98
msgid ""
"This PKCS#7 routines only understand PKCS#7 v 1.5 as specified in RFC2315 "
"they cannot currently parse, for example, the new CMS as described in "
"RFC2630."
msgstr ""

#. type: textblock
#: C/apps/pkcs7.pod:103
msgid "L<crl2pkcs7(1)|crl2pkcs7(1)>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:5
msgid "pkcs8 - PKCS#8 format private key conversion tool"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:9
msgid ""
"B<openssl> B<pkcs8> [B<-topk8>] [B<-inform PEM|DER>] [B<-outform PEM|DER>] "
"[B<-in filename>] [B<-passin arg>] [B<-out filename>] [B<-passout arg>] "
"[B<-noiter>] [B<-nocrypt>] [B<-nooct>] [B<-embed>] [B<-nsdb>] [B<-v2 alg>] "
"[B<-v2prf alg>] [B<-v1 alg>] [B<-engine id>]"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:29
msgid ""
"The B<pkcs8> command processes private keys in PKCS#8 format. It can handle "
"both unencrypted PKCS#8 PrivateKeyInfo format and EncryptedPrivateKeyInfo "
"format with a variety of PKCS#5 (v1.5 and v2.0) and PKCS#12 algorithms."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:37
msgid "B<-topk8>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:39
msgid ""
"Normally a PKCS#8 private key is expected on input and a traditional format "
"private key will be written. With the B<-topk8> option the situation is "
"reversed: it reads a traditional format private key and writes a PKCS#8 "
"format key."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:46
msgid ""
"This specifies the input format. If a PKCS#8 format key is expected on input "
"then either a B<DER> or B<PEM> encoded version of a PKCS#8 key will be "
"expected. Otherwise the B<DER> or B<PEM> format of the traditional format "
"private key is used."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:58
msgid ""
"This specifies the input filename to read a key from or standard input if "
"this option is not specified. If the key is encrypted a pass phrase will be "
"prompted for."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:64
msgid ""
"the input file password source. For more information about the format of "
"B<arg> see the B<PASS PHRASE ARGUMENTS> section in L<openssl(1)|openssl(1)>."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:69
msgid ""
"This specifies the output filename to write a key to or standard output by "
"default. If any encryption options are set then a pass phrase will be "
"prompted for. The output filename should B<not> be the same as the input "
"filename."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:76
msgid ""
"the output file password source. For more information about the format of "
"B<arg> see the B<PASS PHRASE ARGUMENTS> section in L<openssl(1)|openssl(1)>."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:79
msgid "B<-nocrypt>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:81
msgid ""
"PKCS#8 keys generated or input are normally PKCS#8 EncryptedPrivateKeyInfo "
"structures using an appropriate password based encryption algorithm. With "
"this option an unencrypted PrivateKeyInfo structure is expected or output.  "
"This option does not encrypt private keys at all and should only be used "
"when absolutely necessary. Certain software such as some versions of Java "
"code signing software used unencrypted private keys."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:88
msgid "B<-nooct>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:90
msgid ""
"This option generates RSA private keys in a broken format that some software "
"uses. Specifically the private key should be enclosed in a OCTET STRING but "
"some software just includes the structure itself without the surrounding "
"OCTET STRING."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:95
msgid "B<-embed>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:97
msgid ""
"This option generates DSA keys in a broken format. The DSA parameters are "
"embedded inside the PrivateKey structure. In this form the OCTET STRING "
"contains an ASN1 SEQUENCE consisting of two structures: a SEQUENCE "
"containing the parameters and an ASN1 INTEGER containing the private key."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:102
msgid "B<-nsdb>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:104
msgid ""
"This option generates DSA keys in a broken format compatible with Netscape "
"private key databases. The PrivateKey contains a SEQUENCE consisting of the "
"public and private keys respectively."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:108
msgid "B<-v2 alg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:110
msgid ""
"This option enables the use of PKCS#5 v2.0 algorithms. Normally PKCS#8 "
"private keys are encrypted with the password based encryption algorithm "
"called B<pbeWithMD5AndDES-CBC> this uses 56 bit DES encryption but it was "
"the strongest encryption algorithm supported in PKCS#5 v1.5. Using the "
"B<-v2> option PKCS#5 v2.0 algorithms are used which can use any encryption "
"algorithm such as 168 bit triple DES or 128 bit RC2 however not many "
"implementations support PKCS#5 v2.0 yet. If you are just using private keys "
"with OpenSSL then this doesn't matter."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:119
msgid ""
"The B<alg> argument is the encryption algorithm to use, valid values include "
"B<des>, B<des3> and B<rc2>. It is recommended that B<des3> is used."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:122
msgid "B<-v2prf alg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:124
msgid ""
"This option sets the PRF algorithm to use with PKCS#5 v2.0. A typical value "
"values would be B<hmacWithSHA256>. If this option isn't set then the default "
"for the cipher is used or B<hmacWithSHA1> if there is no default."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:128
msgid "B<-v1 alg>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:130
msgid ""
"This option specifies a PKCS#5 v1.5 or PKCS#12 algorithm to use. A complete "
"list of possible algorithms is included below."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:135
msgid ""
"specifying an engine (by its unique B<id> string) will cause B<pkcs8> to "
"attempt to obtain a functional reference to the specified engine, thus "
"initialising it if needed. The engine will then be set as the default for "
"all available algorithms."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:144
msgid ""
"The encrypted form of a PEM encode PKCS#8 files uses the following headers "
"and footers:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:147
#, no-wrap
msgid ""
" -----BEGIN ENCRYPTED PRIVATE KEY-----\n"
" -----END ENCRYPTED PRIVATE KEY-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:150
msgid "The unencrypted form uses:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:152
#, no-wrap
msgid ""
" -----BEGIN PRIVATE KEY-----\n"
" -----END PRIVATE KEY-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:155
msgid ""
"Private keys encrypted using PKCS#5 v2.0 algorithms and high iteration "
"counts are more secure that those encrypted using the traditional SSLeay "
"compatible formats. So if additional security is considered important the "
"keys should be converted."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:160
msgid ""
"The default encryption is only 56 bits because this is the encryption that "
"most current implementations of PKCS#8 will support."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:163
msgid ""
"Some software may use PKCS#12 password based encryption algorithms with "
"PKCS#8 format private keys: these are handled automatically but there is no "
"option to produce them."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:167
msgid ""
"It is possible to write out DER encoded encrypted private keys in PKCS#8 "
"format because the encryption details are included at an ASN1 level whereas "
"the traditional format includes them at a PEM level."
msgstr ""

#. type: =head1
#: C/apps/pkcs8.pod:171
msgid "PKCS#5 v1.5 and PKCS#12 algorithms."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:173
msgid ""
"Various algorithms can be used with the B<-v1> command line option, "
"including PKCS#5 v1.5 and PKCS#12. These are described in more detail below."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:179
msgid "B<PBE-MD2-DES PBE-MD5-DES>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:181
msgid ""
"These algorithms were included in the original PKCS#5 v1.5 specification.  "
"They only offer 56 bits of protection since they both use DES."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:184
msgid "B<PBE-SHA1-RC2-64 PBE-MD2-RC2-64 PBE-MD5-RC2-64 PBE-SHA1-DES>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:186
msgid ""
"These algorithms are not mentioned in the original PKCS#5 v1.5 specification "
"but they use the same key derivation algorithm and are supported by some "
"software. They are mentioned in PKCS#5 v2.0. They use either 64 bit RC2 or "
"56 bit DES."
msgstr ""

#. type: =item
#: C/apps/pkcs8.pod:191
msgid ""
"B<PBE-SHA1-RC4-128 PBE-SHA1-RC4-40 PBE-SHA1-3DES PBE-SHA1-2DES "
"PBE-SHA1-RC2-128 PBE-SHA1-RC2-40>"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:193
msgid ""
"These algorithms use the PKCS#12 password based encryption algorithm and "
"allow strong encryption algorithms like triple DES or 128 bit RC2 to be "
"used."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:200
msgid "Convert a private from traditional to PKCS#5 v2.0 format using triple DES:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:203
#, no-wrap
msgid ""
" openssl pkcs8 -in key.pem -topk8 -v2 des3 -out enckey.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:205
msgid ""
"Convert a private from traditional to PKCS#5 v2.0 format using AES with 256 "
"bits in CBC mode and B<hmacWithSHA256> PRF:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:208
#, no-wrap
msgid ""
" openssl pkcs8 -in key.pem -topk8 -v2 aes-256-cbc -v2prf hmacWithSHA256 -out "
"enckey.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:210
msgid ""
"Convert a private key to PKCS#8 using a PKCS#5 1.5 compatible algorithm "
"(DES):"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:213
#, no-wrap
msgid ""
" openssl pkcs8 -in key.pem -topk8 -out enckey.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:215
msgid "Convert a private key to PKCS#8 using a PKCS#12 compatible algorithm (3DES):"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:218
#, no-wrap
msgid ""
" openssl pkcs8 -in key.pem -topk8 -out enckey.pem -v1 PBE-SHA1-3DES\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:220
msgid "Read a DER unencrypted PKCS#8 format private key:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:222
#, no-wrap
msgid ""
" openssl pkcs8 -inform DER -nocrypt -in key.der -out key.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:224
msgid "Convert a private key from any PKCS#8 format to traditional format:"
msgstr ""

#. type: verbatim
#: C/apps/pkcs8.pod:226
#, no-wrap
msgid ""
" openssl pkcs8 -in pk8.pem -out key.pem\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/pkcs8.pod:228
msgid "STANDARDS"
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:230
msgid ""
"Test vectors from this PKCS#5 v2.0 implementation were posted to the "
"pkcs-tng mailing list using triple DES, DES and RC2 with high iteration "
"counts, several people confirmed that they could decrypt the private keys "
"produced and Therefore it can be assumed that the PKCS#5 v2.0 implementation "
"is reasonably accurate at least as far as these algorithms are concerned."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:237
msgid ""
"The format of PKCS#8 DSA (and other) private keys is not well documented: it "
"is hidden away in PKCS#11 v2.01, section 11.9. OpenSSL's default DSA PKCS#8 "
"private key format complies with this standard."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:243
msgid ""
"There should be an option that prints out the encryption algorithm in use "
"and other details such as the iteration count."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:246
msgid ""
"PKCS#8 using triple DES and PKCS#5 v2.0 should be the default private key "
"format for OpenSSL: for compatibility several of the utilities use the old "
"format at present."
msgstr ""

#. type: textblock
#: C/apps/pkcs8.pod:252
msgid ""
"L<dsa(1)|dsa(1)>, L<rsa(1)|rsa(1)>, L<genrsa(1)|genrsa(1)>, "
"L<gendsa(1)|gendsa(1)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:5
msgid "PKCS12_create - create a PKCS#12 structure"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS12_create.pod:9 C/crypto/PKCS12_parse.pod:9
#, no-wrap
msgid ""
" #include <openssl/pkcs12.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS12_create.pod:11
#, no-wrap
msgid ""
" PKCS12 *PKCS12_create(char *pass, char *name, EVP_PKEY *pkey, X509 *cert, "
"STACK_OF(X509) *ca,\n"
"\t\t\t\tint nid_key, int nid_cert, int iter, int mac_iter, int keytype);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:16
msgid "PKCS12_create() creates a PKCS#12 structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:18
msgid ""
"B<pass> is the passphrase to use. B<name> is the B<friendlyName> to use for "
"the supplied certifictate and key. B<pkey> is the private key to include in "
"the structure and B<cert> its corresponding certificates. B<ca>, if not "
"B<NULL> is an optional set of certificates to also include in the structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:23
msgid ""
"B<nid_key> and B<nid_cert> are the encryption algorithms that should be used "
"for the key and certificate respectively. B<iter> is the encryption "
"algorithm iteration count to use and B<mac_iter> is the MAC iteration count "
"to use.  B<keytype> is the type of key."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:30
msgid ""
"The parameters B<nid_key>, B<nid_cert>, B<iter>, B<mac_iter> and B<keytype> "
"can all be set to zero and sensible defaults will be used."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:33
msgid ""
"These defaults are: 40 bit RC2 encryption for certificates, triple DES "
"encryption for private keys, a key iteration count of PKCS12_DEFAULT_ITER "
"(currently 2048) and a MAC iteration count of 1."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:37
msgid ""
"The default MAC iteration count is 1 in order to retain compatibility with "
"old software which did not interpret MAC iteration counts. If such "
"compatibility is not required then B<mac_iter> should be set to "
"PKCS12_DEFAULT_ITER."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:41
msgid ""
"B<keytype> adds a flag to the store private key. This is a non standard "
"extension that is only currently interpreted by MSIE. If set to zero the "
"flag is omitted, if set to B<KEY_SIG> the key can be used for signing only, "
"if set to B<KEY_EX> it can be used for signing and encryption. This option "
"was useful for old export grade software which could use signing only keys "
"of arbitrary size but had restrictions on the permissible sizes of keys "
"which could be used for encryption."
msgstr ""

#. type: =head1
#: C/crypto/PKCS12_create.pod:49
msgid "NEW FUNCTIONALITY IN OPENSSL 0.9.8"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:51
msgid ""
"Some additional functionality was added to PKCS12_create() in OpenSSL "
"0.9.8. These extensions are detailed below."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:54
msgid ""
"If a certificate contains an B<alias> or B<keyid> then this will be used for "
"the corresponding B<friendlyName> or B<localKeyID> in the PKCS12 structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:58
msgid ""
"Either B<pkey>, B<cert> or both can be B<NULL> to indicate that no key or "
"certficate is required. In previous versions both had to be present or a "
"fatal error is returned."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:62
msgid ""
"B<nid_key> or B<nid_cert> can be set to -1 indicating that no encryption "
"should be used."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:65
msgid "B<mac_iter> can be set to -1 and the MAC will then be omitted entirely."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:69 C/crypto/PKCS12_parse.pod:51
msgid "L<d2i_PKCS12(3)|d2i_PKCS12(3)>"
msgstr ""

#. type: =head1
#: C/crypto/PKCS12_create.pod:71 C/crypto/PKCS12_parse.pod:53 C/crypto/PKCS7_decrypt.pod:51 C/crypto/PKCS7_encrypt.pod:75 C/crypto/PKCS7_sign.pod:108 C/crypto/PKCS7_sign_add_signer.pod:83 C/crypto/PKCS7_verify.pod:114
msgid "HISTORY"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_create.pod:73
msgid "PKCS12_create was added in OpenSSL 0.9.3"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:5
msgid "PKCS12_parse - parse a PKCS#12 structure"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:11
msgid ""
"int PKCS12_parse(PKCS12 *p12, const char *pass, EVP_PKEY **pkey, X509 "
"**cert, STACK_OF(X509) **ca);"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:15
msgid "PKCS12_parse() parses a PKCS12 structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:17
msgid ""
"B<p12> is the B<PKCS12> structure to parse. B<pass> is the passphrase to "
"use.  If successful the private key will be written to B<*pkey>, the "
"corresponding certificate to B<*cert> and any additional certificates to "
"B<*ca>."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:23
msgid ""
"The parameters B<pkey> and B<cert> cannot be B<NULL>. B<ca> can be <NULL> in "
"which case additional certificates will be discarded. B<*ca> can also be a "
"valid STACK in which case additional certificates are appended to B<*ca>. If "
"B<*ca> is B<NULL> a new STACK will be allocated."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:28
msgid ""
"The B<friendlyName> and B<localKeyID> attributes (if present) on each "
"certificate will be stored in the B<alias> and B<keyid> attributes of the "
"B<X509> structure."
msgstr ""

#. type: =head1
#: C/crypto/PKCS12_parse.pod:32 C/crypto/PKCS7_decrypt.pod:34 C/crypto/PKCS7_encrypt.pod:66 C/crypto/PKCS7_sign.pod:99 C/crypto/PKCS7_sign_add_signer.pod:73 C/crypto/PKCS7_verify.pod:92
msgid "RETURN VALUES"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:34
msgid "PKCS12_parse() returns 1 for success and zero if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:36 C/crypto/PKCS7_verify.pod:99
msgid "The error can be obtained from L<ERR_get_error(3)|ERR_get_error(3)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:40
msgid ""
"Only a single private key and corresponding certificate is returned by this "
"function. More complex PKCS#12 files with multiple private keys will only "
"return the first match."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:44
msgid ""
"Only B<friendlyName> and B<localKeyID> attributes are currently stored in "
"certificates. Other attributes are discarded."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:47
msgid ""
"Attributes currently cannot be stored in the private key B<EVP_PKEY> "
"structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS12_parse.pod:55
msgid "PKCS12_parse was added in OpenSSL 0.9.3"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:5
msgid "PKCS7_decrypt - decrypt content from a PKCS#7 envelopedData structure"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_decrypt.pod:9 C/crypto/PKCS7_encrypt.pod:9 C/crypto/PKCS7_sign.pod:9 C/crypto/PKCS7_sign_add_signer.pod:9 C/crypto/PKCS7_verify.pod:9
#, no-wrap
msgid ""
" #include <openssl/pkcs7.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_decrypt.pod:11
#, no-wrap
msgid ""
" int PKCS7_decrypt(PKCS7 *p7, EVP_PKEY *pkey, X509 *cert, BIO *data, int "
"flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:15
msgid ""
"PKCS7_decrypt() extracts and decrypts the content from a PKCS#7 "
"envelopedData structure. B<pkey> is the private key of the recipient, "
"B<cert> is the recipients certificate, B<data> is a BIO to write the content "
"to and B<flags> is an optional set of flags."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:22
msgid ""
"OpenSSL_add_all_algorithms() (or equivalent) should be called before using "
"this function or errors about unknown algorithms will occur."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:25
msgid ""
"Although the recipients certificate is not needed to decrypt the data it is "
"needed to locate the appropriate (of possible several) recipients in the "
"PKCS#7 structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:28 C/crypto/PKCS7_encrypt.pod:40
msgid "The following flags can be passed in the B<flags> parameter."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:30 C/crypto/PKCS7_verify.pod:61
msgid ""
"If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain> are "
"deleted from the content. If the content is not of type B<text/plain> then "
"an error is returned."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:36
msgid ""
"PKCS7_decrypt() returns either 1 for success or 0 for failure.  The error "
"can be obtained from ERR_get_error(3)"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:41
msgid ""
"PKCS7_decrypt() must be passed the correct recipient key and certificate. It "
"would be better if it could look up the correct key and certificate from a "
"database."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:44 C/crypto/PKCS7_verify.pod:107
msgid ""
"The lack of single pass processing and need to hold all data in memory as "
"mentioned in PKCS7_sign() also applies to PKCS7_verify()."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:49
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_encrypt(3)|PKCS7_encrypt(3)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_decrypt.pod:53
msgid "PKCS7_decrypt() was added to OpenSSL 0.9.5"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:5
msgid "PKCS7_encrypt - create a PKCS#7 envelopedData structure"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_encrypt.pod:11
#, no-wrap
msgid ""
" PKCS7 *PKCS7_encrypt(STACK_OF(X509) *certs, BIO *in, const EVP_CIPHER "
"*cipher, int flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:15
msgid ""
"PKCS7_encrypt() creates and returns a PKCS#7 envelopedData "
"structure. B<certs> is a list of recipient certificates. B<in> is the "
"content to be encrypted.  B<cipher> is the symmetric cipher to use. B<flags> "
"is an optional set of flags."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:21
msgid ""
"Only RSA keys are supported in PKCS#7 and envelopedData so the recipient "
"certificates supplied to this function must all contain RSA public keys, "
"though they do not have to be signed using the RSA algorithm."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:25
msgid ""
"EVP_des_ede3_cbc() (triple DES) is the algorithm of choice for S/MIME use "
"because most clients will support it."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:28
msgid ""
"Some old \"export grade\" clients may only support weak encryption using 40 "
"or 64 bit RC2. These can be used by passing EVP_rc2_40_cbc() and "
"EVP_rc2_64_cbc()  respectively."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:32
msgid ""
"The algorithm passed in the B<cipher> parameter must support ASN1 encoding "
"of its parameters."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:35
msgid ""
"Many browsers implement a \"sign and encrypt\" option which is simply an "
"S/MIME envelopedData containing an S/MIME signed message. This can be "
"readily produced by storing the S/MIME signed message in a memory BIO and "
"passing it to PKCS7_encrypt()."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:42
msgid ""
"If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain> are "
"prepended to the data."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:45
msgid ""
"Normally the supplied content is translated into MIME canonical format (as "
"required by the S/MIME specifications) if B<PKCS7_BINARY> is set no "
"translation occurs. This option should be used if the supplied data is in "
"binary format otherwise the translation will corrupt it. If B<PKCS7_BINARY> "
"is set then B<PKCS7_TEXT> is ignored."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:51
msgid ""
"If the B<PKCS7_STREAM> flag is set a partial B<PKCS7> structure is output "
"suitable for streaming I/O: no data is read from the BIO B<in>."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:56 C/crypto/PKCS7_sign.pod:71
msgid ""
"If the flag B<PKCS7_STREAM> is set the returned B<PKCS7> structure is B<not> "
"complete and outputting its contents via a function that does not properly "
"finalize the B<PKCS7> structure will give unpredictable results."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:61 C/crypto/PKCS7_sign.pod:75
msgid ""
"Several functions including SMIME_write_PKCS7(), i2d_PKCS7_bio_stream(), "
"PEM_write_bio_PKCS7_stream() finalize the structure. Alternatively "
"finalization can be performed by obtaining the streaming ASN1 B<BIO> "
"directly using BIO_new_PKCS7()."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:68
msgid ""
"PKCS7_encrypt() returns either a PKCS7 structure or NULL if an error "
"occurred.  The error can be obtained from ERR_get_error(3)."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:73
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_decrypt(3)|PKCS7_decrypt(3)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_encrypt.pod:77
msgid ""
"PKCS7_decrypt() was added to OpenSSL 0.9.5 The B<PKCS7_STREAM> flag was "
"first supported in OpenSSL 1.0.0."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:5
msgid "PKCS7_sign - create a PKCS#7 signedData structure"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_sign.pod:11
#, no-wrap
msgid ""
" PKCS7 *PKCS7_sign(X509 *signcert, EVP_PKEY *pkey, STACK_OF(X509) *certs, "
"BIO *data, int flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:15
msgid ""
"PKCS7_sign() creates and returns a PKCS#7 signedData structure. B<signcert> "
"is the certificate to sign with, B<pkey> is the corresponsding private key.  "
"B<certs> is an optional additional set of certificates to include in the "
"PKCS#7 structure (for example any intermediate CAs in the chain)."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:20
msgid "The data to be signed is read from BIO B<data>."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:22
msgid "B<flags> is an optional set of flags."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:26 C/crypto/PKCS7_sign_add_signer.pod:39
msgid ""
"Any of the following flags (ored together) can be passed in the B<flags> "
"parameter."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:29
msgid ""
"Many S/MIME clients expect the signed content to include valid MIME "
"headers. If the B<PKCS7_TEXT> flag is set MIME headers for type "
"B<text/plain> are prepended to the data."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:33 C/crypto/PKCS7_sign_add_signer.pod:52
msgid ""
"If B<PKCS7_NOCERTS> is set the signer's certificate will not be included in "
"the PKCS7 structure, the signer's certificate must still be supplied in the "
"B<signcert> parameter though. This can reduce the size of the signature if "
"the signers certificate can be obtained by other means: for example a "
"previously signed message."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:39
msgid ""
"The data being signed is included in the PKCS7 structure, unless "
"B<PKCS7_DETACHED> is set in which case it is omitted. This is used for PKCS7 "
"detached signatures which are used in S/MIME plaintext signed messages for "
"example."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:44
msgid ""
"Normally the supplied content is translated into MIME canonical format (as "
"required by the S/MIME specifications) if B<PKCS7_BINARY> is set no "
"translation occurs. This option should be used if the supplied data is in "
"binary format otherwise the translation will corrupt it."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:49 C/crypto/PKCS7_sign_add_signer.pod:58
msgid ""
"The signedData structure includes several PKCS#7 autenticatedAttributes "
"including the signing time, the PKCS#7 content type and the supported list "
"of ciphers in an SMIMECapabilities attribute. If B<PKCS7_NOATTR> is set then "
"no authenticatedAttributes will be used. If B<PKCS7_NOSMIMECAP> is set then "
"just the SMIMECapabilities are omitted."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:55 C/crypto/PKCS7_sign_add_signer.pod:64
msgid ""
"If present the SMIMECapabilities attribute indicates support for the "
"following algorithms: triple DES, 128 bit RC2, 64 bit RC2, DES and 40 bit "
"RC2. If any of these algorithms is disabled then it will not be included."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:59
msgid ""
"If the flags B<PKCS7_STREAM> is set then the returned B<PKCS7> structure is "
"just initialized ready to perform the signing operation. The signing is "
"however B<not> performed and the data to be signed is not read from the "
"B<data> parameter. Signing is deferred until after the data has been "
"written. In this way data can be signed in a single pass."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:65
msgid ""
"If the B<PKCS7_PARTIAL> flag is set a partial B<PKCS7> structure is output "
"to which additional signers and capabilities can be added before "
"finalization."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:80
msgid ""
"If a signer is specified it will use the default digest for the signing "
"algorithm. This is B<SHA1> for both RSA and DSA keys."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:83
msgid ""
"In OpenSSL 1.0.0 the B<certs>, B<signcert> and B<pkey> parameters can all be "
"B<NULL> if the B<PKCS7_PARTIAL> flag is set. One or more signers can be "
"added using the function B<PKCS7_sign_add_signer()>. B<PKCS7_final()> must "
"also be called to finalize the structure if streaming is not "
"enabled. Alternative signing digests can also be specified using this "
"method."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:89
msgid ""
"In OpenSSL 1.0.0 if B<signcert> and B<pkey> are NULL then a certificates "
"only PKCS#7 structure is output."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:92
msgid ""
"In versions of OpenSSL before 1.0.0 the B<signcert> and B<pkey> parameters "
"must B<NOT> be NULL."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:97
msgid "Some advanced attributes such as counter signatures are not supported."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:101
msgid ""
"PKCS7_sign() returns either a valid PKCS7 structure or NULL if an error "
"occurred.  The error can be obtained from ERR_get_error(3)."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:106
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_verify(3)|PKCS7_verify(3)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:110
msgid "PKCS7_sign() was added to OpenSSL 0.9.5"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:112
msgid "The B<PKCS7_PARTIAL> flag was added in OpenSSL 1.0.0"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign.pod:114
msgid "The B<PKCS7_STREAM> flag was added in OpenSSL 1.0.0"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:5
msgid "PKCS7_sign_add_signer - add a signer PKCS7 signed data structure."
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_sign_add_signer.pod:11
#, no-wrap
msgid ""
" PKCS7_SIGNER_INFO *PKCS7_sign_add_signer(PKCS7 *p7, X509 *signcert, "
"EVP_PKEY *pkey, const EVP_MD *md, int flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:16
msgid ""
"PKCS7_sign_add_signer() adds a signer with certificate B<signcert> and "
"private key B<pkey> using message digest B<md> to a PKCS7 signed data "
"structure B<p7>."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:20
msgid ""
"The PKCS7 structure should be obtained from an initial call to PKCS7_sign()  "
"with the flag B<PKCS7_PARTIAL> set or in the case or re-signing a valid "
"PKCS7 signed data structure."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:24
msgid ""
"If the B<md> parameter is B<NULL> then the default digest for the public key "
"algorithm will be used."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:27
msgid ""
"Unless the B<PKCS7_REUSE_DIGEST> flag is set the returned PKCS7 structure is "
"not complete and must be finalized either by streaming (if applicable) or a "
"call to PKCS7_final()."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:34
msgid ""
"The main purpose of this function is to provide finer control over a PKCS#7 "
"signed data structure where the simpler PKCS7_sign() function defaults are "
"not appropriate. For example if multiple signers or non default digest "
"algorithms are needed."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:42
msgid ""
"If B<PKCS7_REUSE_DIGEST> is set then an attempt is made to copy the content "
"digest value from the PKCS7 struture: to add a signer to an existing "
"structure.  An error occurs if a matching digest value cannot be found to "
"copy. The returned PKCS7 structure will be valid and finalized when this "
"flag is set."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:47
msgid ""
"If B<PKCS7_PARTIAL> is set in addition to B<PKCS7_REUSE_DIGEST> then the "
"B<PKCS7_SIGNER_INO> structure will not be finalized so additional attributes "
"can be added. In this case an explicit call to PKCS7_SIGNER_INFO_sign() is "
"needed to finalize it."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:69
msgid ""
"PKCS7_sign_add_signers() returns an internal pointer to the "
"PKCS7_SIGNER_INFO structure just added, this can be used to set additional "
"attributes before it is finalized."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:75
msgid ""
"PKCS7_sign_add_signers() returns an internal pointer to the "
"PKCS7_SIGNER_INFO structure just added or NULL if an error occurs."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:80
msgid ""
"L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_sign(3)|PKCS7_sign(3)>, "
"L<PKCS7_final(3)|PKCS7_final(3)>,"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_sign_add_signer.pod:85
msgid "PPKCS7_sign_add_signer() was added to OpenSSL 1.0.0"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:5
msgid "PKCS7_verify, PKCS7_get0_signers - verify a PKCS#7 signedData structure"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_verify.pod:11
#, no-wrap
msgid ""
" int PKCS7_verify(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO "
"*indata, BIO *out, int flags);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/PKCS7_verify.pod:13
#, no-wrap
msgid ""
" STACK_OF(X509) *PKCS7_get0_signers(PKCS7 *p7, STACK_OF(X509) *certs, int "
"flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:17
msgid ""
"PKCS7_verify() verifies a PKCS#7 signedData structure. B<p7> is the PKCS7 "
"structure to verify. B<certs> is a set of certificates in which to search "
"for the signer's certificate. B<store> is a trusted certficate store (used "
"for chain verification). B<indata> is the signed data if the content is not "
"present in B<p7> (that is it is detached). The content is written to B<out> "
"if it is not NULL."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:24
msgid ""
"B<flags> is an optional set of flags, which can be used to modify the verify "
"operation."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:27
msgid ""
"PKCS7_get0_signers() retrieves the signer's certificates from B<p7>, it does "
"B<not> check their validity or whether any signatures are valid. The "
"B<certs> and B<flags> parameters have the same meanings as in "
"PKCS7_verify()."
msgstr ""

#. type: =head1
#: C/crypto/PKCS7_verify.pod:31
msgid "VERIFY PROCESS"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:33
msgid "Normally the verify process proceeds as follows."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:35
msgid ""
"Initially some sanity checks are performed on B<p7>. The type of B<p7> must "
"be signedData. There must be at least one signature on the data and if the "
"content is detached B<indata> cannot be B<NULL>."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:39
msgid ""
"An attempt is made to locate all the signer's certificates, first looking in "
"the B<certs> parameter (if it is not B<NULL>) and then looking in any "
"certificates contained in the B<p7> structure itself. If any signer's "
"certificates cannot be located the operation fails."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:44
msgid ""
"Each signer's certificate is chain verified using the B<smimesign> purpose "
"and the supplied trusted certificate store. Any internal certificates in the "
"message are used as untrusted CAs. If any chain verify fails an error code "
"is returned."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:48
msgid ""
"Finally the signed content is read (and written to B<out> is it is not NULL) "
"and the signature's checked."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:51
msgid "If all signature's verify correctly then the function is successful."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:53
msgid ""
"Any of the following flags (ored together) can be passed in the B<flags> "
"parameter to change the default verify behaviour. Only the flag "
"B<PKCS7_NOINTERN> is meaningful to PKCS7_get0_signers()."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:57
msgid ""
"If B<PKCS7_NOINTERN> is set the certificates in the message itself are not "
"searched when locating the signer's certificate. This means that all the "
"signers certificates must be in the B<certs> parameter."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:65
msgid ""
"If B<PKCS7_NOVERIFY> is set the signer's certificates are not chain "
"verified."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:67
msgid ""
"If B<PKCS7_NOCHAIN> is set then the certificates contained in the message "
"are not used as untrusted CAs. This means that the whole verify chain (apart "
"from the signer's certificate) must be contained in the trusted store."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:71
msgid "If B<PKCS7_NOSIGS> is set then the signatures on the data are not checked."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:75
msgid ""
"One application of B<PKCS7_NOINTERN> is to only accept messages signed by a "
"small number of certificates. The acceptable certificates would be passed in "
"the B<certs> parameter. In this case if the signer is not one of the "
"certificates supplied in B<certs> then the verify will fail because the "
"signer cannot be found."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:81
msgid ""
"Care should be taken when modifying the default verify behaviour, for "
"example setting B<PKCS7_NOVERIFY|PKCS7_NOSIGS> will totally disable all "
"verification and any signed message will be considered valid. This "
"combination is however useful if one merely wishes to write the content to "
"B<out> and its validity is not considered important."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:87
msgid ""
"Chain verification should arguably be performed using the signing time "
"rather than the current time. However since the signing time is supplied by "
"the signer it cannot be trusted without additional evidence (such as a "
"trusted timestamp)."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:94
msgid ""
"PKCS7_verify() returns one for a successful verification and zero if an "
"error occurs."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:97
msgid "PKCS7_get0_signers() returns all signers or B<NULL> if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:103
msgid ""
"The trusted certificate store is not searched for the signers certificate, "
"this is primarily due to the inadequacies of the current B<X509_STORE> "
"functionality."
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:112
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_sign(3)|PKCS7_sign(3)>"
msgstr ""

#. type: textblock
#: C/crypto/PKCS7_verify.pod:116
msgid "PKCS7_verify() was added to OpenSSL 0.9.5"
msgstr ""
