# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-03-03 13:15-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: C/apps/x509.pod:4 C/apps/x509v3_config.pod:5 C/crypto/X509_NAME_ENTRY_get_object.pod:3 C/crypto/X509_NAME_add_entry_by_txt.pod:3 C/crypto/X509_NAME_get_index_by_NID.pod:3 C/crypto/X509_NAME_print_ex.pod:3 C/crypto/X509_new.pod:3 C/crypto/X509_STORE_CTX_get_error.pod:3 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:3 C/crypto/X509_STORE_CTX_new.pod:3 C/crypto/X509_STORE_CTX_set_verify_cb.pod:3 C/crypto/X509_STORE_set_verify_cb_func.pod:3 C/crypto/X509_VERIFY_PARAM_set_flags.pod:3 C/crypto/X509_verify_cert.pod:3 C/crypto/x509.pod:3
msgid "NAME"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:6
msgid "x509 - Certificate display and signing utility"
msgstr ""

#. type: =head1
#: C/apps/x509.pod:8 C/crypto/X509_NAME_ENTRY_get_object.pod:10 C/crypto/X509_NAME_add_entry_by_txt.pod:8 C/crypto/X509_NAME_get_index_by_NID.pod:9 C/crypto/X509_NAME_print_ex.pod:8 C/crypto/X509_new.pod:7 C/crypto/X509_STORE_CTX_get_error.pod:7 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:7 C/crypto/X509_STORE_CTX_new.pod:7 C/crypto/X509_STORE_CTX_set_verify_cb.pod:7 C/crypto/X509_STORE_set_verify_cb_func.pod:7 C/crypto/X509_VERIFY_PARAM_set_flags.pod:7 C/crypto/X509_verify_cert.pod:7 C/crypto/x509.pod:7
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:10
msgid ""
"B<openssl> B<x509> [B<-inform DER|PEM|NET>] [B<-outform DER|PEM|NET>] "
"[B<-keyform DER|PEM>] [B<-CAform DER|PEM>] [B<-CAkeyform DER|PEM>] [B<-in "
"filename>] [B<-out filename>] [B<-serial>] [B<-hash>] [B<-subject_hash>] "
"[B<-issuer_hash>] [B<-subject>] [B<-issuer>] [B<-nameopt option>] "
"[B<-email>] [B<-ocsp_uri>] [B<-startdate>] [B<-enddate>] [B<-purpose>] "
"[B<-dates>] [B<-modulus>] [B<-pubkey>] [B<-fingerprint>] [B<-alias>] "
"[B<-noout>] [B<-trustout>] [B<-clrtrust>] [B<-clrreject>] [B<-addtrust arg>] "
"[B<-addreject arg>] [B<-setalias arg>] [B<-days arg>] [B<-set_serial n>] "
"[B<-signkey filename>] [B<-x509toreq>] [B<-req>] [B<-CA filename>] [B<-CAkey "
"filename>] [B<-CAcreateserial>] [B<-CAserial filename>] [B<-force_pubkey "
"key>] [B<-text>] [B<-C>] [B<-md2|-md5|-sha1|-mdc2>] [B<-clrext>] [B<-extfile "
"filename>] [B<-extensions section>] [B<-engine id>]"
msgstr ""

#. type: =head1
#: C/apps/x509.pod:60 C/apps/x509v3_config.pod:9 C/crypto/X509_NAME_ENTRY_get_object.pod:24 C/crypto/X509_NAME_add_entry_by_txt.pod:22 C/crypto/X509_NAME_get_index_by_NID.pod:22 C/crypto/X509_NAME_print_ex.pod:17 C/crypto/X509_new.pod:14 C/crypto/X509_STORE_CTX_get_error.pod:21 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:20 C/crypto/X509_STORE_CTX_new.pod:28 C/crypto/X509_STORE_CTX_set_verify_cb.pod:14 C/crypto/X509_STORE_set_verify_cb_func.pod:17 C/crypto/X509_VERIFY_PARAM_set_flags.pod:29 C/crypto/X509_verify_cert.pod:13 C/crypto/x509.pod:11
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:62
msgid ""
"The B<x509> command is a multi purpose certificate utility. It can be used "
"to display certificate information, convert certificates to various forms, "
"sign certificate requests like a \"mini CA\" or edit certificate trust "
"settings."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:67
msgid ""
"Since there are a large number of options they will split up into various "
"sections."
msgstr ""

#. type: =head1
#: C/apps/x509.pod:70
msgid "OPTIONS"
msgstr ""

#. type: =head2
#: C/apps/x509.pod:72
msgid "INPUT, OUTPUT AND GENERAL PURPOSE OPTIONS"
msgstr ""

#. type: =item
#: C/apps/x509.pod:76
msgid "B<-inform DER|PEM|NET>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:78
msgid ""
"This specifies the input format normally the command will expect an X509 "
"certificate but this can change if other options such as B<-req> are "
"present. The DER format is the DER encoding of the certificate and PEM is "
"the base64 encoding of the DER encoding with header and footer lines "
"added. The NET option is an obscure Netscape server format that is now "
"obsolete."
msgstr ""

#. type: =item
#: C/apps/x509.pod:85
msgid "B<-outform DER|PEM|NET>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:87
msgid ""
"This specifies the output format, the options have the same meaning as the "
"B<-inform> option."
msgstr ""

#. type: =item
#: C/apps/x509.pod:90
msgid "B<-in filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:92
msgid ""
"This specifies the input filename to read a certificate from or standard "
"input if this option is not specified."
msgstr ""

#. type: =item
#: C/apps/x509.pod:95
msgid "B<-out filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:97
msgid ""
"This specifies the output filename to write to or standard output by "
"default."
msgstr ""

#. type: =item
#: C/apps/x509.pod:100
msgid "B<-md2|-md5|-sha1|-mdc2>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:102
msgid ""
"the digest to use. This affects any signing or display option that uses a "
"message digest, such as the B<-fingerprint>, B<-signkey> and B<-CA> "
"options. If not specified then SHA1 is used. If the key being used to sign "
"with is a DSA key then this option has no effect: SHA1 is always used with "
"DSA keys."
msgstr ""

#. type: =item
#: C/apps/x509.pod:107
msgid "B<-engine id>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:109
msgid ""
"specifying an engine (by its unique B<id> string) will cause B<x509> to "
"attempt to obtain a functional reference to the specified engine, thus "
"initialising it if needed. The engine will then be set as the default for "
"all available algorithms."
msgstr ""

#. type: =head2
#: C/apps/x509.pod:116
msgid "DISPLAY OPTIONS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:118
msgid ""
"Note: the B<-alias> and B<-purpose> options are also display options but are "
"described in the B<TRUST SETTINGS> section."
msgstr ""

#. type: =item
#: C/apps/x509.pod:123
msgid "B<-text>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:125
msgid ""
"prints out the certificate in text form. Full details are output including "
"the public key, signature algorithms, issuer and subject names, serial "
"number any extensions present and any trust settings."
msgstr ""

#. type: =item
#: C/apps/x509.pod:129
msgid "B<-certopt option>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:131
msgid ""
"customise the output format used with B<-text>. The B<option> argument can "
"be a single option or multiple options separated by commas. The B<-certopt> "
"switch may be also be used more than once to set multiple options. See the "
"B<TEXT OPTIONS> section for more information."
msgstr ""

#. type: =item
#: C/apps/x509.pod:136
msgid "B<-noout>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:138
msgid "this option prevents output of the encoded version of the request."
msgstr ""

#. type: =item
#: C/apps/x509.pod:140
msgid "B<-pubkey>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:142
msgid "outputs the the certificate's SubjectPublicKeyInfo block in PEM format."
msgstr ""

#. type: =item
#: C/apps/x509.pod:144
msgid "B<-modulus>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:146
msgid ""
"this option prints out the value of the modulus of the public key contained "
"in the certificate."
msgstr ""

#. type: =item
#: C/apps/x509.pod:149
msgid "B<-serial>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:151
msgid "outputs the certificate serial number."
msgstr ""

#. type: =item
#: C/apps/x509.pod:153
msgid "B<-subject_hash>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:155
msgid ""
"outputs the \"hash\" of the certificate subject name. This is used in "
"OpenSSL to form an index to allow certificates in a directory to be looked "
"up by subject name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:159
msgid "B<-issuer_hash>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:161
msgid "outputs the \"hash\" of the certificate issuer name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:163
msgid "B<-hash>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:165
msgid "synonym for \"-subject_hash\" for backward compatibility reasons."
msgstr ""

#. type: =item
#: C/apps/x509.pod:167
msgid "B<-subject_hash_old>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:169
msgid ""
"outputs the \"hash\" of the certificate subject name using the older "
"algorithm as used by OpenSSL versions before 1.0.0."
msgstr ""

#. type: =item
#: C/apps/x509.pod:172
msgid "B<-issuer_hash_old>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:174
msgid ""
"outputs the \"hash\" of the certificate issuer name using the older "
"algorithm as used by OpenSSL versions before 1.0.0."
msgstr ""

#. type: =item
#: C/apps/x509.pod:177
msgid "B<-subject>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:179
msgid "outputs the subject name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:181
msgid "B<-issuer>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:183
msgid "outputs the issuer name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:185
msgid "B<-nameopt option>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:187
msgid ""
"option which determines how the subject or issuer names are displayed. The "
"B<option> argument can be a single option or multiple options separated by "
"commas.  Alternatively the B<-nameopt> switch may be used more than once to "
"set multiple options. See the B<NAME OPTIONS> section for more information."
msgstr ""

#. type: =item
#: C/apps/x509.pod:192
msgid "B<-email>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:194
msgid "outputs the email address(es) if any."
msgstr ""

#. type: =item
#: C/apps/x509.pod:196
msgid "B<-ocsp_uri>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:198
msgid "outputs the OCSP responder address(es) if any."
msgstr ""

#. type: =item
#: C/apps/x509.pod:200
msgid "B<-startdate>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:202
msgid "prints out the start date of the certificate, that is the notBefore date."
msgstr ""

#. type: =item
#: C/apps/x509.pod:204
msgid "B<-enddate>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:206
msgid "prints out the expiry date of the certificate, that is the notAfter date."
msgstr ""

#. type: =item
#: C/apps/x509.pod:208
msgid "B<-dates>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:210
msgid "prints out the start and expiry dates of a certificate."
msgstr ""

#. type: =item
#: C/apps/x509.pod:212
msgid "B<-fingerprint>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:214
msgid ""
"prints out the digest of the DER encoded version of the whole certificate "
"(see digest options)."
msgstr ""

#. type: =item
#: C/apps/x509.pod:217
msgid "B<-C>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:219
msgid "this outputs the certificate in the form of a C source file."
msgstr ""

#. type: =head2
#: C/apps/x509.pod:223
msgid "TRUST SETTINGS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:225
msgid "Please note these options are currently experimental and may well change."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:227
msgid ""
"A B<trusted certificate> is an ordinary certificate which has several "
"additional pieces of information attached to it such as the permitted and "
"prohibited uses of the certificate and an \"alias\"."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:231
msgid ""
"Normally when a certificate is being verified at least one certificate must "
"be \"trusted\". By default a trusted certificate must be stored locally and "
"must be a root CA: any certificate chain ending in this CA is then usable "
"for any purpose."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:236
msgid ""
"Trust settings currently are only used with a root CA. They allow a finer "
"control over the purposes the root CA can be used for. For example a CA may "
"be trusted for SSL client but not SSL server use."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:240
msgid ""
"See the description of the B<verify> utility for more information on the "
"meaning of trust settings."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:243
msgid ""
"Future versions of OpenSSL will recognize trust settings on any certificate: "
"not just root CAs."
msgstr ""

#. type: =item
#: C/apps/x509.pod:249
msgid "B<-trustout>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:251
msgid ""
"this causes B<x509> to output a B<trusted> certificate. An ordinary or "
"trusted certificate can be input but by default an ordinary certificate is "
"output and any trust settings are discarded. With the B<-trustout> option a "
"trusted certificate is output. A trusted certificate is automatically output "
"if any trust settings are modified."
msgstr ""

#. type: =item
#: C/apps/x509.pod:257
msgid "B<-setalias arg>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:259
msgid ""
"sets the alias of the certificate. This will allow the certificate to be "
"referred to using a nickname for example \"Steve's Certificate\"."
msgstr ""

#. type: =item
#: C/apps/x509.pod:262
msgid "B<-alias>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:264
msgid "outputs the certificate alias, if any."
msgstr ""

#. type: =item
#: C/apps/x509.pod:266
msgid "B<-clrtrust>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:268
msgid "clears all the permitted or trusted uses of the certificate."
msgstr ""

#. type: =item
#: C/apps/x509.pod:270
msgid "B<-clrreject>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:272
msgid "clears all the prohibited or rejected uses of the certificate."
msgstr ""

#. type: =item
#: C/apps/x509.pod:274
msgid "B<-addtrust arg>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:276
msgid ""
"adds a trusted certificate use. Any object name can be used here but "
"currently only B<clientAuth> (SSL client use), B<serverAuth> (SSL server "
"use) and B<emailProtection> (S/MIME email) are used.  Other OpenSSL "
"applications may define additional uses."
msgstr ""

#. type: =item
#: C/apps/x509.pod:281
msgid "B<-addreject arg>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:283
msgid ""
"adds a prohibited use. It accepts the same values as the B<-addtrust> "
"option."
msgstr ""

#. type: =item
#: C/apps/x509.pod:286
msgid "B<-purpose>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:288
msgid ""
"this option performs tests on the certificate extensions and outputs the "
"results. For a more complete description see the B<CERTIFICATE EXTENSIONS> "
"section."
msgstr ""

#. type: =head2
#: C/apps/x509.pod:294
msgid "SIGNING OPTIONS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:296
msgid ""
"The B<x509> utility can be used to sign certificates and requests: it can "
"thus behave like a \"mini CA\"."
msgstr ""

#. type: =item
#: C/apps/x509.pod:301
msgid "B<-signkey filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:303
msgid ""
"this option causes the input file to be self signed using the supplied "
"private key."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:306
msgid ""
"If the input file is a certificate it sets the issuer name to the subject "
"name (i.e.  makes it self signed) changes the public key to the supplied "
"value and changes the start and end dates. The start date is set to the "
"current time and the end date is set to a value determined by the B<-days> "
"option. Any certificate extensions are retained unless the B<-clrext> option "
"is supplied."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:313
msgid ""
"If the input is a certificate request then a self signed certificate is "
"created using the supplied private key using the subject name in the "
"request."
msgstr ""

#. type: =item
#: C/apps/x509.pod:317
msgid "B<-clrext>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:319
msgid ""
"delete any extensions from a certificate. This option is used when a "
"certificate is being created from another certificate (for example with the "
"B<-signkey> or the B<-CA> options). Normally all extensions are retained."
msgstr ""

#. type: =item
#: C/apps/x509.pod:324
msgid "B<-keyform PEM|DER>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:326
msgid ""
"specifies the format (DER or PEM) of the private key file used in the "
"B<-signkey> option."
msgstr ""

#. type: =item
#: C/apps/x509.pod:329
msgid "B<-days arg>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:331
msgid ""
"specifies the number of days to make a certificate valid for. The default is "
"30 days."
msgstr ""

#. type: =item
#: C/apps/x509.pod:334
msgid "B<-x509toreq>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:336
msgid ""
"converts a certificate into a certificate request. The B<-signkey> option is "
"used to pass the required private key."
msgstr ""

#. type: =item
#: C/apps/x509.pod:339
msgid "B<-req>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:341
msgid ""
"by default a certificate is expected on input. With this option a "
"certificate request is expected instead."
msgstr ""

#. type: =item
#: C/apps/x509.pod:344
msgid "B<-set_serial n>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:346
msgid ""
"specifies the serial number to use. This option can be used with either the "
"B<-signkey> or B<-CA> options. If used in conjunction with the B<-CA> option "
"the serial number file (as specified by the B<-CAserial> or "
"B<-CAcreateserial> options) is not used."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:351
msgid ""
"The serial number can be decimal or hex (if preceded by B<0x>). Negative "
"serial numbers can also be specified but their use is not recommended."
msgstr ""

#. type: =item
#: C/apps/x509.pod:354
msgid "B<-CA filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:356
msgid ""
"specifies the CA certificate to be used for signing. When this option is "
"present B<x509> behaves like a \"mini CA\". The input file is signed by this "
"CA using this option: that is its issuer name is set to the subject name of "
"the CA and it is digitally signed using the CAs private key."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:361
msgid ""
"This option is normally combined with the B<-req> option. Without the "
"B<-req> option the input is a certificate which must be self signed."
msgstr ""

#. type: =item
#: C/apps/x509.pod:364
msgid "B<-CAkey filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:366
msgid ""
"sets the CA private key to sign a certificate with. If this option is not "
"specified then it is assumed that the CA private key is present in the CA "
"certificate file."
msgstr ""

#. type: =item
#: C/apps/x509.pod:370
msgid "B<-CAserial filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:372
msgid "sets the CA serial number file to use."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:374
msgid ""
"When the B<-CA> option is used to sign a certificate it uses a serial number "
"specified in a file. This file consist of one line containing an even number "
"of hex digits with the serial number to use. After each use the serial "
"number is incremented and written out to the file again."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:379
msgid ""
"The default filename consists of the CA certificate file base name with "
"\".srl\" appended. For example if the CA certificate file is called "
"\"mycacert.pem\" it expects to find a serial number file called "
"\"mycacert.srl\"."
msgstr ""

#. type: =item
#: C/apps/x509.pod:383
msgid "B<-CAcreateserial>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:385
msgid ""
"with this option the CA serial number file is created if it does not exist: "
"it will contain the serial number \"02\" and the certificate being signed "
"will have the 1 as its serial number. Normally if the B<-CA> option is "
"specified and the serial number file does not exist it is an error."
msgstr ""

#. type: =item
#: C/apps/x509.pod:390
msgid "B<-extfile filename>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:392
msgid ""
"file containing certificate extensions to use. If not specified then no "
"extensions are added to the certificate."
msgstr ""

#. type: =item
#: C/apps/x509.pod:395
msgid "B<-extensions section>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:397
msgid ""
"the section to add certificate extensions from. If this option is not "
"specified then the extensions should either be contained in the unnamed "
"(default) section or the default section should contain a variable called "
"\"extensions\" which contains the section to use. See the "
"L<x509v3_config(5)|x509v3_config(5)> manual page for details of the "
"extension section format."
msgstr ""

#. type: =item
#: C/apps/x509.pod:404
msgid "B<-force_pubkey key>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:406
msgid ""
"when a certificate is created set its public key to B<key> instead of the "
"key in the certificate or certificate request. This option is useful for "
"creating certificates where the algorithm can't normally sign requests, for "
"example DH."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:411
msgid "The format or B<key> can be specified using the B<-keyform> option."
msgstr ""

#. type: =head2
#: C/apps/x509.pod:415
msgid "NAME OPTIONS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:417
msgid ""
"The B<nameopt> command line switch determines how the subject and issuer "
"names are displayed. If no B<nameopt> switch is present the default "
"\"oneline\" format is used which is compatible with previous versions of "
"OpenSSL.  Each option is described in detail below, all options can be "
"preceded by a B<-> to turn the option off. Only the first four will normally "
"be used."
msgstr ""

#. type: =item
#: C/apps/x509.pod:425
msgid "B<compat>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:427
msgid "use the old format. This is equivalent to specifying no name options at all."
msgstr ""

#. type: =item
#: C/apps/x509.pod:429
msgid "B<RFC2253>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:431
msgid ""
"displays names compatible with RFC2253 equivalent to B<esc_2253>, "
"B<esc_ctrl>, B<esc_msb>, B<utf8>, B<dump_nostr>, B<dump_unknown>, "
"B<dump_der>, B<sep_comma_plus>, B<dn_rev> and B<sname>."
msgstr ""

#. type: =item
#: C/apps/x509.pod:435
msgid "B<oneline>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:437
msgid ""
"a oneline format which is more readable than RFC2253. It is equivalent to "
"specifying the B<esc_2253>, B<esc_ctrl>, B<esc_msb>, B<utf8>, B<dump_nostr>, "
"B<dump_der>, B<use_quote>, B<sep_comma_plus_space>, B<space_eq> and B<sname> "
"options."
msgstr ""

#. type: =item
#: C/apps/x509.pod:442
msgid "B<multiline>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:444
msgid ""
"a multiline format. It is equivalent B<esc_ctrl>, B<esc_msb>, "
"B<sep_multiline>, B<space_eq>, B<lname> and B<align>."
msgstr ""

#. type: =item
#: C/apps/x509.pod:447
msgid "B<esc_2253>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:449
msgid ""
"escape the \"special\" characters required by RFC2253 in a field That is "
"B<,+\"E<lt>E<gt>;>. Additionally B<#> is escaped at the beginning of a "
"string and a space character at the beginning or end of a string."
msgstr ""

#. type: =item
#: C/apps/x509.pod:453
msgid "B<esc_ctrl>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:455
msgid ""
"escape control characters. That is those with ASCII values less than 0x20 "
"(space) and the delete (0x7f) character. They are escaped using the RFC2253 "
"\\XX notation (where XX are two hex digits representing the character "
"value)."
msgstr ""

#. type: =item
#: C/apps/x509.pod:460
msgid "B<esc_msb>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:462
msgid ""
"escape characters with the MSB set, that is with ASCII values larger than "
"127."
msgstr ""

#. type: =item
#: C/apps/x509.pod:465
msgid "B<use_quote>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:467
msgid ""
"escapes some characters by surrounding the whole string with B<\"> "
"characters, without the option all escaping is done with the B<\\> "
"character."
msgstr ""

#. type: =item
#: C/apps/x509.pod:470
msgid "B<utf8>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:472
msgid ""
"convert all strings to UTF8 format first. This is required by RFC2253. If "
"you are lucky enough to have a UTF8 compatible terminal then the use of this "
"option (and B<not> setting B<esc_msb>) may result in the correct display of "
"multibyte (international) characters. Is this option is not present then "
"multibyte characters larger than 0xff will be represented using the format "
"\\UXXXX for 16 bits and \\WXXXXXXXX for 32 bits.  Also if this option is off "
"any UTF8Strings will be converted to their character form first."
msgstr ""

#. type: =item
#: C/apps/x509.pod:481
msgid "B<no_type>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:483
msgid ""
"this option does not attempt to interpret multibyte characters in any "
"way. That is their content octets are merely dumped as though one octet "
"represents each character. This is useful for diagnostic purposes but will "
"result in rather odd looking output."
msgstr ""

#. type: =item
#: C/apps/x509.pod:488
msgid "B<show_type>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:490
msgid ""
"show the type of the ASN1 character string. The type precedes the field "
"contents. For example \"BMPSTRING: Hello World\"."
msgstr ""

#. type: =item
#: C/apps/x509.pod:493
msgid "B<dump_der>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:495
msgid ""
"when this option is set any fields that need to be hexdumped will be dumped "
"using the DER encoding of the field. Otherwise just the content octets will "
"be displayed. Both options use the RFC2253 B<#XXXX...> format."
msgstr ""

#. type: =item
#: C/apps/x509.pod:500
msgid "B<dump_nostr>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:502
msgid ""
"dump non character string types (for example OCTET STRING) if this option is "
"not set then non character string types will be displayed as though each "
"content octet represents a single character."
msgstr ""

#. type: =item
#: C/apps/x509.pod:506
msgid "B<dump_all>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:508
msgid ""
"dump all fields. This option when used with B<dump_der> allows the DER "
"encoding of the structure to be unambiguously determined."
msgstr ""

#. type: =item
#: C/apps/x509.pod:511
msgid "B<dump_unknown>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:513
msgid "dump any field whose OID is not recognised by OpenSSL."
msgstr ""

#. type: =item
#: C/apps/x509.pod:515
msgid ""
"B<sep_comma_plus>, B<sep_comma_plus_space>, B<sep_semi_plus_space>, "
"B<sep_multiline>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:518
msgid ""
"these options determine the field separators. The first character is between "
"RDNs and the second between multiple AVAs (multiple AVAs are very rare and "
"their use is discouraged). The options ending in \"space\" additionally "
"place a space after the separator to make it more readable. The "
"B<sep_multiline> uses a linefeed character for the RDN separator and a "
"spaced B<+> for the AVA separator. It also indents the fields by four "
"characters."
msgstr ""

#. type: =item
#: C/apps/x509.pod:526
msgid "B<dn_rev>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:528
msgid ""
"reverse the fields of the DN. This is required by RFC2253. As a side effect "
"this also reverses the order of multiple AVAs but this is permissible."
msgstr ""

#. type: =item
#: C/apps/x509.pod:532
msgid "B<nofname>, B<sname>, B<lname>, B<oid>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:534
msgid ""
"these options alter how the field name is displayed. B<nofname> does not "
"display the field at all. B<sname> uses the \"short name\" form (CN for "
"commonName for example). B<lname> uses the long form.  B<oid> represents the "
"OID in numerical form and is useful for diagnostic purpose."
msgstr ""

#. type: =item
#: C/apps/x509.pod:540
msgid "B<align>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:542
msgid ""
"align field values for a more readable output. Only usable with "
"B<sep_multiline>."
msgstr ""

#. type: =item
#: C/apps/x509.pod:545
msgid "B<space_eq>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:547
msgid "places spaces round the B<=> character which follows the field name."
msgstr ""

#. type: =head2
#: C/apps/x509.pod:552
msgid "TEXT OPTIONS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:554
msgid ""
"As well as customising the name output format, it is also possible to "
"customise the actual fields printed using the B<certopt> options when the "
"B<text> option is present. The default behaviour is to print all fields."
msgstr ""

#. type: =item
#: C/apps/x509.pod:560
msgid "B<compatible>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:562
msgid ""
"use the old format. This is equivalent to specifying no output options at "
"all."
msgstr ""

#. type: =item
#: C/apps/x509.pod:564
msgid "B<no_header>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:566
msgid ""
"don't print header information: that is the lines saying \"Certificate\" and "
"\"Data\"."
msgstr ""

#. type: =item
#: C/apps/x509.pod:568
msgid "B<no_version>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:570
msgid "don't print out the version number."
msgstr ""

#. type: =item
#: C/apps/x509.pod:572
msgid "B<no_serial>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:574
msgid "don't print out the serial number."
msgstr ""

#. type: =item
#: C/apps/x509.pod:576
msgid "B<no_signame>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:578
msgid "don't print out the signature algorithm used."
msgstr ""

#. type: =item
#: C/apps/x509.pod:580
msgid "B<no_validity>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:582
msgid "don't print the validity, that is the B<notBefore> and B<notAfter> fields."
msgstr ""

#. type: =item
#: C/apps/x509.pod:584
msgid "B<no_subject>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:586
msgid "don't print out the subject name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:588
msgid "B<no_issuer>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:590
msgid "don't print out the issuer name."
msgstr ""

#. type: =item
#: C/apps/x509.pod:592
msgid "B<no_pubkey>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:594
msgid "don't print out the public key."
msgstr ""

#. type: =item
#: C/apps/x509.pod:596
msgid "B<no_sigdump>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:598
msgid "don't give a hexadecimal dump of the certificate signature."
msgstr ""

#. type: =item
#: C/apps/x509.pod:600
msgid "B<no_aux>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:602
msgid "don't print out certificate trust information."
msgstr ""

#. type: =item
#: C/apps/x509.pod:604
msgid "B<no_extensions>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:606
msgid "don't print out any X509V3 extensions."
msgstr ""

#. type: =item
#: C/apps/x509.pod:608
msgid "B<ext_default>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:610
msgid ""
"retain default extension behaviour: attempt to print out unsupported "
"certificate extensions."
msgstr ""

#. type: =item
#: C/apps/x509.pod:612
msgid "B<ext_error>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:614
msgid "print an error message for unsupported certificate extensions."
msgstr ""

#. type: =item
#: C/apps/x509.pod:616
msgid "B<ext_parse>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:618
msgid "ASN1 parse unsupported extensions."
msgstr ""

#. type: =item
#: C/apps/x509.pod:620
msgid "B<ext_dump>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:622
msgid "hex dump unsupported extensions."
msgstr ""

#. type: =item
#: C/apps/x509.pod:624
msgid "B<ca_default>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:626
msgid ""
"the value used by the B<ca> utility, equivalent to B<no_issuer>, "
"B<no_pubkey>, B<no_header>, B<no_version>, B<no_sigdump> and B<no_signame>."
msgstr ""

#. type: =head1
#: C/apps/x509.pod:631 C/crypto/X509_NAME_add_entry_by_txt.pod:74 C/crypto/X509_NAME_get_index_by_NID.pod:62 C/crypto/X509_STORE_CTX_set_verify_cb.pod:58
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:633
msgid ""
"Note: in these examples the '\\' means the example should be all on one "
"line."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:636
msgid "Display the contents of a certificate:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:638
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -text\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:640
msgid "Display the certificate serial number:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:642
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -serial\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:644
msgid "Display the certificate subject name:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:646
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -subject\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:648
msgid "Display the certificate subject name in RFC2253 form:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:650
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -subject -nameopt RFC2253\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:652
msgid ""
"Display the certificate subject name in oneline form on a terminal "
"supporting UTF8:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:655
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -subject -nameopt oneline,-esc_msb\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:657
msgid "Display the certificate MD5 fingerprint:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:659
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -noout -fingerprint\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:661
msgid "Display the certificate SHA1 fingerprint:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:663
#, no-wrap
msgid ""
" openssl x509 -sha1 -in cert.pem -noout -fingerprint\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:665
msgid "Convert a certificate from PEM to DER format:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:667
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -inform PEM -out cert.der -outform DER\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:669
msgid "Convert a certificate to a certificate request:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:671
#, no-wrap
msgid ""
" openssl x509 -x509toreq -in cert.pem -out req.pem -signkey key.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:673
msgid ""
"Convert a certificate request into a self signed certificate using "
"extensions for a CA:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:676
#, no-wrap
msgid ""
" openssl x509 -req -in careq.pem -extfile openssl.cnf -extensions v3_ca \\\n"
"\t-signkey key.pem -out cacert.pem\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:679
msgid ""
"Sign a certificate request using the CA certificate above and add user "
"certificate extensions:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:682
#, no-wrap
msgid ""
" openssl x509 -req -in req.pem -extfile openssl.cnf -extensions v3_usr \\\n"
"\t-CA cacert.pem -CAkey key.pem -CAcreateserial\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:686
msgid ""
"Set a certificate to be trusted for SSL client use and change set its alias "
"to \"Steve's Class 1 CA\""
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:689
#, no-wrap
msgid ""
" openssl x509 -in cert.pem -addtrust clientAuth \\\n"
"\t-setalias \"Steve's Class 1 CA\" -out trust.pem\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/x509.pod:692 C/apps/x509v3_config.pod:479 C/crypto/X509_NAME_ENTRY_get_object.pod:41 C/crypto/X509_NAME_add_entry_by_txt.pod:44 C/crypto/X509_NAME_get_index_by_NID.pod:48 C/crypto/X509_NAME_print_ex.pod:34 C/crypto/X509_STORE_CTX_get_error.pod:283 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:26 C/crypto/X509_STORE_CTX_new.pod:73 C/crypto/X509_STORE_CTX_set_verify_cb.pod:46 C/crypto/X509_STORE_set_verify_cb_func.pod:25 C/crypto/X509_VERIFY_PARAM_set_flags.pod:136 C/crypto/X509_verify_cert.pod:28
msgid "NOTES"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:694
msgid "The PEM format uses the header and footer lines:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:696
#, no-wrap
msgid ""
" -----BEGIN CERTIFICATE-----\n"
" -----END CERTIFICATE-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:699
msgid "it will also handle files containing:"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:701
#, no-wrap
msgid ""
" -----BEGIN X509 CERTIFICATE-----\n"
" -----END X509 CERTIFICATE-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:704
msgid "Trusted certificates have the lines"
msgstr ""

#. type: verbatim
#: C/apps/x509.pod:706
#, no-wrap
msgid ""
" -----BEGIN TRUSTED CERTIFICATE-----\n"
" -----END TRUSTED CERTIFICATE-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:709
msgid ""
"The conversion to UTF8 format used with the name options assumes that "
"T61Strings use the ISO8859-1 character set. This is wrong but Netscape and "
"MSIE do this as do many certificates. So although this is incorrect it is "
"more likely to display the majority of certificates correctly."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:714
msgid ""
"The B<-fingerprint> option takes the digest of the DER encoded certificate.  "
"This is commonly called a \"fingerprint\". Because of the nature of message "
"digests the fingerprint of a certificate is unique to that certificate and "
"two certificates with the same fingerprint can be considered to be the same."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:719
msgid "The Netscape fingerprint uses MD5 whereas MSIE uses SHA1."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:721
msgid ""
"The B<-email> option searches the subject name and the subject alternative "
"name extension. Only unique email addresses will be printed out: it will not "
"print the same address more than once."
msgstr ""

#. type: =head1
#: C/apps/x509.pod:725
msgid "CERTIFICATE EXTENSIONS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:727
msgid ""
"The B<-purpose> option checks the certificate extensions and determines what "
"the certificate can be used for. The actual checks done are rather complex "
"and include various hacks and workarounds to handle broken certificates and "
"software."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:732
msgid ""
"The same code is used when verifying untrusted certificates in chains so "
"this section is useful if a chain is rejected by the verify code."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:735
msgid ""
"The basicConstraints extension CA flag is used to determine whether the "
"certificate can be used as a CA. If the CA flag is true then it is a CA, if "
"the CA flag is false then it is not a CA. B<All> CAs should have the CA flag "
"set to true."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:740
msgid ""
"If the basicConstraints extension is absent then the certificate is "
"considered to be a \"possible CA\" other extensions are checked according to "
"the intended use of the certificate. A warning is given in this case because "
"the certificate should really not be regarded as a CA: however it is allowed "
"to be a CA to work around some broken software."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:746
msgid ""
"If the certificate is a V1 certificate (and thus has no extensions) and it "
"is self signed it is also assumed to be a CA but a warning is again given: "
"this is to work around the problem of Verisign roots which are V1 self "
"signed certificates."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:751
msgid ""
"If the keyUsage extension is present then additional restraints are made on "
"the uses of the certificate. A CA certificate B<must> have the keyCertSign "
"bit set if the keyUsage extension is present."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:755
msgid ""
"The extended key usage extension places additional restrictions on the "
"certificate uses. If this extension is present (whether critical or not)  "
"the key can only be used for the purposes specified."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:759
msgid ""
"A complete description of each test is given below. The comments about "
"basicConstraints and keyUsage and V1 certificates above apply to B<all> CA "
"certificates."
msgstr ""

#. type: =item
#: C/apps/x509.pod:766
msgid "B<SSL Client>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:768
msgid ""
"The extended key usage extension must be absent or include the \"web client "
"authentication\" OID.  keyUsage must be absent or it must have the "
"digitalSignature bit set. Netscape certificate type must be absent or it "
"must have the SSL client bit set."
msgstr ""

#. type: =item
#: C/apps/x509.pod:773
msgid "B<SSL Client CA>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:775
msgid ""
"The extended key usage extension must be absent or include the \"web client "
"authentication\" OID. Netscape certificate type must be absent or it must "
"have the SSL CA bit set: this is used as a work around if the "
"basicConstraints extension is absent."
msgstr ""

#. type: =item
#: C/apps/x509.pod:780
msgid "B<SSL Server>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:782
msgid ""
"The extended key usage extension must be absent or include the \"web server "
"authentication\" and/or one of the SGC OIDs.  keyUsage must be absent or it "
"must have the digitalSignature, the keyEncipherment set or both bits set.  "
"Netscape certificate type must be absent or have the SSL server bit set."
msgstr ""

#. type: =item
#: C/apps/x509.pod:787
msgid "B<SSL Server CA>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:789
msgid ""
"The extended key usage extension must be absent or include the \"web server "
"authentication\" and/or one of the SGC OIDs.  Netscape certificate type must "
"be absent or the SSL CA bit must be set: this is used as a work around if "
"the basicConstraints extension is absent."
msgstr ""

#. type: =item
#: C/apps/x509.pod:794
msgid "B<Netscape SSL Server>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:796
msgid ""
"For Netscape SSL clients to connect to an SSL server it must have the "
"keyEncipherment bit set if the keyUsage extension is present. This isn't "
"always valid because some cipher suites use the key for digital signing.  "
"Otherwise it is the same as a normal SSL server."
msgstr ""

#. type: =item
#: C/apps/x509.pod:801
msgid "B<Common S/MIME Client Tests>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:803
msgid ""
"The extended key usage extension must be absent or include the \"email "
"protection\" OID. Netscape certificate type must be absent or should have "
"the S/MIME bit set. If the S/MIME bit is not set in netscape certificate "
"type then the SSL client bit is tolerated as an alternative but a warning is "
"shown: this is because some Verisign certificates don't set the S/MIME bit."
msgstr ""

#. type: =item
#: C/apps/x509.pod:809
msgid "B<S/MIME Signing>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:811
msgid ""
"In addition to the common S/MIME client tests the digitalSignature bit must "
"be set if the keyUsage extension is present."
msgstr ""

#. type: =item
#: C/apps/x509.pod:814
msgid "B<S/MIME Encryption>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:816
msgid ""
"In addition to the common S/MIME tests the keyEncipherment bit must be set "
"if the keyUsage extension is present."
msgstr ""

#. type: =item
#: C/apps/x509.pod:819
msgid "B<S/MIME CA>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:821
msgid ""
"The extended key usage extension must be absent or include the \"email "
"protection\" OID. Netscape certificate type must be absent or must have the "
"S/MIME CA bit set: this is used as a work around if the basicConstraints "
"extension is absent."
msgstr ""

#. type: =item
#: C/apps/x509.pod:826
msgid "B<CRL Signing>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:828
msgid ""
"The keyUsage extension must be absent or it must have the CRL signing bit "
"set."
msgstr ""

#. type: =item
#: C/apps/x509.pod:831
msgid "B<CRL Signing CA>"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:833
msgid ""
"The normal CA tests apply. Except in this case the basicConstraints "
"extension must be present."
msgstr ""

#. type: =head1
#: C/apps/x509.pod:838 C/crypto/X509_NAME_add_entry_by_txt.pod:103 C/crypto/X509_STORE_CTX_new.pod:90 C/crypto/X509_STORE_set_verify_cb_func.pod:32 C/crypto/X509_VERIFY_PARAM_set_flags.pod:142 C/crypto/X509_verify_cert.pod:40
msgid "BUGS"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:840
msgid ""
"Extensions in certificates are not transferred to certificate requests and "
"vice versa."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:843
msgid ""
"It is possible to produce invalid certificates or requests by specifying the "
"wrong private key or using inconsistent options in some cases: these should "
"be checked."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:847
msgid ""
"There should be options to explicitly set such things as start and end dates "
"rather than an offset from the current time."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:850
msgid ""
"The code to implement the verify behaviour described in the B<TRUST "
"SETTINGS> is currently being developed. It thus describes the intended "
"behaviour rather than the current behaviour. It is hoped that it will "
"represent reality in OpenSSL 0.9.5 and later."
msgstr ""

#. type: =head1
#: C/apps/x509.pod:855 C/apps/x509v3_config.pod:523 C/crypto/X509_NAME_ENTRY_get_object.pod:65 C/crypto/X509_NAME_add_entry_by_txt.pod:110 C/crypto/X509_NAME_get_index_by_NID.pod:100 C/crypto/X509_NAME_print_ex.pod:97 C/crypto/X509_new.pod:31 C/crypto/X509_STORE_CTX_get_error.pod:297 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:32 C/crypto/X509_STORE_CTX_new.pod:113 C/crypto/X509_STORE_CTX_set_verify_cb.pod:150 C/crypto/X509_STORE_set_verify_cb_func.pod:42 C/crypto/X509_VERIFY_PARAM_set_flags.pod:163 C/crypto/X509_verify_cert.pod:45 C/crypto/x509.pod:48
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:857
msgid ""
"L<req(1)|req(1)>, L<ca(1)|ca(1)>, L<genrsa(1)|genrsa(1)>, "
"L<gendsa(1)|gendsa(1)>, L<verify(1)|verify(1)>, "
"L<x509v3_config(5)|x509v3_config(5)>"
msgstr ""

#. type: =head1
#: C/apps/x509.pod:861 C/apps/x509v3_config.pod:513 C/crypto/X509_NAME_ENTRY_get_object.pod:70 C/crypto/X509_NAME_add_entry_by_txt.pod:114 C/crypto/X509_NAME_get_index_by_NID.pod:104 C/crypto/X509_NAME_print_ex.pod:101 C/crypto/X509_new.pod:35 C/crypto/X509_STORE_CTX_get_error.pod:301 C/crypto/X509_STORE_CTX_get_ex_new_index.pod:36 C/crypto/X509_STORE_CTX_new.pod:118 C/crypto/X509_STORE_CTX_set_verify_cb.pod:156 C/crypto/X509_STORE_set_verify_cb_func.pod:47 C/crypto/X509_VERIFY_PARAM_set_flags.pod:167 C/crypto/X509_verify_cert.pod:49
msgid "HISTORY"
msgstr ""

#. type: textblock
#: C/apps/x509.pod:863
msgid "Before OpenSSL 0.9.8, the default digest for RSA keys was MD5."
msgstr ""

#. type: textblock
#: C/apps/x509.pod:865
msgid ""
"The hash algorithm used in the B<-subject_hash> and B<-issuer_hash> options "
"before OpenSSL 1.0.0 was based on the deprecated MD5 algorithm and the "
"encoding of the distinguished name. In OpenSSL 1.0.0 and later it is based "
"on a canonical version of the DN using SHA1. This means that any directories "
"using the old form must have their links rebuilt using B<c_rehash> or "
"similar."
msgstr ""

#. type: =for
#: C/apps/x509v3_config.pod:3
msgid "comment openssl_manual_section:5"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:7
msgid "x509v3_config - X509 V3 certificate extension configuration format"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:11
msgid ""
"Several of the OpenSSL utilities can add extensions to a certificate or "
"certificate request based on the contents of a configuration file."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:14
msgid ""
"Typically the application will contain an option to point to an extension "
"section. Each line of the extension section takes the form:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:17
#, no-wrap
msgid ""
" extension_name=[critical,] extension_options\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:19
msgid "If B<critical> is present then the extension will be critical."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:21
msgid ""
"The format of B<extension_options> depends on the value of "
"B<extension_name>."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:23
msgid ""
"There are four main types of extension: I<string> extensions, "
"I<multi-valued> extensions, I<raw> and I<arbitrary> extensions."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:26
msgid ""
"String extensions simply have a string which contains either the value "
"itself or how it is obtained."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:29 C/apps/x509v3_config.pod:68
msgid "For example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:31
#, no-wrap
msgid ""
" nsComment=\"This is a Comment\"\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:33
msgid ""
"Multi-valued extensions have a short form and a long form. The short form is "
"a list of names and values:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:36
#, no-wrap
msgid ""
" basicConstraints=critical,CA:true,pathlen:1\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:38
msgid "The long form allows the values to be placed in a separate section:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:40
#, no-wrap
msgid ""
" basicConstraints=critical,@bs_section\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:42
#, no-wrap
msgid ""
" [bs_section]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:44
#, no-wrap
msgid ""
" CA=true\n"
" pathlen=1\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:47
msgid "Both forms are equivalent."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:49
msgid ""
"The syntax of raw extensions is governed by the extension code: it can for "
"example contain data in multiple sections. The correct syntax to use is "
"defined by the extension code itself: check out the certificate policies "
"extension for an example."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:54
msgid ""
"If an extension type is unsupported then the I<arbitrary> extension syntax "
"must be used, see the L<ARBITRARY EXTENSIONS|/\"ARBITRARY EXTENSIONS\"> "
"section for more details."
msgstr ""

#. type: =head1
#: C/apps/x509v3_config.pod:57
msgid "STANDARD EXTENSIONS"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:59
msgid "The following sections describe each supported extension in detail."
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:61
msgid "Basic Constraints."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:63
msgid ""
"This is a multi valued extension which indicates whether a certificate is a "
"CA certificate. The first (mandatory) name is B<CA> followed by B<TRUE> or "
"B<FALSE>. If B<CA> is B<TRUE> then an optional B<pathlen> name followed by "
"an non-negative value can be included."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:70
#, no-wrap
msgid ""
" basicConstraints=CA:TRUE\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:72
#, no-wrap
msgid ""
" basicConstraints=CA:FALSE\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:74
#, no-wrap
msgid ""
" basicConstraints=critical,CA:TRUE, pathlen:0\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:76
msgid ""
"A CA certificate B<must> include the basicConstraints value with the CA "
"field set to TRUE. An end user certificate must either set CA to FALSE or "
"exclude the extension entirely. Some software may require the inclusion of "
"basicConstraints with CA set to FALSE for end entity certificates."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:81
msgid ""
"The pathlen parameter indicates the maximum number of CAs that can appear "
"below this one in a chain. So if you have a CA with a pathlen of zero it can "
"only be used to sign end user certificates and not further CAs."
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:86
msgid "Key Usage."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:88
msgid ""
"Key usage is a multi valued extension consisting of a list of names of the "
"permitted key usages."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:91
msgid ""
"The supporte names are: digitalSignature, nonRepudiation, keyEncipherment, "
"dataEncipherment, keyAgreement, keyCertSign, cRLSign, encipherOnly and "
"decipherOnly."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:95 C/apps/x509v3_config.pod:125 C/apps/x509v3_config.pod:183 C/apps/x509v3_config.pod:386
msgid "Examples:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:97
#, no-wrap
msgid ""
" keyUsage=digitalSignature, nonRepudiation\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:99
#, no-wrap
msgid ""
" keyUsage=critical, keyCertSign\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:102
msgid "Extended Key Usage."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:104
msgid ""
"This extensions consists of a list of usages indicating purposes for which "
"the certificate public key can be used for,"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:107
msgid ""
"These can either be object short names of the dotted numerical form of "
"OIDs.  While any OID can be used only certain values make sense. In "
"particular the following PKIX, NS and MS values are meaningful:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:111
#, no-wrap
msgid ""
" Value\t\t\tMeaning\n"
" -----\t\t\t-------\n"
" serverAuth\t\tSSL/TLS Web Server Authentication.\n"
" clientAuth\t\tSSL/TLS Web Client Authentication.\n"
" codeSigning\t\tCode signing.\n"
" emailProtection\tE-mail Protection (S/MIME).\n"
" timeStamping\t\tTrusted Timestamping\n"
" msCodeInd\t\tMicrosoft Individual Code Signing (authenticode)\n"
" msCodeCom\t\tMicrosoft Commercial Code Signing (authenticode)\n"
" msCTLSign\t\tMicrosoft Trust List Signing\n"
" msSGC\t\t\tMicrosoft Server Gated Crypto\n"
" msEFS\t\t\tMicrosoft Encrypted File System\n"
" nsSGC\t\t\tNetscape Server Gated Crypto\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:127
#, no-wrap
msgid ""
" extendedKeyUsage=critical,codeSigning,1.2.3.4\n"
" extendedKeyUsage=nsSGC,msSGC\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:131
msgid "Subject Key Identifier."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:133
msgid ""
"This is really a string extension and can take two possible values. Either "
"the word B<hash> which will automatically follow the guidelines in RFC3280 "
"or a hex string giving the extension value to include. The use of the hex "
"string is strongly discouraged."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:138 C/apps/x509v3_config.pod:156 C/apps/x509v3_config.pod:208 C/apps/x509v3_config.pod:221 C/apps/x509v3_config.pod:289 C/apps/x509v3_config.pod:337 C/apps/x509v3_config.pod:364 C/apps/x509v3_config.pod:373 C/apps/x509v3_config.pod:399 C/apps/x509v3_config.pod:414
msgid "Example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:140
#, no-wrap
msgid ""
" subjectKeyIdentifier=hash\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:143
msgid "Authority Key Identifier."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:145
msgid ""
"The authority key identifier extension permits two options. keyid and "
"issuer: both can take the optional value \"always\"."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:148
msgid ""
"If the keyid option is present an attempt is made to copy the subject key "
"identifier from the parent certificate. If the value \"always\" is present "
"then an error is returned if the option fails."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:152
msgid ""
"The issuer option copies the issuer and serial number from the issuer "
"certificate. This will only be done if the keyid option fails or is not "
"included unless the \"always\" flag will always include the value."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:158
#, no-wrap
msgid ""
" authorityKeyIdentifier=keyid,issuer\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:161
msgid "Subject Alternative Name."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:163
msgid ""
"The subject alternative name extension allows various literal values to be "
"included in the configuration file. These include B<email> (an email "
"address)  B<URI> a uniform resource indicator, B<DNS> (a DNS domain name), "
"B<RID> (a registered ID: OBJECT IDENTIFIER), B<IP> (an IP address), "
"B<dirName> (a distinguished name) and otherName."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:169
msgid ""
"The email option include a special 'copy' value. This will automatically "
"include and email addresses contained in the certificate subject name in the "
"extension."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:173
msgid ""
"The IP address used in the B<IP> options can be in either IPv4 or IPv6 "
"format."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:175
msgid ""
"The value of B<dirName> should point to a section containing the "
"distinguished name to use as a set of name value pairs. Multi values AVAs "
"can be formed by preceding the name with a B<+> character."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:179
msgid ""
"otherName can include arbitrary data associated with an OID: the value "
"should be the OID followed by a semicolon and the content in standard "
"L<ASN1_generate_nconf(3)|ASN1_generate_nconf(3)> format."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:185
#, no-wrap
msgid ""
" subjectAltName=email:copy,email:my@other.address,URI:http://my.url.here/\n"
" subjectAltName=IP:192.168.7.1\n"
" subjectAltName=IP:13::17\n"
" subjectAltName=email:my@other.address,RID:1.2.3.4\n"
" subjectAltName=otherName:1.2.3.4;UTF8:some other identifier\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:191
#, no-wrap
msgid ""
" subjectAltName=dirName:dir_sect\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:193
#, no-wrap
msgid ""
" [dir_sect]\n"
" C=UK\n"
" O=My Organization\n"
" OU=My Unit\n"
" CN=My Name\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:200
msgid "Issuer Alternative Name."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:202
msgid ""
"The issuer alternative name option supports all the literal options of "
"subject alternative name. It does B<not> support the email:copy option "
"because that would not make sense. It does support an additional issuer:copy "
"option that will copy all the subject alternative name values from the "
"issuer certificate (if possible)."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:210
#, no-wrap
msgid ""
" issuserAltName = issuer:copy\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:213
msgid "Authority Info Access."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:215
msgid ""
"The authority information access extension gives details about how to access "
"certain information relating to the CA. Its syntax is accessOID;location "
"where I<location> has the same syntax as subject alternative name (except "
"that email:copy is not supported). accessOID can be any valid OID but only "
"certain values are meaningful, for example OCSP and caIssuers."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:223
#, no-wrap
msgid ""
" authorityInfoAccess = OCSP;URI:http://ocsp.my.host/\n"
" authorityInfoAccess = caIssuers;URI:http://my.ca/ca.html\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:227
msgid "CRL distribution points."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:229
msgid ""
"This is a multi-valued extension whose options can be either in name:value "
"pair using the same form as subject alternative name or a single value "
"representing a section name containing all the distribution point fields."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:233
msgid ""
"For a name:value pair a new DistributionPoint with the fullName field set to "
"the given value both the cRLissuer and reasons fields are omitted in this "
"case."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:236
msgid ""
"In the single option case the section indicated contains values for each "
"field. In this section:"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:239
msgid ""
"If the name is \"fullname\" the value field should contain the full name of "
"the distribution point in the same format as subject alternative name."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:242
msgid ""
"If the name is \"relativename\" then the value field should contain a "
"section name whose contents represent a DN fragment to be placed in this "
"field."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:245
msgid ""
"The name \"CRLIssuer\" if present should contain a value for this field in "
"subject alternative name format."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:248
msgid ""
"If the name is \"reasons\" the value field should consist of a comma "
"separated field containing the reasons. Valid reasons are: "
"\"keyCompromise\", \"CACompromise\", \"affiliationChanged\", \"superseded\", "
"\"cessationOfOperation\", \"certificateHold\", \"privilegeWithdrawn\" and "
"\"AACompromise\"."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:254
msgid "Simple examples:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:256
#, no-wrap
msgid ""
" crlDistributionPoints=URI:http://myhost.com/myca.crl\n"
" crlDistributionPoints=URI:http://my.com/my.crl,URI:http://oth.com/my.crl\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:259
msgid "Full distribution point example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:261
#, no-wrap
msgid ""
" crlDistributionPoints=crldp1_section\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:263
#, no-wrap
msgid ""
" [crldp1_section]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:265
#, no-wrap
msgid ""
" fullname=URI:http://myhost.com/myca.crl\n"
" CRLissuer=dirName:issuer_sect\n"
" reasons=keyCompromise, CACompromise\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:269 C/apps/x509v3_config.pod:299
#, no-wrap
msgid ""
" [issuer_sect]\n"
" C=UK\n"
" O=Organisation\n"
" CN=Some Name\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:274
msgid "Issuing Distribution Point"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:276
msgid ""
"This extension should only appear in CRLs. It is a multi valued extension "
"whose syntax is similar to the \"section\" pointed to by the CRL "
"distribution points extension with a few differences."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:280
msgid "The names \"reasons\" and \"CRLissuer\" are not recognized."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:282
msgid ""
"The name \"onlysomereasons\" is accepted which sets this field. The value is "
"in the same format as the CRL distribution point \"reasons\" field."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:285
msgid ""
"The names \"onlyuser\", \"onlyCA\", \"onlyAA\" and \"indirectCRL\" are also "
"accepted the values should be a boolean value (TRUE or FALSE) to indicate "
"the value of the corresponding field."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:291
#, no-wrap
msgid ""
" issuingDistributionPoint=critical, @idp_section\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:293
#, no-wrap
msgid ""
" [idp_section]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:295
#, no-wrap
msgid ""
" fullname=URI:http://myhost.com/myca.crl\n"
" indirectCRL=TRUE\n"
" onlysomereasons=keyCompromise, CACompromise\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:304
#, no-wrap
msgid " \n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:305
msgid "Certificate Policies."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:307
msgid ""
"This is a I<raw> extension. All the fields of this extension can be set by "
"using the appropriate syntax."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:310
msgid ""
"If you follow the PKIX recommendations and just using one OID then you just "
"include the value of that OID. Multiple OIDs can be set separated by commas, "
"for example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:314
#, no-wrap
msgid ""
" certificatePolicies= 1.2.4.5, 1.1.3.4\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:316
msgid ""
"If you wish to include qualifiers then the policy OID and qualifiers need to "
"be specified in a separate section: this is done by using the @section "
"syntax instead of a literal OID value."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:320
msgid ""
"The section referred to must include the policy OID using the name "
"policyIdentifier, cPSuri qualifiers can be included using the syntax:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:323
#, no-wrap
msgid ""
" CPS.nnn=value\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:325
msgid "userNotice qualifiers can be set using the syntax:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:327
#, no-wrap
msgid ""
" userNotice.nnn=@notice\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:329
msgid ""
"The value of the userNotice qualifier is specified in the relevant section.  "
"This section can include explicitText, organization and noticeNumbers "
"options. explicitText and organization are text strings, noticeNumbers is a "
"comma separated list of numbers. The organization and noticeNumbers options "
"(if included) must BOTH be present. If you use the userNotice option with "
"IE5 then you need the 'ia5org' option at the top level to modify the "
"encoding: otherwise it will not be interpreted properly."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:339
#, no-wrap
msgid ""
" certificatePolicies=ia5org,1.2.3.4,1.5.6.7.8,@polsect\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:341
#, no-wrap
msgid ""
" [polsect]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:343
#, no-wrap
msgid ""
" policyIdentifier = 1.3.5.8\n"
" CPS.1=\"http://my.host.name/\"\n"
" CPS.2=\"http://my.your.name/\"\n"
" userNotice.1=@notice\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:348
#, no-wrap
msgid ""
" [notice]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:350
#, no-wrap
msgid ""
" explicitText=\"Explicit Text Here\"\n"
" organization=\"Organisation Name\"\n"
" noticeNumbers=1,2,3,4\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:354
msgid ""
"The B<ia5org> option changes the type of the I<organization> field. In "
"RFC2459 it can only be of type DisplayText. In RFC3280 IA5Strring is also "
"permissible.  Some software (for example some versions of MSIE) may require "
"ia5org."
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:358
msgid "Policy Constraints"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:360
msgid ""
"This is a multi-valued extension which consisting of the names "
"B<requireExplicitPolicy> or B<inhibitPolicyMapping> and a non negative "
"intger value. At least one component must be present."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:366
#, no-wrap
msgid ""
" policyConstraints = requireExplicitPolicy:3\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:369
msgid "Inhibit Any Policy"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:371
msgid "This is a string extension whose value must be a non negative integer."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:375
#, no-wrap
msgid ""
" inhibitAnyPolicy = 2\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:378
msgid "Name Constraints"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:380
msgid ""
"The name constraints extension is a multi-valued extension. The name should "
"begin with the word B<permitted> or B<excluded> followed by a B<;>. The rest "
"of the name and the value follows the syntax of subjectAltName except "
"email:copy is not supported and the B<IP> form should consist of an IP "
"addresses and subnet mask separated by a B</>."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:388
#, no-wrap
msgid ""
" nameConstraints=permitted;IP:192.168.0.0/255.255.0.0\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:390
#, no-wrap
msgid ""
" nameConstraints=permitted;email:.somedomain.com\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:392
#, no-wrap
msgid ""
" nameConstraints=excluded;email:.com\n"
"issuingDistributionPoint = idp_section\n"
"\n"
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:395
msgid "OCSP No Check"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:397
msgid "The OCSP No Check extension is a string extension but its value is ignored."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:401
#, no-wrap
msgid ""
" noCheck = ignored\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/x509v3_config.pod:404
msgid "DEPRECATED EXTENSIONS"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:406
msgid ""
"The following extensions are non standard, Netscape specific and largely "
"obsolete. Their use in new applications is discouraged."
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:409
msgid "Netscape String extensions."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:411
msgid ""
"Netscape Comment (B<nsComment>) is a string extension containing a comment "
"which will be displayed when the certificate is viewed in some browsers."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:416
#, no-wrap
msgid ""
" nsComment = \"Some Random Comment\"\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:418
msgid ""
"Other supported extensions in this category are: B<nsBaseUrl>, "
"B<nsRevocationUrl>, B<nsCaRevocationUrl>, B<nsRenewalUrl>, B<nsCaPolicyUrl> "
"and B<nsSslServerName>."
msgstr ""

#. type: =head2
#: C/apps/x509v3_config.pod:423
msgid "Netscape Certificate Type"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:425
msgid ""
"This is a multi-valued extensions which consists of a list of flags to be "
"included. It was used to indicate the purposes for which a certificate could "
"be used. The basicConstraints, keyUsage and extended key usage extensions "
"are now used instead."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:430
msgid ""
"Acceptable values for nsCertType are: B<client>, B<server>, B<email>, "
"B<objsign>, B<reserved>, B<sslCA>, B<emailCA>, B<objCA>."
msgstr ""

#. type: =head1
#: C/apps/x509v3_config.pod:434
msgid "ARBITRARY EXTENSIONS"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:436
msgid ""
"If an extension is not supported by the OpenSSL code then it must be encoded "
"using the arbitrary extension format. It is also possible to use the "
"arbitrary format for supported extensions. Extreme care should be taken to "
"ensure that the data is formatted correctly for the given extension type."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:441
msgid "There are two ways to encode arbitrary extensions."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:443
msgid ""
"The first way is to use the word ASN1 followed by the extension content "
"using the same syntax as L<ASN1_generate_nconf(3)|ASN1_generate_nconf(3)>.  "
"For example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:447
#, no-wrap
msgid ""
" 1.2.3.4=critical,ASN1:UTF8String:Some random data\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:449
#, no-wrap
msgid ""
" 1.2.3.4=ASN1:SEQUENCE:seq_sect\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:451
#, no-wrap
msgid ""
" [seq_sect]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:453
#, no-wrap
msgid ""
" field1 = UTF8:field1\n"
" field2 = UTF8:field2\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:456
msgid ""
"It is also possible to use the word DER to include the raw encoded data in "
"any extension."
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:459
#, no-wrap
msgid ""
" 1.2.3.4=critical,DER:01:02:03:04\n"
" 1.2.3.4=DER:01020304\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:462
msgid ""
"The value following DER is a hex dump of the DER encoding of the extension "
"Any extension can be placed in this form to override the default behaviour.  "
"For example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:466
#, no-wrap
msgid ""
" basicConstraints=critical,DER:00:01:02:03\n"
"\n"
msgstr ""

#. type: =head1
#: C/apps/x509v3_config.pod:468 C/crypto/X509_STORE_CTX_set_verify_cb.pod:38
msgid "WARNING"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:470
msgid ""
"There is no guarantee that a specific implementation will process a given "
"extension. It may therefore be sometimes possible to use certificates for "
"purposes prohibited by their extensions because a specific application does "
"not recognize or honour the values of the relevant extensions."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:475
msgid ""
"The DER and ASN1 options should be used with caution. It is possible to "
"create totally invalid extensions if they are not used carefully."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:481
msgid ""
"If an extension is multi-value and a field value must contain a comma the "
"long form must be used otherwise the comma would be misinterpreted as a "
"field separator. For example:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:485
#, no-wrap
msgid ""
" subjectAltName=URI:ldap://somehost.com/CN=foo,OU=bar\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:487
msgid "will produce an error but the equivalent form:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:489
#, no-wrap
msgid ""
" subjectAltName=@subject_alt_section\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:491
#, no-wrap
msgid ""
" [subject_alt_section]\n"
" subjectAltName=URI:ldap://somehost.com/CN=foo,OU=bar\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:494
msgid "is valid."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:496
msgid ""
"Due to the behaviour of the OpenSSL B<conf> library the same field name can "
"only occur once in a section. This means that:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:499
#, no-wrap
msgid ""
" subjectAltName=@alt_section\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:501 C/apps/x509v3_config.pod:508
#, no-wrap
msgid ""
" [alt_section]\n"
"\n"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:503
#, no-wrap
msgid ""
" email=steve@here\n"
" email=steve@there\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:506
msgid ""
"will only recognize the last value. This can be worked around by using the "
"form:"
msgstr ""

#. type: verbatim
#: C/apps/x509v3_config.pod:510
#, no-wrap
msgid ""
" email.1=steve@here\n"
" email.2=steve@there\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:515
msgid "The X509v3 extension code was first added to OpenSSL 0.9.2."
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:517
msgid ""
"Policy mappings, inhibit any policy and name constraints support was added "
"in OpenSSL 0.9.8"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:520
msgid ""
"The B<directoryName> and B<otherName> option as well as the B<ASN1> option "
"for arbitrary extensions was added in OpenSSL 0.9.8"
msgstr ""

#. type: textblock
#: C/apps/x509v3_config.pod:525
msgid ""
"L<req(1)|req(1)>, L<ca(1)|ca(1)>, L<x509(1)|x509(1)>, "
"L<ASN1_generate_nconf(3)|ASN1_generate_nconf(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:5
msgid ""
"X509_NAME_ENTRY_get_object, X509_NAME_ENTRY_get_data, "
"X509_NAME_ENTRY_set_object, X509_NAME_ENTRY_set_data, "
"X509_NAME_ENTRY_create_by_txt, X509_NAME_ENTRY_create_by_NID, "
"X509_NAME_ENTRY_create_by_OBJ - X509_NAME_ENTRY utility functions"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_ENTRY_get_object.pod:12 C/crypto/X509_NAME_add_entry_by_txt.pod:10 C/crypto/X509_NAME_get_index_by_NID.pod:11 C/crypto/X509_NAME_print_ex.pod:10 C/crypto/X509_new.pod:9 C/crypto/X509_verify_cert.pod:9 C/crypto/x509.pod:9
#, no-wrap
msgid ""
" #include <openssl/x509.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_ENTRY_get_object.pod:14
#, no-wrap
msgid ""
" ASN1_OBJECT * X509_NAME_ENTRY_get_object(X509_NAME_ENTRY *ne);\n"
" ASN1_STRING * X509_NAME_ENTRY_get_data(X509_NAME_ENTRY *ne);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_ENTRY_get_object.pod:17
#, no-wrap
msgid ""
" int X509_NAME_ENTRY_set_object(X509_NAME_ENTRY *ne, ASN1_OBJECT *obj);\n"
" int X509_NAME_ENTRY_set_data(X509_NAME_ENTRY *ne, int type, const unsigned "
"char *bytes, int len);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_ENTRY_get_object.pod:20
#, no-wrap
msgid ""
" X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_txt(X509_NAME_ENTRY **ne, const "
"char *field, int type, const unsigned char *bytes, int len);\n"
" X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_NID(X509_NAME_ENTRY **ne, int "
"nid, int type,unsigned char *bytes, int len);\n"
" X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_OBJ(X509_NAME_ENTRY **ne, "
"ASN1_OBJECT *obj, int type, const unsigned char *bytes, int len);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:26
msgid ""
"X509_NAME_ENTRY_get_object() retrieves the field name of B<ne> in and "
"B<ASN1_OBJECT> structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:29
msgid ""
"X509_NAME_ENTRY_get_data() retrieves the field value of B<ne> in and "
"B<ASN1_STRING> structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:32
msgid "X509_NAME_ENTRY_set_object() sets the field name of B<ne> to B<obj>."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:34
msgid ""
"X509_NAME_ENTRY_set_data() sets the field value of B<ne> to string type "
"B<type> and value determined by B<bytes> and B<len>."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:37
msgid ""
"X509_NAME_ENTRY_create_by_txt(), X509_NAME_ENTRY_create_by_NID()  and "
"X509_NAME_ENTRY_create_by_OBJ() create and return an B<X509_NAME_ENTRY> "
"structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:43
msgid ""
"X509_NAME_ENTRY_get_object() and X509_NAME_ENTRY_get_data() can be used to "
"examine an B<X509_NAME_ENTRY> function as returned by X509_NAME_get_entry() "
"for example."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:47
msgid ""
"X509_NAME_ENTRY_create_by_txt(), X509_NAME_ENTRY_create_by_NID(), and "
"X509_NAME_ENTRY_create_by_OBJ() create and return an"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:50
msgid ""
"X509_NAME_ENTRY_create_by_txt(), X509_NAME_ENTRY_create_by_OBJ(), "
"X509_NAME_ENTRY_create_by_NID() and X509_NAME_ENTRY_set_data()  are seldom "
"used in practice because B<X509_NAME_ENTRY> structures are almost always "
"part of B<X509_NAME> structures and the corresponding B<X509_NAME> functions "
"are typically used to create and add new entries in a single operation."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:57
msgid ""
"The arguments of these functions support similar options to the similarly "
"named ones of the corresponding B<X509_NAME> functions such as "
"X509_NAME_add_entry_by_txt(). So for example B<type> can be set to "
"B<MBSTRING_ASC> but in the case of X509_set_data() the field name must be "
"set first so the relevant field information can be looked up internally."
msgstr ""

#. type: =head1
#: C/crypto/X509_NAME_ENTRY_get_object.pod:63 C/crypto/X509_NAME_add_entry_by_txt.pod:94 C/crypto/X509_NAME_get_index_by_NID.pod:90 C/crypto/X509_new.pod:23 C/crypto/X509_STORE_CTX_get_error.pod:52 C/crypto/X509_STORE_CTX_new.pod:96 C/crypto/X509_STORE_CTX_set_verify_cb.pod:54 C/crypto/X509_STORE_set_verify_cb_func.pod:37 C/crypto/X509_VERIFY_PARAM_set_flags.pod:64 C/crypto/X509_verify_cert.pod:19
msgid "RETURN VALUES"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:67
msgid ""
"L<ERR_get_error(3)|ERR_get_error(3)>, L<d2i_X509_NAME(3)|d2i_X509_NAME(3)>, "
"L<OBJ_nid2obj(3),OBJ_nid2obj(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_ENTRY_get_object.pod:72 C/crypto/X509_NAME_get_index_by_NID.pod:106 C/crypto/X509_NAME_print_ex.pod:103 C/crypto/X509_STORE_CTX_get_error.pod:303 C/crypto/X509_VERIFY_PARAM_set_flags.pod:169
msgid "TBA"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:5
msgid ""
"X509_NAME_add_entry_by_txt, X509_NAME_add_entry_by_OBJ, "
"X509_NAME_add_entry_by_NID, X509_NAME_add_entry, X509_NAME_delete_entry - "
"X509_NAME modification functions"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:12
#, no-wrap
msgid ""
" int X509_NAME_add_entry_by_txt(X509_NAME *name, const char *field, int "
"type, const unsigned char *bytes, int len, int loc, int set);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:14
#, no-wrap
msgid ""
" int X509_NAME_add_entry_by_OBJ(X509_NAME *name, ASN1_OBJECT *obj, int type, "
"unsigned char *bytes, int len, int loc, int set);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:16
#, no-wrap
msgid ""
" int X509_NAME_add_entry_by_NID(X509_NAME *name, int nid, int type, unsigned "
"char *bytes, int len, int loc, int set);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:18
#, no-wrap
msgid ""
" int X509_NAME_add_entry(X509_NAME *name,X509_NAME_ENTRY *ne, int loc, int "
"set);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:20
#, no-wrap
msgid ""
" X509_NAME_ENTRY *X509_NAME_delete_entry(X509_NAME *name, int loc);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:24
msgid ""
"X509_NAME_add_entry_by_txt(), X509_NAME_add_entry_by_OBJ() and "
"X509_NAME_add_entry_by_NID() add a field whose name is defined by a string "
"B<field>, an object B<obj> or a NID B<nid> respectively.  The field value to "
"be added is in B<bytes> of length B<len>. If B<len> is -1 then the field "
"length is calculated internally using strlen(bytes)."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:31
msgid ""
"The type of field is determined by B<type> which can either be a definition "
"of the type of B<bytes> (such as B<MBSTRING_ASC>) or a standard ASN1 type "
"(such as B<V_ASN1_IA5STRING>). The new entry is added to a position "
"determined by B<loc> and B<set>."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:36
msgid ""
"X509_NAME_add_entry() adds a copy of B<X509_NAME_ENTRY> structure B<ne> to "
"B<name>. The new entry is added to a position determined by B<loc> and "
"B<set>. Since a copy of B<ne> is added B<ne> must be freed up after the "
"call."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:41
msgid ""
"X509_NAME_delete_entry() deletes an entry from B<name> at position "
"B<loc>. The deleted entry is returned and must be freed up."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:46
msgid ""
"The use of string types such as B<MBSTRING_ASC> or B<MBSTRING_UTF8> is "
"strongly recommened for the B<type> parameter. This allows the internal code "
"to correctly determine the type of the field and to apply length checks "
"according to the relevant standards. This is done using "
"ASN1_STRING_set_by_NID()."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:52
msgid ""
"If instead an ASN1 type is used no checks are performed and the supplied "
"data in B<bytes> is used directly."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:55
msgid ""
"In X509_NAME_add_entry_by_txt() the B<field> string represents the field "
"name using OBJ_txt2obj(field, 0)."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:58
msgid ""
"The B<loc> and B<set> parameters determine where a new entry should be "
"added. For almost all applications B<loc> can be set to -1 and B<set> to "
"0. This adds a new entry to the end of B<name> as a single valued "
"RelativeDistinguishedName (RDN)."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:63
msgid ""
"B<loc> actually determines the index where the new entry is inserted: if it "
"is -1 it is appended."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:66
msgid ""
"B<set> determines how the new type is added. If it is zero a new RDN is "
"created."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:69
msgid ""
"If B<set> is -1 or 1 it is added to the previous or next RDN structure "
"respectively. This will then be a multivalued RDN: since multivalues RDNs "
"are very seldom used B<set> is almost always set to zero."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:76
msgid "Create an B<X509_NAME> structure:"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:78
msgid "\"C=UK, O=Disorganized Organization, CN=Joe Bloggs\""
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_add_entry_by_txt.pod:80
#, no-wrap
msgid ""
" X509_NAME *nm;\n"
" nm = X509_NAME_new();\n"
" if (nm == NULL)\n"
"\t/* Some error */\n"
" if (!X509_NAME_add_entry_by_txt(nm, MBSTRING_ASC,\n"
"\t\t\t\"C\", \"UK\", -1, -1, 0))\n"
"\t/* Error */\n"
" if (!X509_NAME_add_entry_by_txt(nm, MBSTRING_ASC,\n"
"\t\t\t\"O\", \"Disorganized Organization\", -1, -1, 0))\n"
"\t/* Error */\n"
" if (!X509_NAME_add_entry_by_txt(nm, MBSTRING_ASC,\n"
"\t\t\t\"CN\", \"Joe Bloggs\", -1, -1, 0))\n"
"\t/* Error */\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:96
msgid ""
"X509_NAME_add_entry_by_txt(), X509_NAME_add_entry_by_OBJ(), "
"X509_NAME_add_entry_by_NID() and X509_NAME_add_entry() return 1 for success "
"of 0 if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:100
msgid ""
"X509_NAME_delete_entry() returns either the deleted B<X509_NAME_ENTRY> "
"structure of B<NULL> if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:105
msgid ""
"B<type> can still be set to B<V_ASN1_APP_CHOOSE> to use a different "
"algorithm to determine field types. Since this form does not understand "
"multicharacter types, performs no length checks and can result in invalid "
"field types its use is strongly discouraged."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_add_entry_by_txt.pod:112 C/crypto/X509_NAME_get_index_by_NID.pod:102
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<d2i_X509_NAME(3)|d2i_X509_NAME(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:5
msgid ""
"X509_NAME_get_index_by_NID, X509_NAME_get_index_by_OBJ, X509_NAME_get_entry, "
"X509_NAME_entry_count, X509_NAME_get_text_by_NID, X509_NAME_get_text_by_OBJ "
"- X509_NAME lookup and enumeration functions"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:13
#, no-wrap
msgid ""
" int X509_NAME_get_index_by_NID(X509_NAME *name,int nid,int lastpos);\n"
" int X509_NAME_get_index_by_OBJ(X509_NAME *name,ASN1_OBJECT *obj, int "
"lastpos);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:16
#, no-wrap
msgid ""
" int X509_NAME_entry_count(X509_NAME *name);\n"
" X509_NAME_ENTRY *X509_NAME_get_entry(X509_NAME *name, int loc);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:19
#, no-wrap
msgid ""
" int X509_NAME_get_text_by_NID(X509_NAME *name, int nid, char *buf,int "
"len);\n"
" int X509_NAME_get_text_by_OBJ(X509_NAME *name, ASN1_OBJECT *obj, char "
"*buf,int len);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:24
msgid ""
"These functions allow an B<X509_NAME> structure to be examined. The "
"B<X509_NAME> structure is the same as the B<Name> type defined in RFC2459 "
"(and elsewhere) and used for example in certificate subject and issuer "
"names."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:29
msgid ""
"X509_NAME_get_index_by_NID() and X509_NAME_get_index_by_OBJ() retrieve the "
"next index matching B<nid> or B<obj> after B<lastpos>. B<lastpos> should "
"initially be set to -1. If there are no more entries -1 is returned."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:33
msgid "X509_NAME_entry_count() returns the total number of entries in B<name>."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:35
msgid ""
"X509_NAME_get_entry() retrieves the B<X509_NAME_ENTRY> from B<name> "
"corresponding to index B<loc>. Acceptable values for B<loc> run from 0 to "
"(X509_NAME_entry_count(name) - 1). The value returned is an internal pointer "
"which must not be freed."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:40
msgid ""
"X509_NAME_get_text_by_NID(), X509_NAME_get_text_by_OBJ() retrieve the "
"\"text\" from the first entry in B<name> which matches B<nid> or B<obj>, if "
"no such entry exists -1 is returned. At most B<len> bytes will be written "
"and the text written to B<buf> will be null terminated. The length of the "
"output string written is returned excluding the terminating null. If B<buf> "
"is <NULL> then the amount of space needed in B<buf> (excluding the final "
"null) is returned."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:50
msgid ""
"X509_NAME_get_text_by_NID() and X509_NAME_get_text_by_OBJ() are legacy "
"functions which have various limitations which make them of minimal use in "
"practice. They can only find the first matching entry and will copy the "
"contents of the field verbatim: this can be highly confusing if the target "
"is a muticharacter string type like a BMPString or a UTF8String."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:57
msgid ""
"For a more general solution X509_NAME_get_index_by_NID() or "
"X509_NAME_get_index_by_OBJ() should be used followed by "
"X509_NAME_get_entry() on any matching indices and then the various "
"B<X509_NAME_ENTRY> utility functions on the result."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:64
msgid "Process all entries:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:66
#, no-wrap
msgid ""
" int i;\n"
" X509_NAME_ENTRY *e;\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:69
#, no-wrap
msgid ""
" for (i = 0; i < X509_NAME_entry_count(nm); i++)\n"
"\t{\n"
"\te = X509_NAME_get_entry(nm, i);\n"
"\t/* Do something with e */\n"
"\t}\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:75
msgid "Process all commonName entries:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:77
#, no-wrap
msgid ""
" int loc;\n"
" X509_NAME_ENTRY *e;\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_get_index_by_NID.pod:80
#, no-wrap
msgid ""
" loc = -1;\n"
" for (;;)\n"
"\t{\n"
"\tlastpos = X509_NAME_get_index_by_NID(nm, NID_commonName, lastpos);\n"
"\tif (lastpos == -1)\n"
"\t\tbreak;\n"
"\te = X509_NAME_get_entry(nm, lastpos);\n"
"\t/* Do something with e */\n"
"\t}\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:92
msgid ""
"X509_NAME_get_index_by_NID() and X509_NAME_get_index_by_OBJ()  return the "
"index of the next matching entry or -1 if not found."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:95
msgid "X509_NAME_entry_count() returns the total number of entries."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_get_index_by_NID.pod:97
msgid ""
"X509_NAME_get_entry() returns an B<X509_NAME> pointer to the requested entry "
"or B<NULL> if the index is invalid."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:5
msgid ""
"X509_NAME_print_ex, X509_NAME_print_ex_fp, X509_NAME_print, "
"X509_NAME_oneline - X509_NAME printing routines."
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_print_ex.pod:12
#, no-wrap
msgid ""
" int X509_NAME_print_ex(BIO *out, X509_NAME *nm, int indent, unsigned long "
"flags);\n"
" int X509_NAME_print_ex_fp(FILE *fp, X509_NAME *nm, int indent, unsigned "
"long flags);\n"
" char *\tX509_NAME_oneline(X509_NAME *a,char *buf,int size);\n"
" int X509_NAME_print(BIO *bp, X509_NAME *name, int obase);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:19
msgid ""
"X509_NAME_print_ex() prints a human readable version of B<nm> to BIO "
"B<out>. Each line (for multiline formats) is indented by B<indent> "
"spaces. The output format can be extensively customised by use of the "
"B<flags> parameter."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:23
msgid ""
"X509_NAME_print_ex_fp() is identical to X509_NAME_print_ex() except the "
"output is written to FILE pointer B<fp>."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:26
msgid ""
"X509_NAME_oneline() prints an ASCII version of B<a> to B<buf>. At most "
"B<size> bytes will be written. If B<buf> is B<NULL> then a buffer is "
"dynamically allocated and returned, otherwise B<buf> is returned."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:30
msgid ""
"X509_NAME_print() prints out B<name> to B<bp> indenting each line by "
"B<obase> characters. Multiple lines are used if the output (including "
"indent) exceeds 80 characters."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:36
msgid ""
"The functions X509_NAME_oneline() and X509_NAME_print() are legacy functions "
"which produce a non standard output form, they don't handle multi character "
"fields and have various quirks and inconsistencies. Their use is strongly "
"discouraged in new applications."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:41
msgid ""
"Although there are a large number of possible flags for most purposes "
"B<XN_FLAG_ONELINE>, B<XN_FLAG_MULTILINE> or B<XN_FLAG_RFC2253> will "
"suffice.  As noted on the L<ASN1_STRING_print_ex(3)|ASN1_STRING_print_ex(3)> "
"manual page for UTF8 terminals the B<ASN1_STRFLGS_ESC_MSB> should be unset: "
"so for example B<XN_FLAG_ONELINE & ~ASN1_STRFLGS_ESC_MSB> would be used."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:47
msgid ""
"The complete set of the flags supported by X509_NAME_print_ex() is listed "
"below."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:49
msgid "Several options can be ored together."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:51
msgid ""
"The options B<XN_FLAG_SEP_COMMA_PLUS>, B<XN_FLAG_SEP_CPLUS_SPC>, "
"B<XN_FLAG_SEP_SPLUS_SPC> and B<XN_FLAG_SEP_MULTILINE> determine the field "
"separators to use. Two distinct separators are used between distinct "
"RelativeDistinguishedName components and separate values in the same RDN for "
"a multi-valued RDN. Multi-valued RDNs are currently very rare so the second "
"separator will hardly ever be used."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:57
msgid ""
"B<XN_FLAG_SEP_COMMA_PLUS> uses comma and plus as "
"separators. B<XN_FLAG_SEP_CPLUS_SPC> uses comma and plus with spaces: this "
"is more readable that plain comma and plus.  B<XN_FLAG_SEP_SPLUS_SPC> uses "
"spaced semicolon and plus. B<XN_FLAG_SEP_MULTILINE> uses spaced newline and "
"plus respectively."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:62
msgid "If B<XN_FLAG_DN_REV> is set the whole DN is printed in reversed order."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:64
msgid ""
"The fields B<XN_FLAG_FN_SN>, B<XN_FLAG_FN_LN>, B<XN_FLAG_FN_OID>, "
"B<XN_FLAG_FN_NONE> determine how a field name is displayed. It will use the "
"short name (e.g. CN) the long name (e.g. commonName) always use OID "
"numerical form (normally OIDs are only used if the field name is not "
"recognised) and no field name respectively."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:70
msgid ""
"If B<XN_FLAG_SPC_EQ> is set then spaces will be placed around the '=' "
"character separating field names and values."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:73
msgid ""
"If B<XN_FLAG_DUMP_UNKNOWN_FIELDS> is set then the encoding of unknown fields "
"is printed instead of the values."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:76
msgid ""
"If B<XN_FLAG_FN_ALIGN> is set then field names are padded to 20 characters: "
"this is only of use for multiline format."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:79
msgid ""
"Additionally all the options supported by ASN1_STRING_print_ex() can be used "
"to control how each field value is displayed."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:82
msgid "In addition a number options can be set for commonly used formats."
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_print_ex.pod:84
#, no-wrap
msgid ""
"B<XN_FLAG_RFC2253> sets options which produce an output compatible with "
"RFC2253 it\n"
"is equivalent to:\n"
" B<ASN1_STRFLGS_RFC2253 | XN_FLAG_SEP_COMMA_PLUS | XN_FLAG_DN_REV | "
"XN_FLAG_FN_SN | XN_FLAG_DUMP_UNKNOWN_FIELDS>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_print_ex.pod:89
#, no-wrap
msgid ""
"B<XN_FLAG_ONELINE> is a more readable one line format which is the same "
"as:\n"
" B<ASN1_STRFLGS_RFC2253 | ASN1_STRFLGS_ESC_QUOTE | XN_FLAG_SEP_CPLUS_SPC | "
"XN_FLAG_SPC_EQ | XN_FLAG_FN_SN>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_NAME_print_ex.pod:92
#, no-wrap
msgid ""
"B<XN_FLAG_MULTILINE> is a multiline format which is the same as:\n"
" B<ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | XN_FLAG_SEP_MULTILINE | "
"XN_FLAG_SPC_EQ | XN_FLAG_FN_LN | XN_FLAG_FN_ALIGN>\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:95
msgid ""
"B<XN_FLAG_COMPAT> uses a format identical to X509_NAME_print(): in fact it "
"calls X509_NAME_print() internally."
msgstr ""

#. type: textblock
#: C/crypto/X509_NAME_print_ex.pod:99
msgid "L<ASN1_STRING_print_ex(3)|ASN1_STRING_print_ex(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:5
msgid "X509_new, X509_free - X509 certificate ASN1 allocation functions"
msgstr ""

#. type: verbatim
#: C/crypto/X509_new.pod:11
#, no-wrap
msgid ""
" X509 *X509_new(void);\n"
" void X509_free(X509 *a);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:16
msgid ""
"The X509 ASN1 allocation routines, allocate and free an X509 structure, "
"which represents an X509 certificate."
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:19
msgid "X509_new() allocates and initializes a X509 structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:21
msgid "X509_free() frees up the B<X509> structure B<a>."
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:25
msgid ""
"If the allocation fails, X509_new() returns B<NULL> and sets an error code "
"that can be obtained by L<ERR_get_error(3)|ERR_get_error(3)>.  Otherwise it "
"returns a pointer to the newly allocated structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:29
msgid "X509_free() returns no value."
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:33
msgid "L<ERR_get_error(3)|ERR_get_error(3)>, L<d2i_X509(3)|d2i_X509(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_new.pod:37
msgid ""
"X509_new() and X509_free() are available in all versions of SSLeay and "
"OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:5
msgid ""
"X509_STORE_CTX_get_error, X509_STORE_CTX_set_error, "
"X509_STORE_CTX_get_error_depth, X509_STORE_CTX_get_current_cert, "
"X509_STORE_CTX_get1_chain, X509_verify_cert_error_string - get or set "
"certificate verification status information"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_error.pod:9
#, no-wrap
msgid ""
" #include <openssl/x509.h>\n"
" #include <openssl/x509_vfy.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_error.pod:12
#, no-wrap
msgid ""
" int\tX509_STORE_CTX_get_error(X509_STORE_CTX *ctx);\n"
" void\tX509_STORE_CTX_set_error(X509_STORE_CTX *ctx,int s);\n"
" int\tX509_STORE_CTX_get_error_depth(X509_STORE_CTX *ctx);\n"
" X509 *\tX509_STORE_CTX_get_current_cert(X509_STORE_CTX *ctx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_error.pod:17
#, no-wrap
msgid ""
" STACK_OF(X509) *X509_STORE_CTX_get1_chain(X509_STORE_CTX *ctx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_error.pod:19
#, no-wrap
msgid ""
" const char *X509_verify_cert_error_string(long n);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:23
msgid ""
"These functions are typically called after X509_verify_cert() has indicated "
"an error or in a verification callback to determine the nature of an error."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:26
msgid ""
"X509_STORE_CTX_get_error() returns the error code of B<ctx>, see the B<ERROR "
"CODES> section for a full description of all error codes."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:29
msgid ""
"X509_STORE_CTX_set_error() sets the error code of B<ctx> to B<s>. For "
"example it might be used in a verification callback to set an error based on "
"additional checks."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:33
msgid ""
"X509_STORE_CTX_get_error_depth() returns the B<depth> of the error. This is "
"a non-negative integer representing where in the certificate chain the error "
"occurred. If it is zero it occured in the end entity certificate, one if it "
"is the certificate which signed the end entity certificate and so on."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:38
msgid ""
"X509_STORE_CTX_get_current_cert() returns the certificate in B<ctx> which "
"caused the error or B<NULL> if no certificate is relevant."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:41
msgid ""
"X509_STORE_CTX_get1_chain() returns a complete validate chain if a previous "
"call to X509_verify_cert() is successful. If the call to X509_verify_cert()  "
"is B<not> successful the returned chain may be incomplete or invalid. The "
"returned chain persists after the B<ctx> structure is freed, when it is no "
"longer needed it should be free up using:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_error.pod:47
#, no-wrap
msgid ""
"  sk_X509_pop_free(chain, X509_free);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:49 C/crypto/X509_STORE_CTX_get_error.pod:61
msgid ""
"X509_verify_cert_error_string() returns a human readable error string for "
"verification error B<n>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:54
msgid "X509_STORE_CTX_get_error() returns B<X509_V_OK> or an error code."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:56
msgid "X509_STORE_CTX_get_error_depth() returns a non-negative error depth."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:58
msgid ""
"X509_STORE_CTX_get_current_cert() returns the cerificate which caused the "
"error or B<NULL> if no certificate is relevant to the error."
msgstr ""

#. type: =head1
#: C/crypto/X509_STORE_CTX_get_error.pod:64
msgid "ERROR CODES"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:66
msgid ""
"A list of error codes and messages is shown below.  Some of the error codes "
"are defined but currently never returned: these are described as \"unused\"."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:72
msgid "B<X509_V_OK: ok>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:74
msgid "the operation was successful."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:76
msgid "B<X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT: unable to get issuer certificate>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:78
msgid ""
"the issuer certificate could not be found: this occurs if the issuer "
"certificate of an untrusted certificate cannot be found."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:81
msgid "B<X509_V_ERR_UNABLE_TO_GET_CRL: unable to get certificate CRL>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:83
msgid "the CRL of a certificate could not be found."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:85
msgid ""
"B<X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE: unable to decrypt "
"certificate's signature>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:87
msgid ""
"the certificate signature could not be decrypted. This means that the actual "
"signature value could not be determined rather than it not matching the "
"expected value, this is only meaningful for RSA keys."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:91
msgid ""
"B<X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE: unable to decrypt CRL's "
"signature>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:93
msgid ""
"the CRL signature could not be decrypted: this means that the actual "
"signature value could not be determined rather than it not matching the "
"expected value.  Unused."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:97
msgid ""
"B<X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY: unable to decode issuer "
"public key>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:99
msgid "the public key in the certificate SubjectPublicKeyInfo could not be read."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:101
msgid "B<X509_V_ERR_CERT_SIGNATURE_FAILURE: certificate signature failure>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:103 C/crypto/X509_STORE_CTX_get_error.pod:107
msgid "the signature of the certificate is invalid."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:105
msgid "B<X509_V_ERR_CRL_SIGNATURE_FAILURE: CRL signature failure>"
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:109
msgid "B<X509_V_ERR_CERT_NOT_YET_VALID: certificate is not yet valid>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:111
msgid ""
"the certificate is not yet valid: the notBefore date is after the current "
"time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:113
msgid "B<X509_V_ERR_CERT_HAS_EXPIRED: certificate has expired>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:115
msgid ""
"the certificate has expired: that is the notAfter date is before the current "
"time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:117
msgid "B<X509_V_ERR_CRL_NOT_YET_VALID: CRL is not yet valid>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:119
msgid "the CRL is not yet valid."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:121
msgid "B<X509_V_ERR_CRL_HAS_EXPIRED: CRL has expired>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:123
msgid "the CRL has expired."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:125
msgid ""
"B<X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD: format error in certificate's "
"notBefore field>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:127
msgid "the certificate notBefore field contains an invalid time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:129
msgid ""
"B<X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD: format error in certificate's "
"notAfter field>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:131
msgid "the certificate notAfter field contains an invalid time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:133
msgid ""
"B<X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD: format error in CRL's "
"lastUpdate field>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:135
msgid "the CRL lastUpdate field contains an invalid time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:137
msgid ""
"B<X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD: format error in CRL's "
"nextUpdate field>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:139
msgid "the CRL nextUpdate field contains an invalid time."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:141
msgid "B<X509_V_ERR_OUT_OF_MEM: out of memory>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:143
msgid "an error occurred trying to allocate memory. This should never happen."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:145
msgid "B<X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT: self signed certificate>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:147
msgid ""
"the passed certificate is self signed and the same certificate cannot be "
"found in the list of trusted certificates."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:150
msgid ""
"B<X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN: self signed certificate in "
"certificate chain>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:152
msgid ""
"the certificate chain could be built up using the untrusted certificates but "
"the root could not be found locally."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:155
msgid ""
"B<X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY: unable to get local issuer "
"certificate>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:157
msgid ""
"the issuer certificate of a locally looked up certificate could not be "
"found.  This normally means the list of trusted certificates is not "
"complete."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:160
msgid ""
"B<X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE: unable to verify the first "
"certificate>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:162
msgid ""
"no signatures could be verified because the chain contains only one "
"certificate and it is not self signed."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:165
msgid "B<X509_V_ERR_CERT_CHAIN_TOO_LONG: certificate chain too long>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:167
msgid ""
"the certificate chain length is greater than the supplied maximum "
"depth. Unused."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:169
msgid "B<X509_V_ERR_CERT_REVOKED: certificate revoked>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:171
msgid "the certificate has been revoked."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:173
msgid "B<X509_V_ERR_INVALID_CA: invalid CA certificate>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:175
msgid ""
"a CA certificate is invalid. Either it is not a CA or its extensions are not "
"consistent with the supplied purpose."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:178
msgid "B<X509_V_ERR_PATH_LENGTH_EXCEEDED: path length constraint exceeded>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:180
msgid "the basicConstraints pathlength parameter has been exceeded."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:182
msgid "B<X509_V_ERR_INVALID_PURPOSE: unsupported certificate purpose>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:184
msgid "the supplied certificate cannot be used for the specified purpose."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:186
msgid "B<X509_V_ERR_CERT_UNTRUSTED: certificate not trusted>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:188
msgid "the root CA is not marked as trusted for the specified purpose."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:190
msgid "B<X509_V_ERR_CERT_REJECTED: certificate rejected>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:192
msgid "the root CA is marked to reject the specified purpose."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:194
msgid "B<X509_V_ERR_SUBJECT_ISSUER_MISMATCH: subject issuer mismatch>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:196
msgid ""
"the current candidate issuer certificate was rejected because its subject "
"name did not match the issuer name of the current certificate. This is only "
"set if issuer check debugging is enabled it is used for status notification "
"and is B<not> in itself an error."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:201
msgid ""
"B<X509_V_ERR_AKID_SKID_MISMATCH: authority and subject key identifier "
"mismatch>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:203
msgid ""
"the current candidate issuer certificate was rejected because its subject "
"key identifier was present and did not match the authority key identifier "
"current certificate. This is only set if issuer check debugging is enabled "
"it is used for status notification and is B<not> in itself an error."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:208
msgid ""
"B<X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH: authority and issuer serial number "
"mismatch>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:210
msgid ""
"the current candidate issuer certificate was rejected because its issuer "
"name and serial number was present and did not match the authority key "
"identifier of the current certificate. This is only set if issuer check "
"debugging is enabled it is used for status notification and is B<not> in "
"itself an error."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:215
msgid ""
"B<X509_V_ERR_KEYUSAGE_NO_CERTSIGN:key usage does not include certificate "
"signing>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:217
msgid ""
"the current candidate issuer certificate was rejected because its keyUsage "
"extension does not permit certificate signing. This is only set if issuer "
"check debugging is enabled it is used for status notification and is B<not> "
"in itself an error."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:222
msgid ""
"B<X509_V_ERR_INVALID_EXTENSION: invalid or inconsistent certificate "
"extension>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:224
msgid ""
"A certificate extension had an invalid value (for example an incorrect "
"encoding) or some value inconsistent with other extensions."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:228
msgid ""
"B<X509_V_ERR_INVALID_POLICY_EXTENSION: invalid or inconsistent certificate "
"policy extension>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:230
msgid ""
"A certificate policies extension had an invalid value (for example an "
"incorrect encoding) or some value inconsistent with other extensions. This "
"error only occurs if policy processing is enabled."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:234
msgid "B<X509_V_ERR_NO_EXPLICIT_POLICY: no explicit policy>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:236
msgid ""
"The verification flags were set to require and explicit policy but none was "
"present."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:239
msgid "B<X509_V_ERR_DIFFERENT_CRL_SCOPE: Different CRL scope>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:241
msgid ""
"The only CRLs that could be found did not match the scope of the "
"certificate."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:243
msgid "B<X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE: Unsupported extension feature>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:245
msgid "Some feature of a certificate extension is not supported. Unused."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:247
msgid "B<X509_V_ERR_PERMITTED_VIOLATION: permitted subtree violation>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:249
msgid "A name constraint violation occured in the permitted subtrees."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:251
msgid "B<X509_V_ERR_EXCLUDED_VIOLATION: excluded subtree violation>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:253
msgid "A name constraint violation occured in the excluded subtrees."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:255
msgid ""
"B<X509_V_ERR_SUBTREE_MINMAX: name constraints minimum and maximum not "
"supported>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:257
msgid ""
"A certificate name constraints extension included a minimum or maximum "
"field: this is not supported."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:260
msgid "B<X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE: unsupported name constraint type>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:262
msgid ""
"An unsupported name constraint type was encountered. OpenSSL currently only "
"supports directory name, DNS name, email and URI types."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:265
msgid ""
"B<X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX: unsupported or invalid name "
"constraint syntax>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:267
msgid ""
"The format of the name constraint is not recognised: for example an email "
"address format of a form not mentioned in RFC3280. This could be caused by a "
"garbage extension or some new feature not currently supported."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:271
msgid "B<X509_V_ERR_CRL_PATH_VALIDATION_ERROR: CRL path validation error>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:273
msgid ""
"An error occured when attempting to verify the CRL path. This error can only "
"happen if extended CRL checking is enabled."
msgstr ""

#. type: =item
#: C/crypto/X509_STORE_CTX_get_error.pod:276
msgid "B<X509_V_ERR_APPLICATION_VERIFICATION: application verification failure>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:278
msgid ""
"an application specific error. This will never be returned unless explicitly "
"set by an application."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:285
msgid ""
"The above functions should be used instead of directly referencing the "
"fields in the B<X509_VERIFY_CTX> structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:288
msgid ""
"In versions of OpenSSL before 1.0 the current certificate returned by "
"X509_STORE_CTX_get_current_cert() was never B<NULL>. Applications should "
"check the return value before printing out any debugging information "
"relating to the current certificate."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:293
msgid ""
"If an unrecognised error code is passed to X509_verify_cert_error_string() "
"the numerical value of the unknown code is returned in a static buffer. This "
"is not thread safe but will never happen unless an invalid code is passed."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_error.pod:299 C/crypto/X509_VERIFY_PARAM_set_flags.pod:165
msgid "L<X509_verify_cert(3)|X509_verify_cert(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:5
msgid ""
"X509_STORE_CTX_get_ex_new_index, X509_STORE_CTX_set_ex_data, "
"X509_STORE_CTX_get_ex_data - add application specific data to X509_STORE_CTX "
"structures"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:9 C/crypto/X509_STORE_CTX_new.pod:9 C/crypto/X509_STORE_CTX_set_verify_cb.pod:9 C/crypto/X509_STORE_set_verify_cb_func.pod:9 C/crypto/X509_VERIFY_PARAM_set_flags.pod:9
#, no-wrap
msgid ""
" #include <openssl/x509_vfy.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:11
#, no-wrap
msgid ""
" int X509_STORE_CTX_get_ex_new_index(long argl, void *argp,\n"
"\t\tCRYPTO_EX_new *new_func,\n"
"\t\tCRYPTO_EX_dup *dup_func,\n"
"\t\tCRYPTO_EX_free *free_func);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:16
#, no-wrap
msgid ""
" int X509_STORE_CTX_set_ex_data(X509_STORE_CTX *d, int idx, void *arg);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:18
#, no-wrap
msgid ""
" char *X509_STORE_CTX_get_ex_data(X509_STORE_CTX *d, int idx);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:22
msgid ""
"These functions handle application specific data in X509_STORE_CTX "
"structures.  Their usage is identical to that of RSA_get_ex_new_index(), "
"RSA_set_ex_data()  and RSA_get_ex_data() as described in "
"L<RSA_get_ex_new_index(3)>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:28
msgid ""
"This mechanism is used internally by the B<ssl> library to store the B<SSL> "
"structure associated with a verification operation in an B<X509_STORE_CTX> "
"structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:34
msgid "L<RSA_get_ex_new_index(3)|RSA_get_ex_new_index(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_get_ex_new_index.pod:38
msgid ""
"X509_STORE_CTX_get_ex_new_index(), X509_STORE_CTX_set_ex_data() and "
"X509_STORE_CTX_get_ex_data() are available since OpenSSL 0.9.5."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:5
msgid ""
"X509_STORE_CTX_new, X509_STORE_CTX_cleanup, X509_STORE_CTX_free, "
"X509_STORE_CTX_init, X509_STORE_CTX_trusted_stack, X509_STORE_CTX_set_cert, "
"X509_STORE_CTX_set_chain, X509_STORE_CTX_set0_crls, "
"X509_STORE_CTX_get0_param, X509_STORE_CTX_set0_param, "
"X509_STORE_CTX_set_default - X509_STORE_CTX initialisation"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:11
#, no-wrap
msgid ""
" X509_STORE_CTX *X509_STORE_CTX_new(void);\n"
" void X509_STORE_CTX_cleanup(X509_STORE_CTX *ctx);\n"
" void X509_STORE_CTX_free(X509_STORE_CTX *ctx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:15
#, no-wrap
msgid ""
" int X509_STORE_CTX_init(X509_STORE_CTX *ctx, X509_STORE *store,\n"
"\t\t\t X509 *x509, STACK_OF(X509) *chain);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:18
#, no-wrap
msgid ""
" void X509_STORE_CTX_trusted_stack(X509_STORE_CTX *ctx, STACK_OF(X509) "
"*sk);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:20
#, no-wrap
msgid ""
" void\tX509_STORE_CTX_set_cert(X509_STORE_CTX *ctx,X509 *x);\n"
" void\tX509_STORE_CTX_set_chain(X509_STORE_CTX *ctx,STACK_OF(X509) *sk);\n"
" void\tX509_STORE_CTX_set0_crls(X509_STORE_CTX *ctx, STACK_OF(X509_CRL) "
"*sk);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:24
#, no-wrap
msgid ""
" X509_VERIFY_PARAM *X509_STORE_CTX_get0_param(X509_STORE_CTX *ctx);\n"
" void X509_STORE_CTX_set0_param(X509_STORE_CTX *ctx, X509_VERIFY_PARAM "
"*param);\n"
" int X509_STORE_CTX_set_default(X509_STORE_CTX *ctx, const char *name);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:30
msgid ""
"These functions initialise an B<X509_STORE_CTX> structure for subsequent use "
"by X509_verify_cert()."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:33
msgid ""
"X509_STORE_CTX_new() returns a newly initialised B<X509_STORE_CTX> "
"structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:35
msgid ""
"X509_STORE_CTX_cleanup() internally cleans up an B<X509_STORE_CTX> "
"structure.  The context can then be reused with an new call to "
"X509_STORE_CTX_init()."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:38
msgid ""
"X509_STORE_CTX_free() completely frees up B<ctx>. After this call B<ctx> is "
"no longer valid."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:41
msgid ""
"X509_STORE_CTX_init() sets up B<ctx> for a subsequent verification "
"operation.  The trusted certificate store is set to B<store>, the end entity "
"certificate to be verified is set to B<x509> and a set of additional "
"certificates (which will be untrusted but may be used to build the chain) in "
"B<chain>. Any or all of the B<store>, B<x509> and B<chain> parameters can be "
"B<NULL>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:47
msgid ""
"X509_STORE_CTX_trusted_stack() sets the set of trusted certificates of "
"B<ctx> to B<sk>. This is an alternative way of specifying trusted "
"certificates instead of using an B<X509_STORE>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:51
msgid ""
"X509_STORE_CTX_set_cert() sets the certificate to be vertified in B<ctx> to "
"B<x>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:54
msgid ""
"X509_STORE_CTX_set_chain() sets the additional certificate chain used by "
"B<ctx> to B<sk>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:57
msgid ""
"X509_STORE_CTX_set0_crls() sets a set of CRLs to use to aid certificate "
"verification to B<sk>. These CRLs will only be used if CRL verification is "
"enabled in the associated B<X509_VERIFY_PARAM> structure. This might be used "
"where additional \"useful\" CRLs are supplied as part of a protocol, for "
"example in a PKCS#7 structure."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:63
msgid ""
"X509_VERIFY_PARAM *X509_STORE_CTX_get0_param() retrieves an intenal pointer "
"to the verification parameters associated with B<ctx>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:66
msgid ""
"X509_STORE_CTX_set0_param() sets the intenal verification parameter pointer "
"to B<param>. After this call B<param> should not be used."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:69
msgid ""
"X509_STORE_CTX_set_default() looks up and sets the default verification "
"method to B<name>. This uses the function X509_VERIFY_PARAM_lookup() to find "
"an appropriate set of parameters from B<name>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:75
msgid ""
"The certificates and CRLs in a store are used internally and should B<not> "
"be freed up until after the associated B<X509_STORE_CTX> is freed. Legacy "
"applications might implicitly use an B<X509_STORE_CTX> like this:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:79
#, no-wrap
msgid ""
"  X509_STORE_CTX ctx;\n"
"  X509_STORE_CTX_init(&ctx, store, cert, chain);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:82
msgid "this is B<not> recommended in new applications they should instead do:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_new.pod:84
#, no-wrap
msgid ""
"  X509_STORE_CTX *ctx;\n"
"  ctx = X509_STORE_CTX_new();\n"
"  if (ctx == NULL)\n"
"\t/* Bad error */\n"
"  X509_STORE_CTX_init(ctx, store, cert, chain);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:92
msgid ""
"The certificates and CRLs in a context are used internally and should B<not> "
"be freed up until after the associated B<X509_STORE_CTX> is freed. Copies "
"should be made or reference counts increased instead."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:98
msgid ""
"X509_STORE_CTX_new() returns an newly allocates context or B<NULL> is an "
"error occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:101
msgid "X509_STORE_CTX_init() returns 1 for success or 0 if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:103
msgid ""
"X509_STORE_CTX_get0_param() returns a pointer to an B<X509_VERIFY_PARAM> "
"structure or B<NULL> if an error occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:106
msgid ""
"X509_STORE_CTX_cleanup(), X509_STORE_CTX_free(), "
"X509_STORE_CTX_trusted_stack(), X509_STORE_CTX_set_cert(), "
"X509_STORE_CTX_set_chain(), X509_STORE_CTX_set0_crls() and "
"X509_STORE_CTX_set0_param() do not return values."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:111
msgid ""
"X509_STORE_CTX_set_default() returns 1 for success or 0 if an error "
"occurred."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:115
msgid ""
"L<X509_verify_cert(3)|X509_verify_cert(3)> "
"L<X509_VERIFY_PARAM_set_flags(3)|X509_VERIFY_PARAM_set_flags(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_new.pod:120
msgid "X509_STORE_CTX_set0_crls() was first added to OpenSSL 1.0.0"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:5
msgid "X509_STORE_CTX_set_verify_cb - set verification callback"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:11
#, no-wrap
msgid ""
" void X509_STORE_CTX_set_verify_cb(X509_STORE_CTX *ctx,\n"
"\t\t\t\tint (*verify_cb)(int ok, X509_STORE_CTX *ctx));\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:16
msgid ""
"X509_STORE_CTX_set_verify_cb() sets the verification callback of B<ctx> to "
"B<verify_cb> overwriting any existing callback."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:19
msgid ""
"The verification callback can be used to customise the operation of "
"certificate verification, either by overriding error conditions or logging "
"errors for debugging purposes."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:23
msgid ""
"However a verification callback is B<not> essential and the default "
"operation is often sufficient."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:26
msgid ""
"The B<ok> parameter to the callback indicates the value the callback should "
"return to retain the default behaviour. If it is zero then and error "
"condition is indicated. If it is 1 then no error occurred. If the flag "
"B<X509_V_FLAG_NOTIFY_POLICY> is set then B<ok> is set to 2 to indicate the "
"policy checking is complete."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:32
msgid ""
"The B<ctx> parameter to the callback is the B<X509_STORE_CTX> structure that "
"is performing the verification operation. A callback can examine this "
"structure and receive additional information about the error, for example by "
"calling X509_STORE_CTX_get_current_cert(). Additional application data can "
"be passed to the callback via the B<ex_data> mechanism."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:40
msgid ""
"In general a verification callback should B<NOT> unconditionally return 1 in "
"all circumstances because this will allow verification to succeed no matter "
"what the error. This effectively removes all security from the application "
"because B<any> certificate (including untrusted generated ones) will be "
"accepted."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:48
msgid ""
"The verification callback can be set and inherited from the parent structure "
"performing the operation. In some cases (such as S/MIME verification) the "
"B<X509_STORE_CTX> structure is created and destroyed internally and the only "
"way to set a custom verification callback is by inheriting it from the "
"associated B<X509_STORE>."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:56
msgid "X509_STORE_CTX_set_verify_cb() does not return a value."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:60
msgid "Default callback operation:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:62
#, no-wrap
msgid ""
" int verify_callback(int ok, X509_STORE_CTX *ctx)\n"
"\t{\n"
"\treturn ok;\n"
"\t}\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:67
msgid ""
"Simple example, suppose a certificate in the chain is expired and we wish to "
"continue after this error:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:70
#, no-wrap
msgid ""
" int verify_callback(int ok, X509_STORE_CTX *ctx)\n"
"\t{\n"
"\t/* Tolerate certificate expiration */\n"
"\tif (X509_STORE_CTX_get_error(ctx) == X509_V_ERR_CERT_HAS_EXPIRED)\n"
"\t\t\treturn 1;\n"
"\t/* Otherwise don't override */\n"
"\treturn ok;\n"
"\t}\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:79
msgid ""
"More complex example, we don't wish to continue after B<any> certificate has "
"expired just one specific case:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:82
#, no-wrap
msgid ""
" int verify_callback(int ok, X509_STORE_CTX *ctx)\n"
"\t{\n"
"\tint err = X509_STORE_CTX_get_error(ctx);\n"
"\tX509 *err_cert = X509_STORE_CTX_get_current_cert(ctx);\n"
"\tif (err == X509_V_ERR_CERT_HAS_EXPIRED)\n"
"\t\t{\n"
"\t\tif (check_is_acceptable_expired_cert(err_cert)\n"
"\t\t\treturn 1;\n"
"\t\t}\n"
"\treturn ok;\n"
"\t}\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:94
#, no-wrap
msgid ""
"Full featured logging callback. In this case the B<bio_err> is assumed to "
"be\n"
"a global logging B<BIO>, an alternative would to store a BIO in B<ctx> "
"using\n"
"B<ex_data>.\n"
"\t\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:98
#, no-wrap
msgid ""
" int verify_callback(int ok, X509_STORE_CTX *ctx)\n"
"\t{\n"
"\tX509 *err_cert;\n"
"\tint err,depth;\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:103
#, no-wrap
msgid ""
"\terr_cert = X509_STORE_CTX_get_current_cert(ctx);\n"
"\terr =\tX509_STORE_CTX_get_error(ctx);\n"
"\tdepth =\tX509_STORE_CTX_get_error_depth(ctx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:107
#, no-wrap
msgid ""
"\tBIO_printf(bio_err,\"depth=%d \",depth);\n"
"\tif (err_cert)\n"
"\t\t{\n"
"\t\tX509_NAME_print_ex(bio_err, X509_get_subject_name(err_cert),\n"
"\t\t\t\t\t0, XN_FLAG_ONELINE);\n"
"\t\tBIO_puts(bio_err, \"\\n\");\n"
"\t\t}\n"
"\telse\n"
"\t\tBIO_puts(bio_err, \"<no cert>\\n\");\n"
"\tif (!ok)\n"
"\t\tBIO_printf(bio_err,\"verify error:num=%d:%s\\n\",err,\n"
"\t\t\tX509_verify_cert_error_string(err));\n"
"\tswitch (err)\n"
"\t\t{\n"
"\tcase X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT:\n"
"\t\tBIO_puts(bio_err,\"issuer= \");\n"
"\t\tX509_NAME_print_ex(bio_err, X509_get_issuer_name(err_cert),\n"
"\t\t\t\t\t0, XN_FLAG_ONELINE);\n"
"\t\tBIO_puts(bio_err, \"\\n\");\n"
"\t\tbreak;\n"
"\tcase X509_V_ERR_CERT_NOT_YET_VALID:\n"
"\tcase X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD:\n"
"\t\tBIO_printf(bio_err,\"notBefore=\");\n"
"\t\tASN1_TIME_print(bio_err,X509_get_notBefore(err_cert));\n"
"\t\tBIO_printf(bio_err,\"\\n\");\n"
"\t\tbreak;\n"
"\tcase X509_V_ERR_CERT_HAS_EXPIRED:\n"
"\tcase X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD:\n"
"\t\tBIO_printf(bio_err,\"notAfter=\");\n"
"\t\tASN1_TIME_print(bio_err,X509_get_notAfter(err_cert));\n"
"\t\tBIO_printf(bio_err,\"\\n\");\n"
"\t\tbreak;\n"
"\tcase X509_V_ERR_NO_EXPLICIT_POLICY:\n"
"\t\tpolicies_print(bio_err, ctx);\n"
"\t\tbreak;\n"
"\t\t}\n"
"\tif (err == X509_V_OK && ok == 2)\n"
"\t\t/* print out policies */\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:146
#, no-wrap
msgid ""
"\tBIO_printf(bio_err,\"verify return:%d\\n\",ok);\n"
"\treturn(ok);\n"
"\t}\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:152
msgid ""
"L<X509_STORE_CTX_get_error(3)|X509_STORE_CTX_get_error(3)> "
"L<X509_STORE_set_verify_cb_func(3)|X509_STORE_set_verify_cb_func(3)> "
"L<X509_STORE_CTX_get_ex_new_index(3)|X509_STORE_CTX_get_ex_new_index(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_CTX_set_verify_cb.pod:158
msgid ""
"X509_STORE_CTX_set_verify_cb() is available in all versions of SSLeay and "
"OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:5
msgid ""
"X509_STORE_set_verify_cb_func, X509_STORE_set_verify_cb - set verification "
"callback"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_set_verify_cb_func.pod:11
#, no-wrap
msgid ""
" void X509_STORE_set_verify_cb(X509_STORE *st,\n"
"\t\t\t\tint (*verify_cb)(int ok, X509_STORE_CTX *ctx));\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_STORE_set_verify_cb_func.pod:14
#, no-wrap
msgid ""
" void X509_STORE_set_verify_cb_func(X509_STORE *st,\n"
"\t\t\t\tint (*verify_cb)(int ok, X509_STORE_CTX *ctx));\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:19
msgid ""
"X509_STORE_set_verify_cb() sets the verification callback of B<ctx> to "
"B<verify_cb> overwriting any existing callback."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:22
msgid ""
"X509_STORE_set_verify_cb_func() also sets the verification callback but it "
"is implemented as a macro."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:27
msgid ""
"The verification callback from an B<X509_STORE> is inherited by the "
"corresponding B<X509_STORE_CTX> structure when it is initialized. This can "
"be used to set the verification callback when the B<X509_STORE_CTX> is "
"otherwise inaccessible (for example during S/MIME verification)."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:34
msgid ""
"The macro version of this function was the only one available before OpenSSL "
"1.0.0."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:39
msgid ""
"X509_STORE_set_verify_cb() and X509_STORE_set_verify_cb_func() do not return "
"a value."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:44
msgid ""
"L<X509_STORE_CTX_set_verify_cb(3)|X509_STORE_CTX_set_verify_cb(3)> "
"L<CMS_verify(3)|CMS_verify(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:49
msgid ""
"X509_STORE_set_verify_cb_func() is available in all versions of SSLeay and "
"OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/X509_STORE_set_verify_cb_func.pod:52
msgid "X509_STORE_set_verify_cb() was added to OpenSSL 1.0.0."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:5
msgid ""
"X509_VERIFY_PARAM_set_flags, X509_VERIFY_PARAM_clear_flags, "
"X509_VERIFY_PARAM_get_flags, X509_VERIFY_PARAM_set_purpose, "
"X509_VERIFY_PARAM_set_trust, X509_VERIFY_PARAM_set_depth, "
"X509_VERIFY_PARAM_get_depth, X509_VERIFY_PARAM_set_time, "
"X509_VERIFY_PARAM_add0_policy, X509_VERIFY_PARAM_set1_policies - X509 "
"verification parameters"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:11
#, no-wrap
msgid ""
" int X509_VERIFY_PARAM_set_flags(X509_VERIFY_PARAM *param, unsigned long "
"flags);\n"
" int X509_VERIFY_PARAM_clear_flags(X509_VERIFY_PARAM *param,\n"
"\t\t\t\t\t\t\tunsigned long flags);\n"
" unsigned long X509_VERIFY_PARAM_get_flags(X509_VERIFY_PARAM *param);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:16
#, no-wrap
msgid ""
" int X509_VERIFY_PARAM_set_purpose(X509_VERIFY_PARAM *param, int purpose);\n"
" int X509_VERIFY_PARAM_set_trust(X509_VERIFY_PARAM *param, int trust);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:19
#, no-wrap
msgid ""
" void X509_VERIFY_PARAM_set_time(X509_VERIFY_PARAM *param, time_t t);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:21
#, no-wrap
msgid ""
" int X509_VERIFY_PARAM_add0_policy(X509_VERIFY_PARAM *param,\n"
"\t\t\t\t\t\tASN1_OBJECT *policy);\n"
" int X509_VERIFY_PARAM_set1_policies(X509_VERIFY_PARAM *param, \n"
"\t\t\t\t\tSTACK_OF(ASN1_OBJECT) *policies);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:26
#, no-wrap
msgid ""
" void X509_VERIFY_PARAM_set_depth(X509_VERIFY_PARAM *param, int depth);\n"
" int X509_VERIFY_PARAM_get_depth(const X509_VERIFY_PARAM *param);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:31
msgid ""
"These functions manipulate the B<X509_VERIFY_PARAM> structure associated "
"with a certificate verification operation."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:34
msgid ""
"The X509_VERIFY_PARAM_set_flags() function sets the flags in B<param> by "
"oring it with B<flags>. See the B<VERIFICATION FLAGS> section for a complete "
"description of values the B<flags> parameter can take."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:38
msgid "X509_VERIFY_PARAM_get_flags() returns the flags in B<param>."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:40
msgid "X509_VERIFY_PARAM_clear_flags() clears the flags B<flags> in B<param>."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:42
msgid ""
"X509_VERIFY_PARAM_set_purpose() sets the verification purpose in B<param> to "
"B<purpose>. This determines the acceptable purpose of the certificate chain, "
"for example SSL client or SSL server."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:46
msgid ""
"X509_VERIFY_PARAM_set_trust() sets the trust setting in B<param> to "
"B<trust>."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:49
msgid ""
"X509_VERIFY_PARAM_set_time() sets the verification time in B<param> to "
"B<t>. Normally the current time is used."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:52
msgid ""
"X509_VERIFY_PARAM_add0_policy() enables policy checking (it is disabled by "
"default) and adds B<policy> to the acceptable policy set."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:55
msgid ""
"X509_VERIFY_PARAM_set1_policies() enables policy checking (it is disabled by "
"default) and sets the acceptable policy set to B<policies>. Any existing "
"policy set is cleared. The B<policies> parameter can be B<NULL> to clear an "
"existing policy set."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:60
msgid ""
"X509_VERIFY_PARAM_set_depth() sets the maximum verification depth to "
"B<depth>.  That is the maximum number of untrusted CA certificates that can "
"appear in a chain."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:66
msgid ""
"X509_VERIFY_PARAM_set_flags(), X509_VERIFY_PARAM_clear_flags(), "
"X509_VERIFY_PARAM_set_purpose(), X509_VERIFY_PARAM_set_trust(), "
"X509_VERIFY_PARAM_add0_policy() and X509_VERIFY_PARAM_set1_policies() return "
"1 for success and 0 for failure."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:71
msgid "X509_VERIFY_PARAM_get_flags() returns the current verification flags."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:73
msgid ""
"X509_VERIFY_PARAM_set_time() and X509_VERIFY_PARAM_set_depth() do not return "
"values."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:76
msgid "X509_VERIFY_PARAM_get_depth() returns the current verification depth."
msgstr ""

#. type: =head1
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:78
msgid "VERIFICATION FLAGS"
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:80
msgid ""
"The verification flags consists of zero or more of the following flags ored "
"together."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:83
msgid ""
"B<X509_V_FLAG_CRL_CHECK> enables CRL checking for the certificate chain leaf "
"certificate. An error occurs if a suitable CRL cannot be found."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:86
msgid ""
"B<X509_V_FLAG_CRL_CHECK_ALL> enables CRL checking for the entire certificate "
"chain."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:89
msgid ""
"B<X509_V_FLAG_IGNORE_CRITICAL> disabled critical extension checking. By "
"default any unhandled critical extensions in certificates or (if checked) "
"CRLs results in a fatal error. If this flag is set unhandled critical "
"extensions are ignored. B<WARNING> setting this option for anything other "
"than debugging purposes can be a security risk. Finer control over which "
"extensions are supported can be performed in the verification callback."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:96
msgid ""
"THe B<X509_V_FLAG_X509_STRICT> flag disables workarounds for some broken "
"certificates and makes the verification strictly apply B<X509> rules."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:99
msgid "B<X509_V_FLAG_ALLOW_PROXY_CERTS> enables proxy certificate verification."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:101
msgid ""
"B<X509_V_FLAG_POLICY_CHECK> enables certificate policy checking, by default "
"no policy checking is peformed. Additional information is sent to the "
"verification callback relating to policy checking."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:105
msgid ""
"B<X509_V_FLAG_EXPLICIT_POLICY>, B<X509_V_FLAG_INHIBIT_ANY> and "
"B<X509_V_FLAG_INHIBIT_MAP> set the B<require explicit policy>, B<inhibit any "
"policy> and B<inhibit policy mapping> flags respectively as defined in "
"B<RFC3280>. Policy checking is automatically enabled if any of these flags "
"are set."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:111
msgid ""
"If B<X509_V_FLAG_NOTIFY_POLICY> is set and the policy checking is successful "
"a special status code is set to the verification callback. This permits it "
"to examine the valid policy tree and perform additional checks or simply log "
"it for debugging purposes."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:116
msgid ""
"By default some additional features such as indirect CRLs and CRLs signed by "
"different keys are disabled. If B<X509_V_FLAG_EXTENDED_CRL_SUPPORT> is set "
"they are enabled."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:120
msgid ""
"If B<X509_V_FLAG_USE_DELTAS> ise set delta CRLs (if present) are used to "
"determine certificate status. If not set deltas are ignored."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:123
msgid ""
"B<X509_V_FLAG_CHECK_SS_SIGNATURE> enables checking of the root CA self "
"signed cerificate signature. By default this check is disabled because it "
"doesn't add any additional security but in some cases applications might "
"want to check the signature anyway. A side effect of not checking the root "
"CA signature is that disabled or unsupported message digests on the root CA "
"are not treated as fatal errors."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:130
msgid ""
"The B<X509_V_FLAG_CB_ISSUER_CHECK> flag enables debugging of certificate "
"issuer checks. It is B<not> needed unless you are logging certificate "
"verification. If this flag is set then additional status codes will be sent "
"to the verification callback and it B<must> be prepared to handle such cases "
"without assuming they are hard errors."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:138
msgid ""
"The above functions should be used to manipulate verification parameters "
"instead of legacy functions which work in specific structures such as "
"X509_STORE_CTX_set_flags()."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:144
msgid ""
"Delta CRL checking is currently primitive. Only a single delta can be used "
"and (partly due to limitations of B<X509_STORE>) constructed CRLs are not "
"maintained."
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:148
msgid ""
"If CRLs checking is enable CRLs are expected to be available in the "
"corresponding B<X509_STORE> structure. No attempt is made to download CRLs "
"from the CRL distribution points extension."
msgstr ""

#. type: =head1
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:152
msgid "EXAMPLE"
msgstr ""

#. type: textblock
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:154
msgid ""
"Enable CRL checking when performing certificate verification during SSL "
"connections associated with an B<SSL_CTX> structure B<ctx>:"
msgstr ""

#. type: verbatim
#: C/crypto/X509_VERIFY_PARAM_set_flags.pod:157
#, no-wrap
msgid ""
"  X509_VERIFY_PARAM *param;\n"
"  param = X509_VERIFY_PARAM_new();\n"
"  X509_VERIFY_PARAM_set_flags(param, X509_V_FLAG_CRL_CHECK);\n"
"  SSL_CTX_set1_param(ctx, param);\n"
"  X509_VERIFY_PARAM_free(param);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:5
msgid "X509_verify_cert - discover and verify X509 certificte chain"
msgstr ""

#. type: verbatim
#: C/crypto/X509_verify_cert.pod:11
#, no-wrap
msgid ""
" int X509_verify_cert(X509_STORE_CTX *ctx);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:15
msgid ""
"The X509_verify_cert() function attempts to discover and validate a "
"certificate chain based on parameters in B<ctx>. A complete description of "
"the process is contained in the L<verify(1)|verify(1)> manual page."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:21
msgid ""
"If a complete chain can be built and validated this function returns 1, "
"otherwise it return zero, in exceptional circumstances it can also return a "
"negative code."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:25
msgid ""
"If the function fails additional error information can be obtained by "
"examining B<ctx> using, for example X509_STORE_CTX_get_error()."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:30
msgid ""
"Applications rarely call this function directly but it is used by OpenSSL "
"internally for certificate validation, in both the S/MIME and SSL/TLS code."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:34
msgid ""
"The negative return value from X509_verify_cert() can only occur if no "
"certificate is set in B<ctx> (due to a programming error) or if a retry "
"operation is requested during internal lookups (which never happens with "
"standard lookup methods). It is however recommended that application check "
"for <= 0 return value on error."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:42
msgid ""
"This function uses the header B<x509.h> as opposed to most chain "
"verification functiosn which use B<x509_vfy.h>."
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:47
msgid "L<X509_STORE_CTX_get_error(3)|X509_STORE_CTX_get_error(3)>"
msgstr ""

#. type: textblock
#: C/crypto/X509_verify_cert.pod:51
msgid "X509_verify_cert() is available in all versions of SSLeay and OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:5
msgid "x509 - X.509 certificate handling"
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:13
msgid ""
"A X.509 certificate is a structured grouping of information about an "
"individual, a device, or anything one can imagine.  A X.509 CRL (certificate "
"revocation list) is a tool to help determine if a certificate is still "
"valid.  The exact definition of those can be found in the X.509 document "
"from ITU-T, or in RFC3280 from PKIX.  In OpenSSL, the type X509 is used to "
"express such a certificate, and the type X509_CRL is used to express a CRL."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:21
msgid ""
"A related structure is a certificate request, defined in PKCS#10 from RSA "
"Security, Inc, also reflected in RFC2896.  In OpenSSL, the type X509_REQ is "
"used to express such a certificate request."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:25
msgid ""
"To handle some complex parts of a certificate, there are the types X509_NAME "
"(to express a certificate name), X509_ATTRIBUTE (to express a certificate "
"attributes), X509_EXTENSION (to express a certificate extension) and a few "
"more."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:30
msgid ""
"Finally, there's the supertype X509_INFO, which can contain a CRL, a "
"certificate and a corresponding private key."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:33
msgid ""
"B<X509_>I<...>, B<d2i_X509_>I<...> and B<i2d_X509_>I<...> handle X.509 "
"certificates, with some exceptions, shown below."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:36
msgid ""
"B<X509_CRL_>I<...>, B<d2i_X509_CRL_>I<...> and B<i2d_X509_CRL_>I<...> handle "
"X.509 CRLs."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:39
msgid ""
"B<X509_REQ_>I<...>, B<d2i_X509_REQ_>I<...> and B<i2d_X509_REQ_>I<...> handle "
"PKCS#10 certificate requests."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:42
msgid "B<X509_NAME_>I<...> handle certificate names."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:44
msgid "B<X509_ATTRIBUTE_>I<...> handle certificate attributes."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:46
msgid "B<X509_EXTENSION_>I<...> handle certificate extensions."
msgstr ""

#. type: textblock
#: C/crypto/x509.pod:50
msgid ""
"L<X509_NAME_ENTRY_get_object(3)|X509_NAME_ENTRY_get_object(3)>, "
"L<X509_NAME_add_entry_by_txt(3)|X509_NAME_add_entry_by_txt(3)>, "
"L<X509_NAME_add_entry_by_NID(3)|X509_NAME_add_entry_by_NID(3)>, "
"L<X509_NAME_print_ex(3)|X509_NAME_print_ex(3)>, "
"L<X509_NAME_new(3)|X509_NAME_new(3)>, L<d2i_X509(3)|d2i_X509(3)>, "
"L<d2i_X509_ALGOR(3)|d2i_X509_ALGOR(3)>, L<d2i_X509_CRL(3)|d2i_X509_CRL(3)>, "
"L<d2i_X509_NAME(3)|d2i_X509_NAME(3)>, L<d2i_X509_REQ(3)|d2i_X509_REQ(3)>, "
"L<d2i_X509_SIG(3)|d2i_X509_SIG(3)>, L<crypto(3)|crypto(3)>, "
"L<x509v3(3)|x509v3(3)>"
msgstr ""
