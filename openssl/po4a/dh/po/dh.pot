# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2013-05-26 17:09-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: C/apps/dhparam.pod:3 C/crypto/DH_generate_key.pod:3 C/crypto/DH_generate_parameters.pod:3 C/crypto/DH_get_ex_new_index.pod:3 C/crypto/DH_new.pod:3 C/crypto/DH_set_method.pod:3 C/crypto/DH_size.pod:3 C/crypto/dh.pod:3
msgid "NAME"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:5
msgid "dhparam - DH parameter manipulation and generation"
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:7 C/crypto/DH_generate_key.pod:7 C/crypto/DH_generate_parameters.pod:7 C/crypto/DH_get_ex_new_index.pod:7 C/crypto/DH_new.pod:7 C/crypto/DH_set_method.pod:8 C/crypto/DH_size.pod:7 C/crypto/dh.pod:7
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:9
msgid ""
"B<openssl dhparam> [B<-inform DER|PEM>] [B<-outform DER|PEM>] [B<-in> "
"I<filename>] [B<-out> I<filename>] [B<-dsaparam>] [B<-noout>] [B<-text>] "
"[B<-C>] [B<-2>] [B<-5>] [B<-rand> I<file(s)>] [B<-engine id>] [I<numbits>]"
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:24 C/crypto/DH_generate_key.pod:15 C/crypto/DH_generate_parameters.pod:16 C/crypto/DH_get_ex_new_index.pod:20 C/crypto/DH_new.pod:15 C/crypto/DH_set_method.pod:23 C/crypto/DH_size.pod:13 C/crypto/dh.pod:41
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:26
msgid "This command is used to manipulate DH parameter files."
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:28
msgid "OPTIONS"
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:32
msgid "B<-inform DER|PEM>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:34
msgid ""
"This specifies the input format. The B<DER> option uses an ASN1 DER encoded "
"form compatible with the PKCS#3 DHparameter structure. The PEM form is the "
"default format: it consists of the B<DER> format base64 encoded with "
"additional header and footer lines."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:39
msgid "B<-outform DER|PEM>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:41
msgid ""
"This specifies the output format, the options have the same meaning as the "
"B<-inform> option."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:44
msgid "B<-in> I<filename>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:46
msgid ""
"This specifies the input filename to read parameters from or standard input "
"if this option is not specified."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:49
msgid "B<-out> I<filename>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:51
msgid ""
"This specifies the output filename parameters to. Standard output is used if "
"this option is not present. The output filename should B<not> be the same as "
"the input filename."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:55
msgid "B<-dsaparam>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:57
msgid ""
"If this option is used, DSA rather than DH parameters are read or created; "
"they are converted to DH format.  Otherwise, \"strong\" primes (such that "
"(p-1)/2 is also prime) will be used for DH parameter generation."
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:61
msgid ""
"DH parameter generation with the B<-dsaparam> option is much faster, and the "
"recommended exponent length is shorter, which makes DH key exchange more "
"efficient.  Beware that with such DSA-style DH parameters, a fresh DH key "
"should be created for each use to avoid small-subgroup attacks that may be "
"possible otherwise."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:67
msgid "B<-2>, B<-5>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:69
msgid ""
"The generator to use, either 2 or 5. 2 is the default. If present then the "
"input file is ignored and parameters are generated instead."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:72
msgid "B<-rand> I<file(s)>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:74
msgid ""
"a file or files containing random data used to seed the random number "
"generator, or an EGD socket (see L<RAND_egd(3)|RAND_egd(3)>).  Multiple "
"files can be specified separated by a OS-dependent character.  The separator "
"is B<;> for MS-Windows, B<,> for OpenVMS, and B<:> for all others."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:80
msgid "I<numbits>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:82
msgid ""
"this option specifies that a parameter set should be generated of size "
"I<numbits>. It must be the last option. If not present then a value of 512 "
"is used. If this option is present then the input file is ignored and "
"parameters are generated instead."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:87
msgid "B<-noout>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:89
msgid "this option inhibits the output of the encoded version of the parameters."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:91
msgid "B<-text>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:93
msgid "this option prints out the DH parameters in human readable form."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:95
msgid "B<-C>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:97
msgid ""
"this option converts the parameters into C code. The parameters can then be "
"loaded by calling the B<get_dh>I<numbits>B<()> function."
msgstr ""

#. type: =item
#: C/apps/dhparam.pod:100
msgid "B<-engine id>"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:102
msgid ""
"specifying an engine (by its unique B<id> string) will cause B<dhparam> to "
"attempt to obtain a functional reference to the specified engine, thus "
"initialising it if needed. The engine will then be set as the default for "
"all available algorithms."
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:109
msgid "WARNINGS"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:111
msgid ""
"The program B<dhparam> combines the functionality of the programs B<dh> and "
"B<gendh> in previous versions of OpenSSL and SSLeay. The B<dh> and B<gendh> "
"programs are retained for now but may have different purposes in future "
"versions of OpenSSL."
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:116 C/crypto/DH_generate_parameters.pod:47 C/crypto/DH_set_method.pod:100
msgid "NOTES"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:118
msgid "PEM format DH parameters use the header and footer lines:"
msgstr ""

#. type: verbatim
#: C/apps/dhparam.pod:120
#, no-wrap
msgid ""
" -----BEGIN DH PARAMETERS-----\n"
" -----END DH PARAMETERS-----\n"
"\n"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:123
msgid "OpenSSL currently only supports the older PKCS#3 DH, not the newer X9.42 DH."
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:126
msgid "This program manipulates DH parameters not keys."
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:128 C/crypto/DH_generate_parameters.pod:55
msgid "BUGS"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:130
msgid "There should be a way to generate and manipulate DH keys."
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:132 C/crypto/DH_generate_key.pod:41 C/crypto/DH_generate_parameters.pod:60 C/crypto/DH_get_ex_new_index.pod:27 C/crypto/DH_new.pod:30 C/crypto/DH_set_method.pod:110 C/crypto/DH_size.pod:25 C/crypto/dh.pod:68
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:134
msgid "L<dsaparam(1)|dsaparam(1)>"
msgstr ""

#. type: =head1
#: C/apps/dhparam.pod:136 C/crypto/DH_generate_key.pod:45 C/crypto/DH_generate_parameters.pod:65 C/crypto/DH_get_ex_new_index.pod:31 C/crypto/DH_new.pod:36 C/crypto/DH_set_method.pod:114 C/crypto/DH_size.pod:29
msgid "HISTORY"
msgstr ""

#. type: textblock
#: C/apps/dhparam.pod:138
msgid ""
"The B<dhparam> command was added in OpenSSL 0.9.5.  The B<-dsaparam> option "
"was added in OpenSSL 0.9.6."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:5
msgid "DH_generate_key, DH_compute_key - perform Diffie-Hellman key exchange"
msgstr ""

#. type: verbatim
#: C/crypto/DH_generate_key.pod:9 C/crypto/DH_generate_parameters.pod:9 C/crypto/DH_get_ex_new_index.pod:9 C/crypto/DH_new.pod:9 C/crypto/DH_size.pod:9
#, no-wrap
msgid ""
" #include <openssl/dh.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_generate_key.pod:11
#, no-wrap
msgid ""
" int DH_generate_key(DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_generate_key.pod:13
#, no-wrap
msgid ""
" int DH_compute_key(unsigned char *key, BIGNUM *pub_key, DH *dh);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:17
msgid ""
"DH_generate_key() performs the first step of a Diffie-Hellman key exchange "
"by generating private and public DH values. By calling DH_compute_key(), "
"these are combined with the other party's public value to compute the shared "
"key."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:22
msgid ""
"DH_generate_key() expects B<dh> to contain the shared parameters "
"B<dh-E<gt>p> and B<dh-E<gt>g>. It generates a random private DH value unless "
"B<dh-E<gt>priv_key> is already set, and computes the corresponding public "
"value B<dh-E<gt>pub_key>, which can then be published."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:28
msgid ""
"DH_compute_key() computes the shared secret from the private DH value in "
"B<dh> and the other party's public value in B<pub_key> and stores it in "
"B<key>. B<key> must point to B<DH_size(dh)> bytes of memory."
msgstr ""

#. type: =head1
#: C/crypto/DH_generate_key.pod:32 C/crypto/DH_generate_parameters.pod:39 C/crypto/DH_new.pod:22 C/crypto/DH_set_method.pod:85
msgid "RETURN VALUES"
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:34
msgid "DH_generate_key() returns 1 on success, 0 otherwise."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:36
msgid ""
"DH_compute_key() returns the size of the shared secret on success, -1 on "
"error."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:39
msgid "The error codes can be obtained by L<ERR_get_error(3)|ERR_get_error(3)>."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:43
msgid ""
"L<dh(3)|dh(3)>, L<ERR_get_error(3)|ERR_get_error(3)>, L<rand(3)|rand(3)>, "
"L<DH_size(3)|DH_size(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_key.pod:47
msgid ""
"DH_generate_key() and DH_compute_key() are available in all versions of "
"SSLeay and OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:5
msgid ""
"DH_generate_parameters, DH_check - generate and check Diffie-Hellman "
"parameters"
msgstr ""

#. type: verbatim
#: C/crypto/DH_generate_parameters.pod:11
#, no-wrap
msgid ""
" DH *DH_generate_parameters(int prime_len, int generator,\n"
"     void (*callback)(int, int, void *), void *cb_arg);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_generate_parameters.pod:14
#, no-wrap
msgid ""
" int DH_check(DH *dh, int *codes);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:18
msgid ""
"DH_generate_parameters() generates Diffie-Hellman parameters that can be "
"shared among a group of users, and returns them in a newly allocated B<DH> "
"structure. The pseudo-random number generator must be seeded prior to "
"calling DH_generate_parameters()."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:23
msgid ""
"B<prime_len> is the length in bits of the safe prime to be generated.  "
"B<generator> is a small number E<gt> 1, typically 2 or 5."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:26
msgid ""
"A callback function may be used to provide feedback about the progress of "
"the key generation. If B<callback> is not B<NULL>, it will be called as "
"described in L<BN_generate_prime(3)|BN_generate_prime(3)> while a random "
"prime number is generated, and when a prime has been found, B<callback(3, 0, "
"cb_arg)> is called."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:32
msgid ""
"DH_check() validates Diffie-Hellman parameters. It checks that B<p> is a "
"safe prime, and that B<g> is a suitable generator. In the case of an error, "
"the bit flags DH_CHECK_P_NOT_SAFE_PRIME or DH_NOT_SUITABLE_GENERATOR are set "
"in B<*codes>.  DH_UNABLE_TO_CHECK_GENERATOR is set if the generator cannot "
"be checked, i.e. it does not equal 2 or 5."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:41
msgid ""
"DH_generate_parameters() returns a pointer to the DH structure, or NULL if "
"the parameter generation fails. The error codes can be obtained by "
"L<ERR_get_error(3)|ERR_get_error(3)>."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:45
msgid "DH_check() returns 1 if the check could be performed, 0 otherwise."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:49
msgid ""
"DH_generate_parameters() may run for several hours before finding a suitable "
"prime."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:52
msgid ""
"The parameters generated by DH_generate_parameters() are not to be used in "
"signature schemes."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:57
msgid ""
"If B<generator> is not 2 or 5, B<dh-E<gt>g>=B<generator> is not a usable "
"generator."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:62
msgid ""
"L<dh(3)|dh(3)>, L<ERR_get_error(3)|ERR_get_error(3)>, L<rand(3)|rand(3)>, "
"L<DH_free(3)|DH_free(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:67
msgid ""
"DH_check() is available in all versions of SSLeay and OpenSSL.  The "
"B<cb_arg> argument to DH_generate_parameters() was added in SSLeay 0.9.0."
msgstr ""

#. type: textblock
#: C/crypto/DH_generate_parameters.pod:70
msgid ""
"In versions before OpenSSL 0.9.5, DH_CHECK_P_NOT_STRONG_PRIME is used "
"instead of DH_CHECK_P_NOT_SAFE_PRIME."
msgstr ""

#. type: textblock
#: C/crypto/DH_get_ex_new_index.pod:5
msgid ""
"DH_get_ex_new_index, DH_set_ex_data, DH_get_ex_data - add application "
"specific data to DH structures"
msgstr ""

#. type: verbatim
#: C/crypto/DH_get_ex_new_index.pod:11
#, no-wrap
msgid ""
" int DH_get_ex_new_index(long argl, void *argp,\n"
"\t\tCRYPTO_EX_new *new_func,\n"
"\t\tCRYPTO_EX_dup *dup_func,\n"
"\t\tCRYPTO_EX_free *free_func);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_get_ex_new_index.pod:16
#, no-wrap
msgid ""
" int DH_set_ex_data(DH *d, int idx, void *arg);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_get_ex_new_index.pod:18
#, no-wrap
msgid ""
" char *DH_get_ex_data(DH *d, int idx);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_get_ex_new_index.pod:22
msgid ""
"These functions handle application specific data in DH structures. Their "
"usage is identical to that of RSA_get_ex_new_index(), RSA_set_ex_data() and "
"RSA_get_ex_data()  as described in L<RSA_get_ex_new_index(3)>."
msgstr ""

#. type: textblock
#: C/crypto/DH_get_ex_new_index.pod:29
msgid "L<RSA_get_ex_new_index(3)|RSA_get_ex_new_index(3)>, L<dh(3)|dh(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_get_ex_new_index.pod:33
msgid ""
"DH_get_ex_new_index(), DH_set_ex_data() and DH_get_ex_data() are available "
"since OpenSSL 0.9.5."
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:5
msgid "DH_new, DH_free - allocate and free DH objects"
msgstr ""

#. type: verbatim
#: C/crypto/DH_new.pod:11
#, no-wrap
msgid ""
" DH* DH_new(void);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_new.pod:13
#, no-wrap
msgid ""
" void DH_free(DH *dh);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:17
msgid "DH_new() allocates and initializes a B<DH> structure."
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:19
msgid ""
"DH_free() frees the B<DH> structure and its components. The values are "
"erased before the memory is returned to the system."
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:24
msgid ""
"If the allocation fails, DH_new() returns B<NULL> and sets an error code "
"that can be obtained by L<ERR_get_error(3)|ERR_get_error(3)>. Otherwise it "
"returns a pointer to the newly allocated structure."
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:28
msgid "DH_free() returns no value."
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:32
msgid ""
"L<dh(3)|dh(3)>, L<ERR_get_error(3)|ERR_get_error(3)>, "
"L<DH_generate_parameters(3)|DH_generate_parameters(3)>, "
"L<DH_generate_key(3)|DH_generate_key(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_new.pod:38
msgid "DH_new() and DH_free() are available in all versions of SSLeay and OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:5
msgid ""
"DH_set_default_method, DH_get_default_method, DH_set_method, DH_new_method, "
"DH_OpenSSL - select DH method"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:10 C/crypto/dh.pod:9
#, no-wrap
msgid ""
" #include <openssl/dh.h>\n"
" #include <openssl/engine.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:13
#, no-wrap
msgid ""
" void DH_set_default_method(const DH_METHOD *meth);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:15
#, no-wrap
msgid ""
" const DH_METHOD *DH_get_default_method(void);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:17
#, no-wrap
msgid ""
" int DH_set_method(DH *dh, const DH_METHOD *meth);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:19
#, no-wrap
msgid ""
" DH *DH_new_method(ENGINE *engine);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:21
#, no-wrap
msgid ""
" const DH_METHOD *DH_OpenSSL(void);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:25
msgid ""
"A B<DH_METHOD> specifies the functions that OpenSSL uses for Diffie-Hellman "
"operations. By modifying the method, alternative implementations such as "
"hardware accelerators may be used. IMPORTANT: See the NOTES section for "
"important information about how these DH API functions are affected by the "
"use of B<ENGINE> API calls."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:31
msgid ""
"Initially, the default DH_METHOD is the OpenSSL internal implementation, as "
"returned by DH_OpenSSL()."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:34
msgid ""
"DH_set_default_method() makes B<meth> the default method for all DH "
"structures created later. B<NB>: This is true only whilst no ENGINE has been "
"set as a default for DH, so this function is no longer recommended."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:38
msgid ""
"DH_get_default_method() returns a pointer to the current default DH_METHOD.  "
"However, the meaningfulness of this result is dependent on whether the "
"ENGINE API is being used, so this function is no longer recommended."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:42
msgid ""
"DH_set_method() selects B<meth> to perform all operations using the key "
"B<dh>.  This will replace the DH_METHOD used by the DH key and if the "
"previous method was supplied by an ENGINE, the handle to that ENGINE will be "
"released during the change. It is possible to have DH keys that only work "
"with certain DH_METHOD implementations (eg. from an ENGINE module that "
"supports embedded hardware-protected keys), and in such cases attempting to "
"change the DH_METHOD for the key can have unexpected results."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:50
msgid ""
"DH_new_method() allocates and initializes a DH structure so that B<engine> "
"will be used for the DH operations. If B<engine> is NULL, the default ENGINE "
"for DH operations is used, and if no default ENGINE is set, the DH_METHOD "
"controlled by DH_set_default_method() is used."
msgstr ""

#. type: =head1
#: C/crypto/DH_set_method.pod:55
msgid "THE DH_METHOD STRUCTURE"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:57
#, no-wrap
msgid ""
" typedef struct dh_meth_st\n"
" {\n"
"     /* name of the implementation */\n"
"\tconst char *name;\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:62
#, no-wrap
msgid ""
"     /* generate private and public DH values for key agreement */\n"
"        int (*generate_key)(DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:65
#, no-wrap
msgid ""
"     /* compute shared secret */\n"
"        int (*compute_key)(unsigned char *key, BIGNUM *pub_key, DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:68
#, no-wrap
msgid ""
"     /* compute r = a ^ p mod m (May be NULL for some implementations) */\n"
"        int (*bn_mod_exp)(DH *dh, BIGNUM *r, BIGNUM *a, const BIGNUM *p,\n"
"                                const BIGNUM *m, BN_CTX *ctx,\n"
"                                BN_MONT_CTX *m_ctx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:73
#, no-wrap
msgid ""
"     /* called at DH_new */\n"
"        int (*init)(DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:76
#, no-wrap
msgid ""
"     /* called at DH_free */\n"
"        int (*finish)(DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:79
#, no-wrap
msgid ""
"        int flags;\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:81
#, no-wrap
msgid ""
"        char *app_data; /* ?? */\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/DH_set_method.pod:83
#, no-wrap
msgid ""
" } DH_METHOD;\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:87
msgid ""
"DH_OpenSSL() and DH_get_default_method() return pointers to the respective "
"B<DH_METHOD>s."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:90
msgid "DH_set_default_method() returns no value."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:92
msgid ""
"DH_set_method() returns non-zero if the provided B<meth> was successfully "
"set as the method for B<dh> (including unloading the ENGINE handle if the "
"previous method was supplied by an ENGINE)."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:96
msgid ""
"DH_new_method() returns NULL and sets an error code that can be obtained by "
"L<ERR_get_error(3)|ERR_get_error(3)> if the allocation fails. Otherwise it "
"returns a pointer to the newly allocated structure."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:102
msgid ""
"As of version 0.9.7, DH_METHOD implementations are grouped together with "
"other algorithmic APIs (eg. RSA_METHOD, EVP_CIPHER, etc) in B<ENGINE> "
"modules. If a default ENGINE is specified for DH functionality using an "
"ENGINE API function, that will override any DH defaults set using the DH API "
"(ie.  DH_set_default_method()). For this reason, the ENGINE API is the "
"recommended way to control default implementations for use in DH and other "
"cryptographic algorithms."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:112
msgid "L<dh(3)|dh(3)>, L<DH_new(3)|DH_new(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:116
msgid ""
"DH_set_default_method(), DH_get_default_method(), DH_set_method(), "
"DH_new_method() and DH_OpenSSL() were added in OpenSSL 0.9.4."
msgstr ""

#. type: textblock
#: C/crypto/DH_set_method.pod:119
msgid ""
"DH_set_default_openssl_method() and DH_get_default_openssl_method() replaced "
"DH_set_default_method() and DH_get_default_method() respectively, and "
"DH_set_method() and DH_new_method() were altered to use B<ENGINE>s rather "
"than B<DH_METHOD>s during development of the engine version of OpenSSL "
"0.9.6. For 0.9.7, the handling of defaults in the ENGINE API was "
"restructured so that this change was reversed, and behaviour of the other "
"functions resembled more closely the previous behaviour. The behaviour of "
"defaults in the ENGINE API now transparently overrides the behaviour of "
"defaults in the DH API without requiring changing these function prototypes."
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:5
msgid "DH_size - get Diffie-Hellman prime size"
msgstr ""

#. type: verbatim
#: C/crypto/DH_size.pod:11
#, no-wrap
msgid ""
" int DH_size(DH *dh);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:15
msgid ""
"This function returns the Diffie-Hellman size in bytes. It can be used to "
"determine how much memory must be allocated for the shared secret computed "
"by DH_compute_key()."
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:19
msgid "B<dh-E<gt>p> must not be B<NULL>."
msgstr ""

#. type: =head1
#: C/crypto/DH_size.pod:21
msgid "RETURN VALUE"
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:23
msgid "The size in bytes."
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:27
msgid "L<dh(3)|dh(3)>, L<DH_generate_key(3)|DH_generate_key(3)>"
msgstr ""

#. type: textblock
#: C/crypto/DH_size.pod:31
msgid "DH_size() is available in all versions of SSLeay and OpenSSL."
msgstr ""

#. type: textblock
#: C/crypto/dh.pod:5
msgid "dh - Diffie-Hellman key agreement"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:12
#, no-wrap
msgid ""
" DH *\tDH_new(void);\n"
" void\tDH_free(DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:15
#, no-wrap
msgid ""
" int\tDH_size(const DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:17
#, no-wrap
msgid ""
" DH *\tDH_generate_parameters(int prime_len, int generator,\n"
"\t\tvoid (*callback)(int, int, void *), void *cb_arg);\n"
" int\tDH_check(const DH *dh, int *codes);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:21
#, no-wrap
msgid ""
" int\tDH_generate_key(DH *dh);\n"
" int\tDH_compute_key(unsigned char *key, BIGNUM *pub_key, DH *dh);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:24
#, no-wrap
msgid ""
" void DH_set_default_method(const DH_METHOD *meth);\n"
" const DH_METHOD *DH_get_default_method(void);\n"
" int DH_set_method(DH *dh, const DH_METHOD *meth);\n"
" DH *DH_new_method(ENGINE *engine);\n"
" const DH_METHOD *DH_OpenSSL(void);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:30
#, no-wrap
msgid ""
" int DH_get_ex_new_index(long argl, char *argp, int (*new_func)(),\n"
"\t     int (*dup_func)(), void (*free_func)());\n"
" int DH_set_ex_data(DH *d, int idx, char *arg);\n"
" char *DH_get_ex_data(DH *d, int idx);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:35
#, no-wrap
msgid ""
" DH *\td2i_DHparams(DH **a, unsigned char **pp, long length);\n"
" int\ti2d_DHparams(const DH *a, unsigned char **pp);\n"
"\n"
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:38
#, no-wrap
msgid ""
" int\tDHparams_print_fp(FILE *fp, const DH *x);\n"
" int\tDHparams_print(BIO *bp, const DH *x);\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/dh.pod:43
msgid ""
"These functions implement the Diffie-Hellman key agreement protocol.  The "
"generation of shared DH parameters is described in "
"L<DH_generate_parameters(3)|DH_generate_parameters(3)>; "
"L<DH_generate_key(3)|DH_generate_key(3)> describes how to perform a key "
"agreement."
msgstr ""

#. type: textblock
#: C/crypto/dh.pod:48
msgid "The B<DH> structure consists of several BIGNUM components."
msgstr ""

#. type: verbatim
#: C/crypto/dh.pod:50
#, no-wrap
msgid ""
" struct\n"
"        {\n"
"        BIGNUM *p;\t\t// prime number (shared)\n"
"        BIGNUM *g;\t\t// generator of Z_p (shared)\n"
"        BIGNUM *priv_key;\t// private DH value x\n"
"        BIGNUM *pub_key;\t// public DH value g^x\n"
"        // ...\n"
"        };\n"
" DH\n"
"\n"
msgstr ""

#. type: textblock
#: C/crypto/dh.pod:60
msgid ""
"Note that DH keys may use non-standard B<DH_METHOD> implementations, either "
"directly or by the use of B<ENGINE> modules. In some cases (eg. an ENGINE "
"providing support for hardware-embedded keys), these BIGNUM values will not "
"be used by the implementation or may be used for alternative data "
"storage. For this reason, applications should generally avoid using DH "
"structure elements directly and instead use API functions to query or modify "
"keys."
msgstr ""

#. type: textblock
#: C/crypto/dh.pod:70
msgid ""
"L<dhparam(1)|dhparam(1)>, L<bn(3)|bn(3)>, L<dsa(3)|dsa(3)>, "
"L<err(3)|err(3)>, L<rand(3)|rand(3)>, L<rsa(3)|rsa(3)>, "
"L<engine(3)|engine(3)>, L<DH_set_method(3)|DH_set_method(3)>, "
"L<DH_new(3)|DH_new(3)>, L<DH_get_ex_new_index(3)|DH_get_ex_new_index(3)>, "
"L<DH_generate_parameters(3)|DH_generate_parameters(3)>, "
"L<DH_compute_key(3)|DH_compute_key(3)>, L<d2i_DHparams(3)|d2i_DHparams(3)>, "
"L<RSA_print(3)|RSA_print(3)>"
msgstr ""
