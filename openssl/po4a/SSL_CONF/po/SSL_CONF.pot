# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2015-05-06 17:00-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:3 C/ssl/SSL_CONF_cmd.pod:3 C/ssl/SSL_CONF_CTX_new.pod:3 C/ssl/SSL_CONF_CTX_set1_prefix.pod:3 C/ssl/SSL_CONF_CTX_set_flags.pod:3 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:3
msgid "NAME"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:5
msgid "SSL_CONF_cmd_argv - SSL configuration command line processing."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:7 C/ssl/SSL_CONF_cmd.pod:7 C/ssl/SSL_CONF_CTX_new.pod:7 C/ssl/SSL_CONF_CTX_set1_prefix.pod:7 C/ssl/SSL_CONF_CTX_set_flags.pod:7 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:7
msgid "SYNOPSIS"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd_argv.pod:9 C/ssl/SSL_CONF_cmd.pod:9 C/ssl/SSL_CONF_CTX_new.pod:9 C/ssl/SSL_CONF_CTX_set1_prefix.pod:9 C/ssl/SSL_CONF_CTX_set_flags.pod:9 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:9
#, no-wrap
msgid ""
" #include <openssl/ssl.h>\n"
"\n"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd_argv.pod:11
#, no-wrap
msgid ""
" int SSL_CONF_cmd_argv(SSL_CONF_CTX *cctx, int *pargc, char ***pargv);\n"
"\n"
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:13 C/ssl/SSL_CONF_cmd.pod:15 C/ssl/SSL_CONF_CTX_new.pod:14 C/ssl/SSL_CONF_CTX_set1_prefix.pod:13 C/ssl/SSL_CONF_CTX_set_flags.pod:14 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:14
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:15
msgid ""
"The function SSL_CONF_cmd_argv() processes at most two command line "
"arguments from B<pargv> and B<pargc>. The values of B<pargv> and B<pargc> "
"are updated to reflect the number of command options processed. The B<pargc> "
"argument can be set to B<NULL> is it is not used."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:20 C/ssl/SSL_CONF_cmd.pod:407 C/ssl/SSL_CONF_CTX_new.pod:21 C/ssl/SSL_CONF_CTX_set1_prefix.pod:33 C/ssl/SSL_CONF_CTX_set_flags.pod:51 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:31
msgid "RETURN VALUES"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:22
msgid ""
"SSL_CONF_cmd_argv() returns the number of command arguments processed: 0, 1, "
"2 or a negative error code."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:25
msgid "If -2 is returned then an argument for a command is missing."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:27
msgid ""
"If -1 is returned the command is recognised but couldn't be processed due to "
"an error: for example a syntax error in the argument."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:30 C/ssl/SSL_CONF_cmd.pod:426 C/ssl/SSL_CONF_CTX_new.pod:28 C/ssl/SSL_CONF_CTX_set1_prefix.pod:37 C/ssl/SSL_CONF_CTX_set_flags.pod:56 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:35
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:32
msgid ""
"L<SSL_CONF_CTX_new(3)|SSL_CONF_CTX_new(3)>, "
"L<SSL_CONF_CTX_set_flags(3)|SSL_CONF_CTX_set_flags(3)>, "
"L<SSL_CONF_CTX_set1_prefix(3)|SSL_CONF_CTX_set1_prefix(3)>, "
"L<SSL_CONF_CTX_set_ssl_ctx(3)|SSL_CONF_CTX_set_ssl_ctx(3)>, "
"L<SSL_CONF_cmd(3)|SSL_CONF_cmd(3)>"
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd_argv.pod:38 C/ssl/SSL_CONF_cmd.pod:434 C/ssl/SSL_CONF_CTX_new.pod:36 C/ssl/SSL_CONF_CTX_set1_prefix.pod:45 C/ssl/SSL_CONF_CTX_set_flags.pod:64 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:43
msgid "HISTORY"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd_argv.pod:40 C/ssl/SSL_CONF_CTX_new.pod:38 C/ssl/SSL_CONF_CTX_set1_prefix.pod:47 C/ssl/SSL_CONF_CTX_set_flags.pod:66 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:45
msgid "These functions were first added to OpenSSL 1.0.2"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:5
msgid "SSL_CONF_cmd - send configuration command"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:11
#, no-wrap
msgid ""
" int SSL_CONF_cmd(SSL_CONF_CTX *cctx, const char *cmd, const char *value);\n"
" int SSL_CONF_cmd_value_type(SSL_CONF_CTX *cctx, const char *cmd);\n"
" int SSL_CONF_finish(SSL_CONF_CTX *cctx);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:17
msgid ""
"The function SSL_CONF_cmd() performs configuration operation B<cmd> with "
"optional parameter B<value> on B<ctx>. Its purpose is to simplify "
"application configuration of B<SSL_CTX> or B<SSL> structures by providing a "
"common framework for command line options or configuration files."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:22
msgid "SSL_CONF_cmd_value_type() returns the type of value that B<cmd> refers to."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:24
msgid ""
"The function SSL_CONF_finish() must be called after all configuration "
"operations have been completed. It is used to finalise any operations or to "
"process defaults."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd.pod:28
msgid "SUPPORTED COMMAND LINE COMMANDS"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:30
msgid ""
"Currently supported B<cmd> names for command lines (i.e. when the flag "
"B<SSL_CONF_CMDLINE> is set) are listed below. Note: all B<cmd> names are "
"case sensitive. Unless otherwise stated commands can be used by both clients "
"and servers and the B<value> parameter is not used. The default prefix for "
"command line commands is B<-> and that is reflected below."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:38
msgid "B<-sigalgs>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:40 C/ssl/SSL_CONF_cmd.pod:211
msgid ""
"This sets the supported signature algorithms for TLS v1.2. For clients this "
"value is used directly for the supported signature algorithms extension. For "
"servers it is used to determine which signature algorithms to support."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:44 C/ssl/SSL_CONF_cmd.pod:215
msgid ""
"The B<value> argument should be a colon separated list of signature "
"algorithms in order of decreasing preference of the form "
"B<algorithm+hash>. B<algorithm> is one of B<RSA>, B<DSA> or B<ECDSA> and "
"B<hash> is a supported algorithm OID short name such as B<SHA1>, B<SHA224>, "
"B<SHA256>, B<SHA384> of B<SHA512>.  Note: algorithm and hash names are case "
"sensitive."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:50 C/ssl/SSL_CONF_cmd.pod:221
msgid ""
"If this option is not set then all signature algorithms supported by the "
"OpenSSL library are permissible."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:53
msgid "B<-client_sigalgs>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:55
msgid ""
"This sets the supported signature algorithms associated with client "
"authentication for TLS v1.2. For servers the value is used in the supported "
"signature algorithms field of a certificate request. For clients it is used "
"to determine which signature algorithm to with the client certificate.  If a "
"server does not request a certificate this option has no effect."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:61
msgid ""
"The syntax of B<value> is identical to B<-sigalgs>. If not set then the "
"value set for B<-sigalgs> will be used instead."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:64
msgid "B<-curves>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:66 C/ssl/SSL_CONF_cmd.pod:236
msgid ""
"This sets the supported elliptic curves. For clients the curves are sent "
"using the supported curves extension. For servers it is used to determine "
"which curve to use. This setting affects curves used for both signatures and "
"key exchange, if applicable."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:71 C/ssl/SSL_CONF_cmd.pod:241
msgid ""
"The B<value> argument is a colon separated list of curves. The curve can be "
"either the B<NIST> name (e.g. B<P-256>) or an OpenSSL OID name (e.g "
"B<prime256v1>). Curve names are case sensitive."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:75
msgid "B<-named_curve>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:77 C/ssl/SSL_CONF_cmd.pod:247
msgid ""
"This sets the temporary curve used for ephemeral ECDH modes. Only used by "
"servers"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:80
msgid ""
"The B<value> argument is a curve name or the special value B<auto> which "
"picks an appropriate curve based on client and server preferences. The curve "
"can be either the B<NIST> name (e.g. B<P-256>) or an OpenSSL OID name (e.g "
"B<prime256v1>). Curve names are case sensitive."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:85
msgid "B<-cipher>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:87
msgid ""
"Sets the cipher suite list to B<value>. Note: syntax checking of B<value> is "
"currently not performed unless a B<SSL> or B<SSL_CTX> structure is "
"associated with B<cctx>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:91
msgid "B<-cert>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:93 C/ssl/SSL_CONF_cmd.pod:185
msgid ""
"Attempts to use the file B<value> as the certificate for the appropriate "
"context. It currently uses SSL_CTX_use_certificate_chain_file() if an "
"B<SSL_CTX> structure is set or SSL_use_certificate_file() with filetype PEM "
"if an B<SSL> structure is set. This option is only supported if certificate "
"operations are permitted."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:99
msgid "B<-key>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:101
msgid ""
"Attempts to use the file B<value> as the private key for the appropriate "
"context. This option is only supported if certificate operations are "
"permitted. Note: if no B<-key> option is set then a private key is not "
"loaded: it does not currently use the B<-cert> file."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:106
msgid "B<-dhparam>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:108 C/ssl/SSL_CONF_cmd.pod:205
msgid ""
"Attempts to use the file B<value> as the set of temporary DH parameters for "
"the appropriate context. This option is only supported if certificate "
"operations are permitted."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:112
msgid "B<-no_ssl2>, B<-no_ssl3>, B<-no_tls1>, B<-no_tls1_1>, B<-no_tls1_2>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:114
msgid ""
"Disables protocol support for SSLv2, SSLv3, TLS 1.0, TLS 1.1 or TLS 1.2 by "
"setting the corresponding options B<SSL_OP_NO_SSL2>, B<SSL_OP_NO_SSL3>, "
"B<SSL_OP_NO_TLS1>, B<SSL_OP_NO_TLS1_1> and B<SSL_OP_NO_TLS1_2> respectively."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:118
msgid "B<-bugs>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:120
msgid "Various bug workarounds are set, same as setting B<SSL_OP_ALL>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:122
msgid "B<-no_comp>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:124
msgid ""
"Disables support for SSL/TLS compression, same as setting "
"B<SSL_OP_NO_COMPRESS>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:126
msgid "B<-no_ticket>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:128
msgid "Disables support for session tickets, same as setting B<SSL_OP_NO_TICKET>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:130
msgid "B<-serverpref>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:132
msgid ""
"Use server and not client preference order when determining which cipher "
"suite, signature algorithm or elliptic curve to use for an incoming "
"connection.  Equivalent to B<SSL_OP_CIPHER_SERVER_PREFERENCE>. Only used by "
"servers."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:136
msgid "B<-no_resumption_on_reneg>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:138
msgid ""
"set SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION flag. Only used by "
"servers."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:140
msgid "B<-legacyrenegotiation>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:142
msgid ""
"permits the use of unsafe legacy renegotiation. Equivalent to setting "
"B<SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:145
msgid "B<-legacy_server_connect>, B<-no_legacy_server_connect>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:147
msgid ""
"permits or prohibits the use of unsafe legacy renegotiation for OpenSSL "
"clients only. Equivalent to setting or clearing "
"B<SSL_OP_LEGACY_SERVER_CONNECT>.  Set by default."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:151
msgid "B<-strict>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:153
msgid ""
"enables strict mode protocol handling. Equivalent to setting "
"B<SSL_CERT_FLAG_TLS_STRICT>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:156
msgid "B<-debug_broken_protocol>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:158
msgid ""
"disables various checks and permits several kinds of broken protocol "
"behaviour for testing purposes: it should B<NEVER> be used in anything other "
"than a test environment. Only supported if OpenSSL is configured with "
"B<-DOPENSSL_SSL_DEBUG_BROKEN_PROTOCOL>."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd.pod:165
msgid "SUPPORTED CONFIGURATION FILE COMMANDS"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:167
msgid ""
"Currently supported B<cmd> names for configuration files (i.e. when the flag "
"B<SSL_CONF_FLAG_FILE> is set) are listed below. All configuration file "
"B<cmd> names and are case insensitive so B<signaturealgorithms> is "
"recognised as well as B<SignatureAlgorithms>. Unless otherwise stated the "
"B<value> names are also case insensitive."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:173
msgid "Note: the command prefix (if set) alters the recognised B<cmd> values."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:177
msgid "B<CipherString>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:179
msgid ""
"Sets the cipher suite list to B<value>. Note: syntax checking of B<value> is "
"currently not performed unless an B<SSL> or B<SSL_CTX> structure is "
"associated with B<cctx>."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:183
msgid "B<Certificate>"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:191
msgid "B<PrivateKey>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:193
msgid ""
"Attempts to use the file B<value> as the private key for the appropriate "
"context. This option is only supported if certificate operations are "
"permitted. Note: if no B<-key> option is set then a private key is not "
"loaded: it does not currently use the B<Certificate> file."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:198
msgid "B<ServerInfoFile>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:200
msgid ""
"Attempts to use the file B<value> in the \"serverinfo\" extension using the "
"function SSL_CTX_use_serverinfo_file."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:203
msgid "B<DHParameters>"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:209
msgid "B<SignatureAlgorithms>"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:224
msgid "B<ClientSignatureAlgorithms>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:226
msgid ""
"This sets the supported signature algorithms associated with client "
"authentication for TLS v1.2. For servers the value is used in the supported "
"signature algorithms field of a certificate request. For clients it is used "
"to determine which signature algorithm to with the client certificate."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:231
msgid ""
"The syntax of B<value> is identical to B<SignatureAlgorithms>. If not set "
"then the value set for B<SignatureAlgorithms> will be used instead."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:234
msgid "B<Curves>"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:245
msgid "B<ECDHParameters>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:250
msgid ""
"The B<value> argument is a curve name or the special value B<Automatic> "
"which picks an appropriate curve based on client and server preferences. The "
"curve can be either the B<NIST> name (e.g. B<P-256>) or an OpenSSL OID name "
"(e.g B<prime256v1>). Curve names are case sensitive."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:255
msgid "B<Protocol>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:257
msgid "The supported versions of the SSL or TLS protocol."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:259
msgid ""
"The B<value> argument is a comma separated list of supported protocols to "
"enable or disable. If an protocol is preceded by B<-> that version is "
"disabled.  All versions are enabled by default, though applications may "
"choose to explicitly disable some. Currently supported protocol values are "
"B<SSLv2>, B<SSLv3>, B<TLSv1>, B<TLSv1.1> and B<TLSv1.2>. The special value "
"B<ALL> refers to all supported versions."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:266
msgid "B<Options>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:268
msgid ""
"The B<value> argument is a comma separated list of various flags to set.  If "
"a flag string is preceded B<-> it is disabled. See the "
"B<SSL_CTX_set_options> function for more details of individual options."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:272
msgid ""
"Each option is listed below. Where an operation is enabled by default the "
"B<-flag> syntax is needed to disable it."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:275
msgid ""
"B<SessionTicket>: session ticket support, enabled by default. Inverse of "
"B<SSL_OP_NO_TICKET>: that is B<-SessionTicket> is the same as setting "
"B<SSL_OP_NO_TICKET>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:279
msgid ""
"B<Compression>: SSL/TLS compression support, enabled by default. Inverse of "
"B<SSL_OP_NO_COMPRESSION>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:282
msgid ""
"B<EmptyFragments>: use empty fragments as a countermeasure against a SSL "
"3.0/TLS 1.0 protocol vulnerability affecting CBC ciphers. It is set by "
"default. Inverse of B<SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:286
msgid "B<Bugs>: enable various bug workarounds. Same as B<SSL_OP_ALL>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:288
msgid ""
"B<DHSingle>: enable single use DH keys, set by default. Inverse of "
"B<SSL_OP_DH_SINGLE>. Only used by servers."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:291
msgid ""
"B<ECDHSingle> enable single use ECDH keys, set by default. Inverse of "
"B<SSL_OP_ECDH_SINGLE>. Only used by servers."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:294
msgid ""
"B<ServerPreference> use server and not client preference order when "
"determining which cipher suite, signature algorithm or elliptic curve to use "
"for an incoming connection.  Equivalent to "
"B<SSL_OP_CIPHER_SERVER_PREFERENCE>. Only used by servers."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:299
msgid ""
"B<NoResumptionOnRenegotiation> set "
"B<SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION> flag. Only used by servers."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:302
msgid ""
"B<UnsafeLegacyRenegotiation> permits the use of unsafe legacy "
"renegotiation.  Equivalent to B<SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:305
msgid ""
"B<UnsafeLegacyServerConnect> permits the use of unsafe legacy renegotiation "
"for OpenSSL clients only. Equivalent to B<SSL_OP_LEGACY_SERVER_CONNECT>.  "
"Set by default."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd.pod:311
msgid "SUPPORTED COMMAND TYPES"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:313
msgid ""
"The function SSL_CONF_cmd_value_type() currently returns one of the "
"following types:"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:318
msgid "B<SSL_CONF_TYPE_UNKNOWN>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:320
msgid ""
"The B<cmd> string is unrecognised, this return value can be use to flag "
"syntax errors."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:323
msgid "B<SSL_CONF_TYPE_STRING>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:325
msgid "The value is a string without any specific structure."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:327
msgid "B<SSL_CONF_TYPE_FILE>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:329
msgid "The value is a file name."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_cmd.pod:331
msgid "B<SSL_CONF_TYPE_DIR>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:333
msgid "The value is a directory name."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd.pod:337 C/ssl/SSL_CONF_CTX_set1_prefix.pod:18 C/ssl/SSL_CONF_CTX_set_flags.pod:20 C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:26
msgid "NOTES"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:339
msgid ""
"The order of operations is significant. This can be used to set either "
"defaults or values which cannot be overridden. For example if an application "
"calls:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:342
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"Protocol\", \"-SSLv2\");\n"
" SSL_CONF_cmd(ctx, userparam, uservalue);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:345
msgid ""
"it will disable SSLv2 support by default but the user can override it. If "
"however the call sequence is:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:348
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, userparam, uservalue);\n"
" SSL_CONF_cmd(ctx, \"Protocol\", \"-SSLv2\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:351
msgid ""
"SSLv2 is B<always> disabled and attempt to override this by the user are "
"ignored."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:354
msgid ""
"By checking the return code of SSL_CTX_cmd() it is possible to query if a "
"given B<cmd> is recognised, this is useful is SSL_CTX_cmd() values are mixed "
"with additional application specific operations."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:358
msgid ""
"For example an application might call SSL_CTX_cmd() and if it returns -2 "
"(unrecognised command) continue with processing of application specific "
"commands."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:362
msgid ""
"Applications can also use SSL_CTX_cmd() to process command lines though the "
"utility function SSL_CTX_cmd_argv() is normally used instead. One way to do "
"this is to set the prefix to an appropriate value using "
"SSL_CONF_CTX_set1_prefix(), pass the current argument to B<cmd> and the "
"following argument to B<value> (which may be NULL)."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:368
msgid ""
"In this case if the return value is positive then it is used to skip that "
"number of arguments as they have been processed by SSL_CTX_cmd(). If -2 is "
"returned then B<cmd> is not recognised and application specific arguments "
"can be checked instead. If -3 is returned a required argument is missing and "
"an error is indicated. If 0 is returned some other error occurred and this "
"can be reported back to the user."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:375
msgid ""
"The function SSL_CONF_cmd_value_type() can be used by applications to check "
"for the existence of a command or to perform additional syntax checking or "
"translation of the command value. For example if the return value is "
"B<SSL_CONF_TYPE_FILE> an application could translate a relative pathname to "
"an absolute pathname."
msgstr ""

#. type: =head1
#: C/ssl/SSL_CONF_cmd.pod:381
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:383
msgid "Set supported signature algorithms:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:385
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"SignatureAlgorithms\", "
"\"ECDSA+SHA256:RSA+SHA256:DSA+SHA256\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:387
msgid "Enable all protocols except SSLv3 and SSLv2:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:389
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"Protocol\", \"ALL,-SSLv3,-SSLv2\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:391
msgid "Only enable TLSv1.2:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:393
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"Protocol\", \"-ALL,TLSv1.2\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:395
msgid "Disable TLS session tickets:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:397
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"Options\", \"-SessionTicket\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:399
msgid "Set supported curves to P-256, P-384:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:401
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"Curves\", \"P-256:P-384\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:403
msgid "Set automatic support for any elliptic curve for key exchange:"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_cmd.pod:405
#, no-wrap
msgid ""
" SSL_CONF_cmd(ctx, \"ECDHParameters\", \"Automatic\");\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:409
msgid ""
"SSL_CONF_cmd() returns 1 if the value of B<cmd> is recognised and B<value> "
"is B<NOT> used and 2 if both B<cmd> and B<value> are used. In other words it "
"returns the number of arguments processed. This is useful when processing "
"command lines."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:414
msgid "A return value of -2 means B<cmd> is not recognised."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:416
msgid ""
"A return value of -3 means B<cmd> is recognised and the command requires a "
"value but B<value> is NULL."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:419
msgid ""
"A return code of 0 indicates that both B<cmd> and B<value> are valid but an "
"error occurred attempting to perform the operation: for example due to an "
"error in the syntax of B<value> in this case the error queue may provide "
"additional information."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:424
msgid "SSL_CONF_finish() returns 1 for success and 0 for failure."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:428
msgid ""
"L<SSL_CONF_CTX_new(3)|SSL_CONF_CTX_new(3)>, "
"L<SSL_CONF_CTX_set_flags(3)|SSL_CONF_CTX_set_flags(3)>, "
"L<SSL_CONF_CTX_set1_prefix(3)|SSL_CONF_CTX_set1_prefix(3)>, "
"L<SSL_CONF_CTX_set_ssl_ctx(3)|SSL_CONF_CTX_set_ssl_ctx(3)>, "
"L<SSL_CONF_cmd_argv(3)|SSL_CONF_cmd_argv(3)>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_cmd.pod:436
msgid "SSL_CONF_cmd() was first added to OpenSSL 1.0.2"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:5
msgid "SSL_CONF_CTX_new, SSL_CONF_CTX_free - SSL configuration allocation functions"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_CTX_new.pod:11
#, no-wrap
msgid ""
" SSL_CONF_CTX *SSL_CONF_CTX_new(void);\n"
" void SSL_CONF_CTX_free(SSL_CONF_CTX *cctx);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:16
msgid ""
"The function SSL_CONF_CTX_new() allocates and initialises an B<SSL_CONF_CTX> "
"structure for use with the SSL_CONF functions."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:19
msgid "The function SSL_CONF_CTX_free() frees up the context B<cctx>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:23
msgid ""
"SSL_CONF_CTX_new() returns either the newly allocated B<SSL_CONF_CTX> "
"structure or B<NULL> if an error occurs."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:26
msgid "SSL_CONF_CTX_free() does not return a value."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_new.pod:30
msgid ""
"L<SSL_CONF_CTX_set_flags(3)|SSL_CONF_CTX_set_flags(3)>, "
"L<SSL_CONF_CTX_set_ssl_ctx(3)|SSL_CONF_CTX_set_ssl_ctx(3)>, "
"L<SSL_CONF_CTX_set1_prefix(3)|SSL_CONF_CTX_set1_prefix(3)>, "
"L<SSL_CONF_cmd(3)|SSL_CONF_cmd(3)>, "
"L<SSL_CONF_cmd_argv(3)|SSL_CONF_cmd_argv(3)>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:5
msgid "SSL_CONF_CTX_set1_prefix - Set configuration context command prefix"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:11
#, no-wrap
msgid ""
" unsigned int SSL_CONF_CTX_set1_prefix(SSL_CONF_CTX *cctx, const char "
"*prefix);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:15
msgid ""
"The function SSL_CONF_CTX_set1_prefix() sets the command prefix of B<cctx> "
"to B<prefix>. If B<prefix> is B<NULL> it is restored to the default value."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:20
msgid ""
"Command prefixes alter the commands recognised by subsequent SSL_CTX_cmd()  "
"calls. For example for files, if the prefix \"SSL\" is set then command "
"names such as \"SSLProtocol\", \"SSLOptions\" etc. are recognised instead of "
"\"Protocol\" and \"Options\". Similarly for command lines if the prefix is "
"\"--ssl-\" then \"--ssl-no_tls1_2\" is recognised instead of \"-no_tls1_2\"."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:26
msgid ""
"If the B<SSL_CONF_FLAG_CMDLINE> flag is set then prefix checks are case "
"sensitive and \"-\" is the default. In the unlikely even an application "
"explicitly wants to set no prefix it must be explicitly set to \"\"."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:30
msgid ""
"If the B<SSL_CONF_FLAG_FILE> flag is set then prefix checks are case "
"insensitive and no prefix is the default."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:35
msgid "SSL_CONF_CTX_set1_prefix() returns 1 for success and 0 for failure."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set1_prefix.pod:39
msgid ""
"L<SSL_CONF_CTX_new(3)|SSL_CONF_CTX_new(3)>, "
"L<SSL_CONF_CTX_set_flags(3)|SSL_CONF_CTX_set_flags(3)>, "
"L<SSL_CONF_CTX_set_ssl_ctx(3)|SSL_CONF_CTX_set_ssl_ctx(3)>, "
"L<SSL_CONF_cmd(3)|SSL_CONF_cmd(3)>, "
"L<SSL_CONF_cmd_argv(3)|SSL_CONF_cmd_argv(3)>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:5
msgid ""
"SSL_CONF_CTX_set_flags, SSL_CONF_CTX_clear_flags - Set of clear SSL "
"configuration context flags"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_CTX_set_flags.pod:11
#, no-wrap
msgid ""
" unsigned int SSL_CONF_CTX_set_flags(SSL_CONF_CTX *cctx, unsigned int "
"flags);\n"
" unsigned int SSL_CONF_CTX_clear_flags(SSL_CONF_CTX *cctx, unsigned int "
"flags);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:16
msgid "The function SSL_CONF_CTX_set_flags() sets B<flags> in the context B<cctx>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:18
msgid ""
"The function SSL_CONF_CTX_clear_flags() clears B<flags> in the context "
"B<cctx>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:22
msgid ""
"The flags set affect how subsequent calls to SSL_CONF_cmd() or "
"SSL_CONF_argv() behave."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:25
msgid "Currently the following B<flags> values are recognised:"
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_CTX_set_flags.pod:29
msgid "SSL_CONF_FLAG_CMDLINE, SSL_CONF_FLAG_FILE"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:31
msgid ""
"recognise options intended for command line or configuration file use. At "
"least one of these flags must be set."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_CTX_set_flags.pod:34
msgid "SSL_CONF_FLAG_CLIENT, SSL_CONF_FLAG_SERVER"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:36
msgid ""
"recognise options intended for use in SSL/TLS clients or servers. One or "
"both of these flags must be set."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_CTX_set_flags.pod:39
msgid "SSL_CONF_FLAG_CERTIFICATE"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:41
msgid "recognise certificate and private key options."
msgstr ""

#. type: =item
#: C/ssl/SSL_CONF_CTX_set_flags.pod:43
msgid "SSL_CONF_FLAG_SHOW_ERRORS"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:45
msgid ""
"indicate errors relating to unrecognised options or missing arguments in the "
"error queue. If this option isn't set such errors are only reflected in the "
"return values of SSL_CONF_set_cmd() or SSL_CONF_set_argv()"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:53
msgid ""
"SSL_CONF_CTX_set_flags() and SSL_CONF_CTX_clear_flags() returns the new "
"flags value after setting or clearing flags."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_flags.pod:58
msgid ""
"L<SSL_CONF_CTX_new(3)|SSL_CONF_CTX_new(3)>, "
"L<SSL_CONF_CTX_set_ssl_ctx(3)|SSL_CONF_CTX_set_ssl_ctx(3)>, "
"L<SSL_CONF_CTX_set1_prefix(3)|SSL_CONF_CTX_set1_prefix(3)>, "
"L<SSL_CONF_cmd(3)|SSL_CONF_cmd(3)>, "
"L<SSL_CONF_cmd_argv(3)|SSL_CONF_cmd_argv(3)>"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:5
msgid "SSL_CONF_CTX_set_ssl_ctx, SSL_CONF_CTX_set_ssl - set context to configure"
msgstr ""

#. type: verbatim
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:11
#, no-wrap
msgid ""
" void SSL_CONF_CTX_set_ssl_ctx(SSL_CONF_CTX *cctx, SSL_CTX *ctx);\n"
" void SSL_CONF_CTX_set_ssl(SSL_CONF_CTX *cctx, SSL *ssl);\n"
"\n"
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:16
msgid ""
"SSL_CONF_CTX_set_ssl_ctx() sets the context associated with B<cctx> to the "
"B<SSL_CTX> structure B<ctx>. Any previous B<SSL> or B<SSL_CTX> associated "
"with B<cctx> is cleared. Subsequent calls to SSL_CONF_cmd() will be sent to "
"B<ctx>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:21
msgid ""
"SSL_CONF_CTX_set_ssl() sets the context associated with B<cctx> to the "
"B<SSL> structure B<ssl>. Any previous B<SSL> or B<SSL_CTX> associated with "
"B<cctx> is cleared. Subsequent calls to SSL_CONF_cmd() will be sent to "
"B<ssl>."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:28
msgid ""
"The context need not be set or it can be set to B<NULL> in which case only "
"syntax checking of commands is performed, where possible."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:33
msgid "SSL_CONF_CTX_set_ssl_ctx() and SSL_CTX_set_ssl() do not return a value."
msgstr ""

#. type: textblock
#: C/ssl/SSL_CONF_CTX_set_ssl_ctx.pod:37
msgid ""
"L<SSL_CONF_CTX_new(3)|SSL_CONF_CTX_new(3)>, "
"L<SSL_CONF_CTX_set_flags(3)|SSL_CONF_CTX_set_flags(3)>, "
"L<SSL_CONF_CTX_set1_prefix(3)|SSL_CONF_CTX_set1_prefix(3)>, "
"L<SSL_CONF_cmd(3)|SSL_CONF_cmd(3)>, "
"L<SSL_CONF_cmd_argv(3)|SSL_CONF_cmd_argv(3)>"
msgstr ""
